(()=>{"use strict";let e=[],t=0,s=400,i=540,o=()=>{let i=Date.now(),o=!1;e=e.map(e=>{if(e.isStuck)return e;let s=(i-e.thrownAt)/1e3,n=Math.min(1,s/.3);return 250-n*(2-n)*(250-t)<=t?(o=!0,{...e,isStuck:!0,stuckAngle:90-i/1e3*120%360}):e}).filter(e=>i-e.thrownAt<5e3),o&&self.postMessage({type:"HIT",hitTime:i/1e3}),self.postMessage({type:"UPDATE",payload:{knives:e.map(e=>({...e,position:(e=>{let i=Date.now(),o=(i-e.thrownAt)/1e3;if(e.isStuck){let s=i/1e3*120%360+e.stuckAngle,o=s*Math.PI/180,n=t+32-10,a=Math.cos(o)*n;return{x:a,y:Math.sin(o)*n,rotation:s+-90}}return{x:0,y:250-o*s,rotation:0}})(e)}))}})};self.onmessage=n=>{let{type:a,payload:r}=n.data;switch(console.log("[physics.worker] Received message:",a,r),a){case"INIT":t=r.targetRadius,s=r.velocity,i=r.rotationSpeed,console.log("[physics.worker] Initialized with:",{targetRadius:t,velocity:s,rotationSpeed:i}),setInterval(o,1e3/60);break;case"THROW":console.log("[physics.worker] Adding knife:",r.knife),e.push(r.knife);break;case"RESET":console.log("[physics.worker] Resetting knives"),e=[]}}})(),_N_E={};