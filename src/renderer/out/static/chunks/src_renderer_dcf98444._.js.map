{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/ui/StartSceneBackground.tsx"],"sourcesContent":["// src/renderer/components/ui/StartSceneBackground.tsx\n'use client';\n\nimport React from 'react';\n\nconst StartSceneBackground: React.FC = () => (\n  <div className=\"absolute inset-0 overflow-hidden\">\n    <div className=\"absolute top-0 left-0 w-72 h-72 bg-theme-secondary rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob\"></div>\n    <div className=\"absolute top-0 right-0 w-72 h-72 bg-theme-accent rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-2000\"></div>\n    <div className=\"absolute bottom-0 left-1/4 w-72 h-72 bg-theme-primary rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-4000\"></div>\n  </div>\n);\n\nexport default StartSceneBackground;\n"],"names":[],"mappings":"AAAA,sDAAsD;;;;;;AACtD;;AAIA,MAAM,uBAAiC,kBACrC,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;;;;;0BACf,6LAAC;gBAAI,WAAU;;;;;;0BACf,6LAAC;gBAAI,WAAU;;;;;;;;;;;;KAJb;uCAQS","debugId":null}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/ui/StartSceneHeader.tsx"],"sourcesContent":["// src/renderer/components/ui/StartSceneHeader.tsx\n'use client';\n\nimport React from 'react';\n\nconst StartSceneHeader: React.FC = () => (\n  <div className=\"text-center\">\n    <h1 className=\"text-8xl md:text-9xl font-black mb-4 bg-clip-text text-transparent bg-gradient-to-r from-theme-secondary to-theme-accent animate-pulse\">\n      PRG\n    </h1>\n    <p className=\"text-xl md:text-2xl text-theme-text-light/80 mb-12 font-light\">A RHYTHM GAME EXPERIENCE</p>\n  </div>\n);\n\nexport default StartSceneHeader;\n"],"names":[],"mappings":"AAAA,kDAAkD;;;;;;AAClD;;AAIA,MAAM,mBAA6B,kBACjC,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAAyI;;;;;;0BAGvJ,6LAAC;gBAAE,WAAU;0BAAgE;;;;;;;;;;;;KAL3E;uCASS","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/scenes/StartScene.tsx"],"sourcesContent":["// src/renderer/components/scenes/StartScene.tsx\n'use client';\n\nimport React from 'react';\nimport { GameScene } from '../../../shared/types';\nimport StartSceneBackground from '../ui/StartSceneBackground';\nimport StartSceneHeader from '../ui/StartSceneHeader';\n\ninterface MenuItem {\n  label: string;\n  scene: GameScene;\n}\n\nconst menuItems: MenuItem[] = [\n  { label: 'Start Game', scene: 'Select' },\n  { label: '.osz Import', scene: 'OszImport' },\n  { label: 'Settings', scene: 'Settings' },\n];\n\ninterface StartSceneProps {\n  onNavigate: (scene: GameScene) => void;\n}\n\nconst StartScene: React.FC<StartSceneProps> = ({ onNavigate }) => {\n\n  return (\n    <div className=\"min-h-screen bg-theme-bg text-theme-text-light flex flex-col items-center justify-center p-8 overflow-hidden relative\">\n      <StartSceneBackground />\n\n      <div className=\"relative z-10 flex flex-col items-center justify-center\">\n        <StartSceneHeader />\n\n        <div className=\"space-y-6\">\n          {menuItems.map((item, index) => (\n            <button\n              key={index}\n              onClick={() => onNavigate(item.scene)}\n              className=\"group relative px-12 py-4 bg-theme-primary text-theme-text-light rounded-lg hover:bg-theme-primary/80 transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl\"\n            >\n              {item.label}\n            </button>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StartScene;\n"],"names":[],"mappings":"AAAA,gDAAgD;;;;;;AAKhD;AACA;AALA;;;;AAYA,MAAM,YAAwB;IAC5B;QAAE,OAAO;QAAc,OAAO;IAAS;IACvC;QAAE,OAAO;QAAe,OAAO;IAAY;IAC3C;QAAE,OAAO;QAAY,OAAO;IAAW;CACxC;AAMD,MAAM,aAAwC;QAAC,EAAE,UAAU,EAAE;IAE3D,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,0KAAoB;;;;;0BAErB,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,sKAAgB;;;;;kCAEjB,6LAAC;wBAAI,WAAU;kCACZ,UAAU,GAAG,CAAC,CAAC,MAAM,sBACpB,6LAAC;gCAEC,SAAS,IAAM,WAAW,KAAK,KAAK;gCACpC,WAAU;0CAET,KAAK,KAAK;+BAJN;;;;;;;;;;;;;;;;;;;;;;AAWnB;KAvBM;uCAyBS","debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/lib/AssetLoader.ts"],"sourcesContent":["// src/renderer/lib/AssetLoader.ts\nimport type { IpcApi } from '../../types/ipc';\n\n/**\n * Client-side asset loader that uses Electron IPC to load assets from the main process.\n * This replaces HTTP requests with secure IPC communication.\n */\nexport class AssetLoader {\n  /**\n   * Load an audio asset and create a blob URL for use in the browser.\n   * @param assetPath - Path relative to public/assets (e.g., 'bad-apple/Bad_Apple.ogg')\n   * @returns Promise<string> - Blob URL for the audio file\n   */\n  static async loadAudio(assetPath: string): Promise<string> {\n    try {\n      const electron = (window as unknown as { electron: { loadAsset: (assetPath: string) => Promise<ArrayBuffer> } }).electron;\n      const buffer = await electron.loadAsset(assetPath);\n      const blob = new Blob([buffer], { type: 'audio/ogg' });\n      return URL.createObjectURL(blob);\n    } catch (error) {\n      console.error(`Failed to load audio asset: ${assetPath}`, error);\n      throw new Error(`Failed to load audio: ${assetPath}`);\n    }\n  }\n\n  /**\n   * Load an image asset and create a blob URL for use in the browser.\n   * @param assetPath - Path relative to public/assets (e.g., 'bad-apple/Bad_Apple.png')\n   * @returns Promise<string> - Blob URL for the image file\n   */\n  static async loadImage(assetPath: string): Promise<string> {\n    try {\n      const electron = (window as unknown as { electron: { loadAsset: (assetPath: string) => Promise<ArrayBuffer> } }).electron;\n      const buffer = await electron.loadAsset(assetPath);\n      const blob = new Blob([buffer], { type: 'image/png' });\n      return URL.createObjectURL(blob);\n    } catch (error) {\n      console.error(`Failed to load image asset: ${assetPath}`, error);\n      throw new Error(`Failed to load image: ${assetPath}`);\n    }\n  }\n\n  /**\n   * Check if an asset exists.\n   * @param assetPath - Path relative to public/assets\n   * @returns Promise<boolean> - True if asset exists\n   */\n  static async exists(assetPath: string): Promise<boolean> {\n    try {\n      const electron = (window as unknown as { electron: { assetExists: (assetPath: string) => Promise<boolean> } }).electron;\n      return await electron.assetExists(assetPath);\n    } catch (error) {\n      console.error(`Failed to check asset existence: ${assetPath}`, error);\n      return false;\n    }\n  }\n\n  /**\n   * Clean up blob URLs to prevent memory leaks.\n   * @param blobUrl - The blob URL to revoke\n   */\n  static cleanup(blobUrl: string): void {\n    if (blobUrl.startsWith('blob:')) {\n      URL.revokeObjectURL(blobUrl);\n    }\n  }\n}\n"],"names":[],"mappings":"AAAA,kCAAkC;;;;;AAO3B,MAAM;IACX;;;;GAIC,GACD,aAAa,UAAU,SAAiB,EAAmB;QACzD,IAAI;YACF,MAAM,WAAW,AAAC,OAA+F,QAAQ;YACzH,MAAM,SAAS,MAAM,SAAS,SAAS,CAAC;YACxC,MAAM,OAAO,IAAI,KAAK;gBAAC;aAAO,EAAE;gBAAE,MAAM;YAAY;YACpD,OAAO,IAAI,eAAe,CAAC;QAC7B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,AAAC,+BAAwC,OAAV,YAAa;YAC1D,MAAM,IAAI,MAAM,AAAC,yBAAkC,OAAV;QAC3C;IACF;IAEA;;;;GAIC,GACD,aAAa,UAAU,SAAiB,EAAmB;QACzD,IAAI;YACF,MAAM,WAAW,AAAC,OAA+F,QAAQ;YACzH,MAAM,SAAS,MAAM,SAAS,SAAS,CAAC;YACxC,MAAM,OAAO,IAAI,KAAK;gBAAC;aAAO,EAAE;gBAAE,MAAM;YAAY;YACpD,OAAO,IAAI,eAAe,CAAC;QAC7B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,AAAC,+BAAwC,OAAV,YAAa;YAC1D,MAAM,IAAI,MAAM,AAAC,yBAAkC,OAAV;QAC3C;IACF;IAEA;;;;GAIC,GACD,aAAa,OAAO,SAAiB,EAAoB;QACvD,IAAI;YACF,MAAM,WAAW,AAAC,OAA6F,QAAQ;YACvH,OAAO,MAAM,SAAS,WAAW,CAAC;QACpC,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,AAAC,oCAA6C,OAAV,YAAa;YAC/D,OAAO;QACT;IACF;IAEA;;;GAGC,GACD,OAAO,QAAQ,OAAe,EAAQ;QACpC,IAAI,QAAQ,UAAU,CAAC,UAAU;YAC/B,IAAI,eAAe,CAAC;QACtB;IACF;AACF","debugId":null}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/ui/BannerImage.tsx"],"sourcesContent":["// src/renderer/components/ui/BannerImage.tsx\n'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { AssetLoader } from '@/lib/AssetLoader';\n\ninterface BannerImageProps {\n  bannerPath: string;\n  title: string;\n}\n\nconst BannerImage: React.FC<BannerImageProps> = ({ bannerPath, title }) => {\n  const [imageSrc, setImageSrc] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const loadImage = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        \n        // Remove /assets/ prefix if present\n        const assetPath = bannerPath.replace('/assets/', '');\n        const blobUrl = await AssetLoader.loadImage(assetPath);\n        setImageSrc(blobUrl);\n      } catch (err) {\n        console.error(`Failed to load banner image: ${bannerPath}`, err);\n        setError('Failed to load image');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadImage();\n\n    // Cleanup blob URL on unmount\n    return () => {\n      if (imageSrc) {\n        AssetLoader.cleanup(imageSrc);\n      }\n    };\n  }, [bannerPath]);\n\n  if (isLoading) {\n    return (\n      <div className=\"w-full h-full flex items-center justify-center bg-gray-800\">\n        <div className=\"text-white\">Loading...</div>\n      </div>\n    );\n  }\n\n  if (error || !imageSrc) {\n    return (\n      <div className=\"w-full h-full flex items-center justify-center bg-gray-800\">\n        <div className=\"text-white/70\">No Image</div>\n      </div>\n    );\n  }\n\n  return (\n    <img\n      src={imageSrc}\n      alt={title}\n      className=\"w-full h-full object-cover\"\n    />\n  );\n};\n\nexport default BannerImage;\n"],"names":[],"mappings":"AAAA,6CAA6C;;;;;;AAG7C;AACA;;;AAHA;;;AAUA,MAAM,cAA0C;QAAC,EAAE,UAAU,EAAE,KAAK,EAAE;;IACpE,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,yKAAQ,EAAgB;IACxD,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,yKAAQ,EAAC;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,yKAAQ,EAAgB;IAElD,IAAA,0KAAS;iCAAC;YACR,MAAM;mDAAY;oBAChB,IAAI;wBACF,aAAa;wBACb,SAAS;wBAET,oCAAoC;wBACpC,MAAM,YAAY,WAAW,OAAO,CAAC,YAAY;wBACjD,MAAM,UAAU,MAAM,uJAAW,CAAC,SAAS,CAAC;wBAC5C,YAAY;oBACd,EAAE,OAAO,KAAK;wBACZ,QAAQ,KAAK,CAAC,AAAC,gCAA0C,OAAX,aAAc;wBAC5D,SAAS;oBACX,SAAU;wBACR,aAAa;oBACf;gBACF;;YAEA;YAEA,8BAA8B;YAC9B;yCAAO;oBACL,IAAI,UAAU;wBACZ,uJAAW,CAAC,OAAO,CAAC;oBACtB;gBACF;;QACF;gCAAG;QAAC;KAAW;IAEf,IAAI,WAAW;QACb,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;0BAAa;;;;;;;;;;;IAGlC;IAEA,IAAI,SAAS,CAAC,UAAU;QACtB,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;0BAAgB;;;;;;;;;;;IAGrC;IAEA,qBACE,6LAAC;QACC,KAAK;QACL,KAAK;QACL,WAAU;;;;;;AAGhB;GAxDM;KAAA;uCA0DS","debugId":null}},
    {"offset": {"line": 361, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/store/gameStore.ts"],"sourcesContent":["// src/renderer/store/gameStore.ts\n/**\n * @file Zustand store for managing the global game state.\n */\nimport { create } from 'zustand';\nimport { GameScene, Judgment, JudgmentCounts, ChartMetadata, GameUpdateArgs } from '../../shared/types';\n\n// Defines the state structure of the game\nexport interface GameState {\n  score: number;\n  combo: number;\n  maxCombo: number;\n  judgment: Judgment | null;\n  judgments: JudgmentCounts;\n  currentScene: GameScene;\n  isPaused: boolean;\n  charts: ChartMetadata[];\n  selectedChartId: string | null;\n  gameMode: string;\n}\n\n// Defines the actions available to modify the state\nexport interface GameActions {\n  updateGame: (data: GameUpdateArgs) => void;\n  setCurrentScene: (scene: GameScene) => void;\n  togglePause: () => void;\n  setSelectedChart: (chartId: string) => void;\n  setGameMode: (mode: string) => void;\n  loadCharts: () => Promise<void>;\n  reset: () => void;\n}\n\n// Combines state and actions into a single type for the store\nexport type GameStore = GameState & GameActions;\n\nconst initialState: GameState = {\n  score: 0,\n  combo: 0,\n  maxCombo: 0,\n  judgment: null,\n  judgments: { KOOL: 0, COOL: 0, GOOD: 0, MISS: 0 },\n  currentScene: 'Start' as GameScene,\n  isPaused: false,\n  charts: [],\n  selectedChartId: null,\n  gameMode: 'pin',\n};\n\nconst useGameStore = create<GameStore>()((set, get) => ({\n  ...initialState,\n\n  updateGame: (data: GameUpdateArgs) => {\n    const { combo, judgment } = data;\n    const state = get();\n\n    const newJudgments = { ...state.judgments };\n    if (judgment && judgment in newJudgments) {\n      newJudgments[judgment]++;\n    }\n\n    set((state) => ({\n      ...data,\n      maxCombo: Math.max(state.maxCombo, combo ?? state.combo),\n      judgments: newJudgments,\n    }));\n  },\n\n  setCurrentScene: (scene: GameScene) => set({ currentScene: scene }),\n\n  togglePause: () => set((state) => ({ isPaused: !state.isPaused })),\n\n  setSelectedChart: (chartId: string) => set({ selectedChartId: chartId }),\n\n  setGameMode: (mode: string) => set({ gameMode: mode }),\n\n  loadCharts: async () => {\n    if (get().charts.length > 0) return;\n    const charts = await window.electron.discoverCharts();\n    set({\n      charts,\n      selectedChartId: charts[0]?.id ?? null,\n    });\n  },\n\n  reset: () => set(initialState),\n}));\n\nexport default useGameStore;\n"],"names":[],"mappings":"AAAA,kCAAkC;AAClC;;CAEC;;;;AACD;;AA+BA,MAAM,eAA0B;IAC9B,OAAO;IACP,OAAO;IACP,UAAU;IACV,UAAU;IACV,WAAW;QAAE,MAAM;QAAG,MAAM;QAAG,MAAM;QAAG,MAAM;IAAE;IAChD,cAAc;IACd,UAAU;IACV,QAAQ,EAAE;IACV,iBAAiB;IACjB,UAAU;AACZ;AAEA,MAAM,eAAe,IAAA,qJAAM,IAAc,CAAC,KAAK,MAAQ,CAAC;QACtD,GAAG,YAAY;QAEf,YAAY,CAAC;YACX,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG;YAC5B,MAAM,QAAQ;YAEd,MAAM,eAAe;gBAAE,GAAG,MAAM,SAAS;YAAC;YAC1C,IAAI,YAAY,YAAY,cAAc;gBACxC,YAAY,CAAC,SAAS;YACxB;YAEA,IAAI,CAAC,QAAU,CAAC;oBACd,GAAG,IAAI;oBACP,UAAU,KAAK,GAAG,CAAC,MAAM,QAAQ,EAAE,kBAAA,mBAAA,QAAS,MAAM,KAAK;oBACvD,WAAW;gBACb,CAAC;QACH;QAEA,iBAAiB,CAAC,QAAqB,IAAI;gBAAE,cAAc;YAAM;QAEjE,aAAa,IAAM,IAAI,CAAC,QAAU,CAAC;oBAAE,UAAU,CAAC,MAAM,QAAQ;gBAAC,CAAC;QAEhE,kBAAkB,CAAC,UAAoB,IAAI;gBAAE,iBAAiB;YAAQ;QAEtE,aAAa,CAAC,OAAiB,IAAI;gBAAE,UAAU;YAAK;QAEpD,YAAY;gBAKS;YAJnB,IAAI,MAAM,MAAM,CAAC,MAAM,GAAG,GAAG;YAC7B,MAAM,SAAS,MAAM,OAAO,QAAQ,CAAC,cAAc;gBAGhC;YAFnB,IAAI;gBACF;gBACA,iBAAiB,CAAA,eAAA,WAAA,MAAM,CAAC,EAAE,cAAT,+BAAA,SAAW,EAAE,cAAb,yBAAA,cAAiB;YACpC;QACF;QAEA,OAAO,IAAM,IAAI;IACnB,CAAC;uCAEc","debugId":null}},
    {"offset": {"line": 436, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/ui/AnimatedSceneBackground.tsx"],"sourcesContent":["// src/renderer/components/ui/AnimatedSceneBackground.tsx\n'use client';\n\nimport React from 'react';\n\nconst AnimatedSceneBackground: React.FC = () => (\n  <div className=\"absolute inset-0 overflow-hidden\">\n    <div className=\"absolute -top-40 -right-40 w-80 h-80 bg-theme-secondary/10 rounded-full blur-3xl animate-pulse\" />\n    <div className=\"absolute -bottom-40 -left-40 w-80 h-80 bg-theme-primary/10 rounded-full blur-3xl animate-pulse delay-1000\" />\n    <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-theme-accent/5 rounded-full blur-3xl animate-pulse delay-500\" />\n  </div>\n);\n\nexport default AnimatedSceneBackground;\n"],"names":[],"mappings":"AAAA,yDAAyD;;;;;;AACzD;;AAIA,MAAM,0BAAoC,kBACxC,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;;;;;0BACf,6LAAC;gBAAI,WAAU;;;;;;0BACf,6LAAC;gBAAI,WAAU;;;;;;;;;;;;KAJb;uCAQS","debugId":null}},
    {"offset": {"line": 485, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/scenes/SelectScene.tsx"],"sourcesContent":["// src/renderer/components/scenes/SelectScene.tsx\n'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport BannerImage from '@/components/ui/BannerImage';\nimport useGameStore from '../../store/gameStore';\nimport AnimatedSceneBackground from '../ui/AnimatedSceneBackground';\n\ninterface SelectSceneProps {\n  onBack: () => void;\n  onStartGame: (chart: any) => void;\n}\n\nconst SelectScene: React.FC<SelectSceneProps> = ({ onBack, onStartGame }) => {\n  const { charts, selectedChartId, setSelectedChart, setCurrentScene, loadCharts } = useGameStore();\n  const [selectedDifficultyIndex, setSelectedDifficultyIndex] = useState<number>(0);\n  const [availableDifficulties, setAvailableDifficulties] = useState<string[]>([]);\n  const [isImporting, setIsImporting] = useState<boolean>(false);\n\n  // Auto-import OSZ files when component mounts\n  useEffect(() => {\n    const autoImportOszFiles = async () => {\n      try {\n        setIsImporting(true);\n        console.log('[SelectScene] Starting auto-import of OSZ files...');\n\n        const result = await (window as any).electron.importAllOszFiles();\n\n        if (result.imported > 0) {\n          console.log(`[SelectScene] Auto-imported ${result.imported} new charts`);\n          // Reload charts to show newly imported ones\n          await loadCharts();\n        } else if (result.skipped > 0) {\n          console.log(`[SelectScene] ${result.skipped} charts already existed`);\n        }\n\n        if (result.errors.length > 0) {\n          console.warn('[SelectScene] Some charts failed to import:', result.errors);\n        }\n\n      } catch (error) {\n        console.error('[SelectScene] Failed to auto-import OSZ files:', error);\n      } finally {\n        setIsImporting(false);\n      }\n    };\n\n    // Start auto-import, then load existing charts\n    autoImportOszFiles().then(() => {\n      if (!isImporting) {\n        loadCharts();\n      }\n    });\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); // Only run once on mount to prevent infinite re-renders\n\n  const selectedChart = charts.find((c) => c.id === selectedChartId);\n\n  // Load available difficulties when chart is selected\n  useEffect(() => {\n    console.log('[DIFFICULTY DEBUG] Selected chart:', selectedChart);\n    console.log('[DIFFICULTY DEBUG] Chart path:', selectedChart?.chartPath);\n    console.log('[DIFFICULTY DEBUG] Full chart object:', JSON.stringify(selectedChart, null, 2));\n\n    if (selectedChart) {\n      // Check if this chart has difficulties (for OSZ charts)\n      const chartWithDifficulties = selectedChart as any;\n      const difficulties = chartWithDifficulties.oszMetadata?.difficulties || chartWithDifficulties.difficulties;\n      console.log('[DIFFICULTY DEBUG] Chart difficulties:', difficulties);\n\n      if (difficulties && difficulties.length > 1) {\n        const diffNames = difficulties.map((diff: any) => diff.name || `Difficulty ${diff.index + 1}`);\n        console.log('[DIFFICULTY DEBUG] Setting difficulties:', diffNames);\n        setAvailableDifficulties(diffNames);\n        setSelectedDifficultyIndex(0);\n      } else {\n        console.log('[DIFFICULTY DEBUG] No multiple difficulties found, clearing array');\n        setAvailableDifficulties([]);\n        setSelectedDifficultyIndex(0);\n      }\n    } else {\n      console.log('[DIFFICULTY DEBUG] No chart selected, clearing difficulties');\n      setAvailableDifficulties([]);\n      setSelectedDifficultyIndex(0);\n    }\n  }, [selectedChart]);\n\n  const handleStartGame = async () => {\n    if (selectedChart) {\n      try {\n        let pinChart;\n\n        // OSZ 파일인지 확인 (chartPath가 .osz로 끝나는지)\n        if (selectedChart.chartPath.endsWith('.osz')) {\n          // OSZ 차트를 PinChart로 변환 (선택된 난이도 인덱스 전달)\n          pinChart = await (window as any).electron.convertOszToPinChart(selectedChart, selectedDifficultyIndex);\n        } else {\n          // 기존 JSON 차트를 PinChart로 변환\n          pinChart = await (window as any).electron.loadPinChart(selectedChart.chartPath);\n        }\n\n        if (pinChart) {\n          onStartGame(pinChart);\n        }\n      } catch (error) {\n        console.error('Failed to load chart:', error);\n      }\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen cyber-bg-animated flex flex-col items-center justify-center p-4 text-white\">\n      <AnimatedSceneBackground />\n\n      <div className=\"w-full max-w-7xl h-[85vh] game-card flex p-6 z-10 gap-6\">\n        {/* Song List - Fixed Height with Proper Scrolling */}\n        <div className=\"w-1/3 flex flex-col\">\n          <h2 className=\"text-3xl font-black mb-4 neon-glow-cyan\" style={{ color: 'var(--neon-cyan)' }}>\n            SELECT MUSIC\n            {isImporting && (\n              <span className=\"text-sm font-normal text-yellow-400 ml-3\">\n                (Importing OSZ files...)\n              </span>\n            )}\n          </h2>\n          <div className=\"flex-1 overflow-y-auto pr-2 space-y-2 max-h-[calc(85vh-120px)]\">\n            {isImporting && charts.length === 0 ? (\n              <div className=\"text-center py-8\">\n                <p className=\"text-gray-400\">Loading charts...</p>\n                <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-cyan-400 mx-auto mt-4\"></div>\n              </div>\n            ) : (\n              charts.map((chart) => (\n                <button\n                  key={chart.id}\n                  onClick={() => setSelectedChart(chart.id)}\n                  className={`w-full text-left p-4 rounded-lg transition-all duration-300 transform hover:scale-102 ${selectedChartId === chart.id\n                    ? 'neon-glow-magenta border-2'\n                    : 'bg-white/10 hover:bg-white/20 border border-transparent hover:border-cyan-400'\n                    }`}\n                  style={{\n                    backgroundColor: selectedChartId === chart.id ? 'rgba(255, 0, 255, 0.2)' : undefined,\n                    borderColor: selectedChartId === chart.id ? 'var(--neon-magenta)' : undefined\n                  }}\n                >\n                  <p className=\"font-bold text-lg truncate\" style={{\n                    color: selectedChartId === chart.id ? 'var(--neon-magenta)' : 'white'\n                  }}>{chart.title}</p>\n                  <p className=\"text-sm text-gray-400 truncate\">{chart.artist}</p>\n                </button>\n              ))\n            )}\n          </div>\n        </div>\n\n        {/* Selected Song Details - Improved Layout */}\n        <div className=\"w-2/3 flex flex-col justify-between\">\n          {selectedChart ? (\n            <div className=\"flex-grow flex flex-col items-center justify-center text-center px-4\">\n              <div className=\"relative w-full max-w-lg h-48 rounded-xl shadow-2xl mb-6 border-2 neon-glow-green overflow-hidden\"\n                style={{ borderColor: 'var(--neon-green)' }}>\n                <BannerImage\n                  bannerPath={selectedChart.bannerPath || ''}\n                  title={selectedChart.title}\n                />\n              </div>\n              <h1 className=\"text-4xl font-extrabold tracking-tight mb-2 neon-glow-pulse\"\n                style={{ color: 'var(--neon-cyan)' }}>{selectedChart.title}</h1>\n              <p className=\"text-xl text-gray-300 mb-6\" style={{ color: 'var(--neon-yellow)' }}>{selectedChart.artist}</p>\n\n              {/* Difficulty Selection UI - Fixed Overflow */}\n              {availableDifficulties.length > 1 && (\n                <div className=\"w-full max-w-md\">\n                  <h3 className=\"text-xl font-bold mb-4 neon-glow-green\" style={{ color: 'var(--neon-green)' }}>\n                    Select Difficulty\n                  </h3>\n                  <div className=\"max-h-32 overflow-y-auto space-y-2 p-2 rounded-lg bg-black/20\">\n                    {availableDifficulties.map((difficulty, index) => (\n                      <button\n                        key={index}\n                        onClick={() => setSelectedDifficultyIndex(index)}\n                        className={`w-full px-4 py-2 rounded-lg text-left transition-all duration-300 transform hover:scale-105 ${selectedDifficultyIndex === index\n                          ? 'neon-glow-yellow font-bold'\n                          : 'bg-white/10 hover:bg-white/20 text-white hover:neon-glow-cyan'\n                          }`}\n                        style={{\n                          backgroundColor: selectedDifficultyIndex === index ? 'rgba(255, 255, 0, 0.2)' : undefined,\n                          color: selectedDifficultyIndex === index ? 'var(--neon-yellow)' : undefined\n                        }}\n                      >\n                        {difficulty}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          ) : (\n            <div className=\"flex-grow flex items-center justify-center\">\n              <p className=\"text-2xl text-gray-400\">Select a song to begin</p>\n            </div>\n          )}\n\n          {/* Action Buttons */}\n          <div className=\"flex justify-between items-center mt-6\">\n            <button\n              onClick={onBack}\n              className=\"game-button\"\n              style={{ borderColor: 'var(--neon-red)', boxShadow: '0 0 10px var(--neon-red)' }}\n            >\n              ← Back to Menu\n            </button>\n            <button\n              onClick={handleStartGame}\n              disabled={!selectedChart}\n              className={`px-12 py-4 text-2xl font-bold rounded-lg transition-all duration-300 transform ${selectedChart\n                ? 'game-button hover:scale-105 neon-glow-pulse'\n                : 'bg-gray-600 cursor-not-allowed text-gray-400'\n                }`}\n              style={selectedChart ? {\n                borderColor: 'var(--neon-green)',\n                boxShadow: '0 0 20px var(--neon-green)',\n                color: 'var(--neon-green)'\n              } : {}}\n            >\n              GAME START\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SelectScene;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 882, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/game/JudgmentDisplay.tsx"],"sourcesContent":["// src/renderer/components/game/JudgmentDisplay.tsx\n'use client';\n\nimport React from 'react';\nimport { useTransition, animated } from '@react-spring/web';\nimport { Judgment } from '../../../shared/types';\n\ninterface JudgmentDisplayProps {\n  judgment: Judgment | null;\n}\n\nconst JUDGMENT_STYLES: Record<Judgment, { color: string; shadow: string }> = {\n  KOOL: { color: '#00ffff', shadow: '0 0 20px #00ffff' },\n  COOL: { color: '#0099ff', shadow: '0 0 15px #0099ff' },\n  GOOD: { color: '#00ff00', shadow: '0 0 10px #00ff00' },\n  MISS: { color: '#ff0000', shadow: '0 0 10px #ff0000' },\n};\n\nconst JudgmentDisplay: React.FC<JudgmentDisplayProps> = ({ judgment }) => {\n  const judgmentArray = judgment ? [judgment] : [];\n  \n  const transitions = useTransition(judgmentArray, {\n    from: { opacity: 0, transform: 'scale(0.5) translateY(50px)' },\n    enter: { opacity: 1, transform: 'scale(1) translateY(0px)' },\n    leave: { opacity: 0, transform: 'scale(0.5) translateY(-50px)' },\n    config: { tension: 280, friction: 20 },\n    keys: (item: Judgment) => `${item}-${Date.now()}`,\n  });\n\n  return (\n    <div className=\"absolute top-1/4 left-1/2 -translate-x-1/2 -translate-y-1/2 z-30 pointer-events-none\">\n      {transitions((style, item) => (\n        <animated.div\n          style={style}\n          className=\"text-7xl font-black uppercase tracking-widest\"\n        >\n          <span style={{ color: JUDGMENT_STYLES[item].color, textShadow: JUDGMENT_STYLES[item].shadow }}>\n            {item}\n          </span>\n        </animated.div>\n      ))}\n    </div>\n  );\n};\n\nexport default JudgmentDisplay;\n"],"names":[],"mappings":"AAAA,mDAAmD;;;;;;AAInD;AAAA;;;AAHA;;AAUA,MAAM,kBAAuE;IAC3E,MAAM;QAAE,OAAO;QAAW,QAAQ;IAAmB;IACrD,MAAM;QAAE,OAAO;QAAW,QAAQ;IAAmB;IACrD,MAAM;QAAE,OAAO;QAAW,QAAQ;IAAmB;IACrD,MAAM;QAAE,OAAO;QAAW,QAAQ;IAAmB;AACvD;AAEA,MAAM,kBAAkD;QAAC,EAAE,QAAQ,EAAE;;IACnE,MAAM,gBAAgB,WAAW;QAAC;KAAS,GAAG,EAAE;IAEhD,MAAM,cAAc,IAAA,wMAAa,EAAC,eAAe;QAC/C,MAAM;YAAE,SAAS;YAAG,WAAW;QAA8B;QAC7D,OAAO;YAAE,SAAS;YAAG,WAAW;QAA2B;QAC3D,OAAO;YAAE,SAAS;YAAG,WAAW;QAA+B;QAC/D,QAAQ;YAAE,SAAS;YAAK,UAAU;QAAG;QACrC,IAAI;0DAAE,CAAC,OAAmB,AAAC,GAAU,OAAR,MAAK,KAAc,OAAX,KAAK,GAAG;;IAC/C;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACZ,YAAY,CAAC,OAAO,qBACnB,6LAAC,iNAAQ,CAAC,GAAG;gBACX,OAAO;gBACP,WAAU;0BAEV,cAAA,6LAAC;oBAAK,OAAO;wBAAE,OAAO,eAAe,CAAC,KAAK,CAAC,KAAK;wBAAE,YAAY,eAAe,CAAC,KAAK,CAAC,MAAM;oBAAC;8BACzF;;;;;;;;;;;;;;;;AAMb;GAzBM;;QAGgB,wMAAa;;;KAH7B;uCA2BS","debugId":null}},
    {"offset": {"line": 982, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/lib/AudioService.ts"],"sourcesContent":["/**\n * @file Manages audio playback using the Web Audio API for precise timing.\n */\n\nexport class AudioService {\n  private static instance: AudioService;\n  private audioContext: AudioContext | null = null;\n  private currentSource: AudioBufferSourceNode | null = null;\n  private currentBuffer: AudioBuffer | null = null;\n  private startTime: number = 0;\n  private pauseTime: number = 0;\n  private isPlaying: boolean = false;\n  private isPaused: boolean = false;\n  private volume: number = 1.0;\n  private gainNode: GainNode | null = null;\n\n  // Multi-channel audio support\n  private hitsoundSources: Map<string, AudioBufferSourceNode> = new Map();\n  private hitsoundBuffers: Map<string, AudioBuffer> = new Map();\n  private hitsoundGainNode: GainNode | null = null;\n  private endedListeners: Set<() => void> = new Set();\n\n  private constructor() {\n    if (typeof window !== 'undefined') {\n      this.audioContext = new window.AudioContext();\n      this.setupGainNodes();\n    }\n  }\n\n  public static getInstance(): AudioService {\n    if (!AudioService.instance) {\n      AudioService.instance = new AudioService();\n    }\n    return AudioService.instance;\n  }\n\n  /**\n   * Converts incoming data from IPC into a usable ArrayBuffer.\n   * This handles cases where the ArrayBuffer is serialized during transit.\n   * @param data The data received from the main process.\n   * @returns A valid ArrayBuffer.\n   */\n  private _toArrayBuffer(data: any): ArrayBuffer {\n    if (data instanceof ArrayBuffer) {\n      return data;\n    }\n    // Electron's IPC can serialize Buffers into Uint8Arrays\n    if (data instanceof Uint8Array) {\n      // If it's a view of a larger buffer, we might need to copy\n      // Build a Uint8Array view for the requested range\n      const view = new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n      // If the underlying buffer is already a plain ArrayBuffer and the view covers the whole buffer, return it directly\n      if (view.byteOffset === 0 && view.byteLength === view.buffer.byteLength && view.buffer instanceof ArrayBuffer) {\n        return view.buffer as ArrayBuffer;\n      }\n      // Otherwise create a copy via slice() which returns a new Uint8Array backed by an ArrayBuffer\n      return view.slice().buffer;\n    }\n    // Handle the { type: 'Buffer', data: [...] } serialization format\n    if (data && data.type === 'Buffer' && Array.isArray(data.data)) {\n      return new Uint8Array(data.data).buffer;\n    }\n    throw new Error(`Received invalid data type for audio asset: ${typeof data}`);\n  }\n\n  private setupGainNodes(): void {\n    if (!this.audioContext) return;\n\n    this.gainNode = this.audioContext.createGain();\n    this.gainNode.connect(this.audioContext.destination);\n\n    this.hitsoundGainNode = this.audioContext.createGain();\n    this.hitsoundGainNode.connect(this.audioContext.destination);\n  }\n\n  /**\n   * Load audio from asset path using Electron IPC\n   */\n  public async loadAudio(audioPath: string): Promise<void> {\n    if (!this.audioContext) {\n      throw new Error('AudioContext not initialized');\n    }\n\n    try {\n      const rawData = await (window as any).electron.loadAsset(audioPath);\n      const arrayBuffer = this._toArrayBuffer(rawData);\n      this.currentBuffer = await this.audioContext.decodeAudioData(arrayBuffer);\n    } catch (error) {\n      console.error('Failed to load audio:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Load hitsound from asset path\n   */\n  public async loadHitsound(soundName: string, audioPath: string): Promise<void> {\n    if (this.hitsoundBuffers.has(soundName) || !audioPath) {\n      return;\n    }\n    try {\n      console.log(`[AudioService] Loading hitsound '${soundName}' from: ${audioPath}`);\n\n      // Use IPC to load audio asset - consistent with other asset loading\n      const audioBuffer = await (window as any).electron.loadAsset(audioPath);\n      const arrayBuffer = audioBuffer.buffer.slice(\n        audioBuffer.byteOffset, \n        audioBuffer.byteOffset + audioBuffer.byteLength\n      );\n      \n      // Try to decode audio data, but handle failures gracefully\n      try {\n        const buffer = await this.audioContext!.decodeAudioData(arrayBuffer);\n        this.hitsoundBuffers.set(soundName, buffer);\n        console.log(`[AudioService] Successfully loaded hitsound '${soundName}'`);\n      } catch (decodeError) {\n        console.warn(`[AudioService] Failed to decode audio data for hitsound '${soundName}':`, decodeError);\n        console.warn(`[AudioService] This is likely due to invalid or corrupted audio file format. Skipping this hitsound.`);\n        // Don't throw - just skip this hitsound and continue\n        return;\n      }\n    } catch (error) {\n      console.error(`[AudioService] FAILED to load hitsound ${soundName} from ${audioPath}:`, error);\n      // Don't throw - let the game continue without this hitsound\n    }\n  }\n\n  /**\n   * Play the loaded audio\n   */\n  public play(startOffset: number = 0): void {\n    if (!this.audioContext || !this.currentBuffer || !this.gainNode) {\n      console.warn('Cannot play: AudioContext, buffer, or gain node not available');\n      return;\n    }\n\n    this.stop(); // Stop any currently playing audio\n\n    this.currentSource = this.audioContext.createBufferSource();\n    this.currentSource.buffer = this.currentBuffer;\n    this.currentSource.connect(this.gainNode);\n\n    this.startTime = this.audioContext.currentTime;\n    this.pauseTime = 0;\n    this.isPlaying = true;\n    this.isPaused = false;\n\n    // Add ended listener\n    this.currentSource.onended = () => {\n      this.isPlaying = false;\n      this.isPaused = false;\n      this.endedListeners.forEach(listener => listener());\n    };\n\n    this.currentSource.start(0, startOffset);\n  }\n\n  /**\n   * Pause the audio\n   */\n  public pause(): void {\n    if (this.currentSource && this.isPlaying && !this.isPaused) {\n      this.currentSource.stop();\n      this.pauseTime = this.getCurrentTime();\n      this.isPlaying = false;\n      this.isPaused = true;\n    }\n  }\n\n  /**\n   * Resume the paused audio\n   */\n  public resume(): void {\n    if (this.isPaused && this.pauseTime > 0) {\n      this.play(this.pauseTime);\n    }\n  }\n\n  /**\n   * Stop the audio\n   */\n  public stop(): void {\n    if (this.currentSource) {\n      this.currentSource.stop();\n      this.currentSource = null;\n    }\n    this.isPlaying = false;\n    this.isPaused = false;\n    this.startTime = 0;\n    this.pauseTime = 0;\n  }\n\n  /**\n   * Play a hitsound\n   */\n  public playHitsound(soundName: string, volume: number = 1.0): void {\n    if (!this.audioContext || !this.hitsoundGainNode) return;\n\n    const buffer = this.hitsoundBuffers.get(soundName);\n    if (!buffer) {\n      console.warn(`Hitsound not found: ${soundName}`);\n      return;\n    }\n\n    const source = this.audioContext.createBufferSource();\n    const gainNode = this.audioContext.createGain();\n\n    source.buffer = buffer;\n    gainNode.gain.value = volume;\n\n    source.connect(gainNode);\n    gainNode.connect(this.hitsoundGainNode);\n\n    source.start();\n\n    // Clean up after playback\n    source.onended = () => {\n      source.disconnect();\n      gainNode.disconnect();\n    };\n  }\n\n  /**\n   * Get current playback time in seconds\n   */\n  public getCurrentTime(): number {\n    if (!this.audioContext) return 0;\n\n    if (this.isPaused) {\n      return this.pauseTime;\n    }\n\n    if (this.isPlaying && this.startTime > 0) {\n      return this.audioContext.currentTime - this.startTime;\n    }\n\n    return 0;\n  }\n\n  /**\n   * Get total duration of loaded audio\n   */\n  public getDuration(): number {\n    return this.currentBuffer ? this.currentBuffer.duration : 0;\n  }\n\n  /**\n   * Set volume (0.0 to 1.0)\n   */\n  public setVolume(volume: number): void {\n    this.volume = Math.max(0, Math.min(1, volume));\n    if (this.gainNode) {\n      this.gainNode.gain.value = this.volume;\n    }\n  }\n\n  /**\n   * Set hitsound volume (0.0 to 1.0)\n   */\n  public setHitsoundVolume(volume: number): void {\n    if (this.hitsoundGainNode) {\n      this.hitsoundGainNode.gain.value = Math.max(0, Math.min(1, volume));\n    }\n  }\n\n  /**\n   * Check if audio is currently playing\n   */\n  public getIsPlaying(): boolean {\n    return this.isPlaying;\n  }\n\n  /**\n   * Check if audio is paused\n   */\n  public getIsPaused(): boolean {\n    return this.isPaused;\n  }\n\n  /**\n   * Add listener for when audio ends\n   */\n  public onEnded(callback: () => void): () => void {\n    this.endedListeners.add(callback);\n    return () => this.endedListeners.delete(callback);\n  }\n\n  /**\n   * Seek to specific time\n   */\n  public seekTo(time: number): void {\n    if (this.isPlaying) {\n      this.play(time);\n    } else {\n      this.pauseTime = time;\n    }\n  }\n}\n\n// Export singleton instance\nexport const audioService = AudioService.getInstance();\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1249, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/hooks/useKnifePhysics.ts"],"sourcesContent":["import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport interface Knife {\n    id: number;\n    isStuck: boolean;\n    stuckAngle: number;\n    thrownAt: number;\n    position: KnifePosition;\n}\n\nexport interface KnifePosition {\n    x: number;\n    y: number;\n    rotation: number;\n}\n\ninterface UseKnifePhysicsProps {\n    targetRadius: number;\n    velocity: number;\n    rotationSpeed: number;\n    isGameActive: boolean;\n}\n\nexport const useKnifePhysics = ({\n    targetRadius,\n    velocity = 400,\n    rotationSpeed = 540,\n    isGameActive\n}: UseKnifePhysicsProps) => {\n    const [knives, setKnives] = useState<Knife[]>([]);\n    const workerRef = useRef<Worker | null>(null);\n    const knifeIdCounter = useRef(0);\n    const hitCallbackRef = useRef<((hitTime: number) => void) | null>(null);\n\n    useEffect(() => {\n        console.log('[useKnifePhysics] Initializing physics worker...');\n        try {\n            const worker = new Worker(new URL('./physics.worker.ts', import.meta.url));\n            workerRef.current = worker;\n\n            console.log('[useKnifePhysics] Worker created, sending INIT message');\n            worker.postMessage({ type: 'INIT', payload: { targetRadius, velocity, rotationSpeed } });\n\n            worker.onmessage = (e: MessageEvent) => {\n                const { type, payload } = e.data;\n                console.log('[useKnifePhysics] Worker message:', type, payload);\n                if (type === 'UPDATE') {\n                    setKnives(payload.knives);\n                } else if (type === 'HIT') {\n                    console.log('[useKnifePhysics] Hit detected at time:', payload.hitTime);\n                    if (hitCallbackRef.current) {\n                        hitCallbackRef.current(payload.hitTime);\n                    }\n                }\n            };\n\n            worker.onerror = (error) => {\n                console.error('[useKnifePhysics] Worker error:', error);\n            };\n\n            return () => {\n                console.log('[useKnifePhysics] Terminating worker');\n                worker.terminate();\n            };\n        } catch (error) {\n            console.error('[useKnifePhysics] Failed to create worker:', error);\n        }\n    }, [targetRadius, velocity, rotationSpeed]);\n\n    // 칼 던지기\n    const throwKnife = useCallback(() => {\n        console.log('[useKnifePhysics] throwKnife called, isGameActive:', isGameActive, 'worker:', !!workerRef.current);\n        if (!isGameActive || !workerRef.current) {\n            console.log('[useKnifePhysics] Cannot throw knife - game inactive or no worker');\n            return;\n        }\n\n        const newKnife: Knife = {\n            id: knifeIdCounter.current++,\n            isStuck: false,\n            stuckAngle: 0,\n            thrownAt: Date.now(),\n            position: { x: 0, y: 250, rotation: 0 } // Initial position\n        };\n\n        console.log('[useKnifePhysics] Throwing knife:', newKnife);\n        workerRef.current.postMessage({ type: 'THROW', payload: { knife: newKnife } });\n    }, [isGameActive]);\n\n    // 모든 칼 위치 계산 (워커로부터 받은 데이터를 그대로 사용)\n    const getKnivesPositions = useCallback(() => {\n        return knives.map(knife => ({\n            knife,\n            position: knife.position // 워커가 계산한 위치 정보 사용\n        }));\n    }, [knives]);\n\n    // 판정 콜백 설정\n    const setHitCallback = useCallback((callback: (hitTime: number) => void) => {\n        hitCallbackRef.current = callback;\n    }, []);\n\n    // 게임 리셋\n    const resetKnives = useCallback(() => {\n        if (workerRef.current) {\n            workerRef.current.postMessage({ type: 'RESET' });\n        }\n        setKnives([]);\n        knifeIdCounter.current = 0;\n    }, []);\n\n    // 꽂힌 칼 개수\n    const stuckKnivesCount = knives.filter(knife => knife.isStuck).length;\n\n    return {\n        knives,\n        throwKnife,\n        getKnivesPositions,\n        resetKnives,\n        stuckKnivesCount,\n        setHitCallback\n    };\n};\n"],"names":[],"mappings":";;;;AAAA;;;;;;;;AAuBO,MAAM,kBAAkB;QAAC,EAC5B,YAAY,EACZ,WAAW,GAAG,EACd,gBAAgB,GAAG,EACnB,YAAY,EACO;;IACnB,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,yKAAQ,EAAU,EAAE;IAChD,MAAM,YAAY,IAAA,uKAAM,EAAgB;IACxC,MAAM,iBAAiB,IAAA,uKAAM,EAAC;IAC9B,MAAM,iBAAiB,IAAA,uKAAM,EAAqC;IAElE,IAAA,0KAAS;qCAAC;YACN,QAAQ,GAAG,CAAC;YACZ,IAAI;gBACA,MAAM,SAAS,IAAI;gBACnB,UAAU,OAAO,GAAG;gBAEpB,QAAQ,GAAG,CAAC;gBACZ,OAAO,WAAW,CAAC;oBAAE,MAAM;oBAAQ,SAAS;wBAAE;wBAAc;wBAAU;oBAAc;gBAAE;gBAEtF,OAAO,SAAS;iDAAG,CAAC;wBAChB,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,IAAI;wBAChC,QAAQ,GAAG,CAAC,qCAAqC,MAAM;wBACvD,IAAI,SAAS,UAAU;4BACnB,UAAU,QAAQ,MAAM;wBAC5B,OAAO,IAAI,SAAS,OAAO;4BACvB,QAAQ,GAAG,CAAC,2CAA2C,QAAQ,OAAO;4BACtE,IAAI,eAAe,OAAO,EAAE;gCACxB,eAAe,OAAO,CAAC,QAAQ,OAAO;4BAC1C;wBACJ;oBACJ;;gBAEA,OAAO,OAAO;iDAAG,CAAC;wBACd,QAAQ,KAAK,CAAC,mCAAmC;oBACrD;;gBAEA;iDAAO;wBACH,QAAQ,GAAG,CAAC;wBACZ,OAAO,SAAS;oBACpB;;YACJ,EAAE,OAAO,OAAO;gBACZ,QAAQ,KAAK,CAAC,8CAA8C;YAChE;QACJ;oCAAG;QAAC;QAAc;QAAU;KAAc;IAE1C,QAAQ;IACR,MAAM,aAAa,IAAA,4KAAW;mDAAC;YAC3B,QAAQ,GAAG,CAAC,sDAAsD,cAAc,WAAW,CAAC,CAAC,UAAU,OAAO;YAC9G,IAAI,CAAC,gBAAgB,CAAC,UAAU,OAAO,EAAE;gBACrC,QAAQ,GAAG,CAAC;gBACZ;YACJ;YAEA,MAAM,WAAkB;gBACpB,IAAI,eAAe,OAAO;gBAC1B,SAAS;gBACT,YAAY;gBACZ,UAAU,KAAK,GAAG;gBAClB,UAAU;oBAAE,GAAG;oBAAG,GAAG;oBAAK,UAAU;gBAAE,EAAE,mBAAmB;YAC/D;YAEA,QAAQ,GAAG,CAAC,qCAAqC;YACjD,UAAU,OAAO,CAAC,WAAW,CAAC;gBAAE,MAAM;gBAAS,SAAS;oBAAE,OAAO;gBAAS;YAAE;QAChF;kDAAG;QAAC;KAAa;IAEjB,oCAAoC;IACpC,MAAM,qBAAqB,IAAA,4KAAW;2DAAC;YACnC,OAAO,OAAO,GAAG;mEAAC,CAAA,QAAS,CAAC;wBACxB;wBACA,UAAU,MAAM,QAAQ,CAAC,mBAAmB;oBAChD,CAAC;;QACL;0DAAG;QAAC;KAAO;IAEX,WAAW;IACX,MAAM,iBAAiB,IAAA,4KAAW;uDAAC,CAAC;YAChC,eAAe,OAAO,GAAG;QAC7B;sDAAG,EAAE;IAEL,QAAQ;IACR,MAAM,cAAc,IAAA,4KAAW;oDAAC;YAC5B,IAAI,UAAU,OAAO,EAAE;gBACnB,UAAU,OAAO,CAAC,WAAW,CAAC;oBAAE,MAAM;gBAAQ;YAClD;YACA,UAAU,EAAE;YACZ,eAAe,OAAO,GAAG;QAC7B;mDAAG,EAAE;IAEL,UAAU;IACV,MAAM,mBAAmB,OAAO,MAAM,CAAC,CAAA,QAAS,MAAM,OAAO,EAAE,MAAM;IAErE,OAAO;QACH;QACA;QACA;QACA;QACA;QACA;IACJ;AACJ;GAnGa","debugId":null}},
    {"offset": {"line": 1397, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/game/PinGameView.tsx"],"sourcesContent":["// src/renderer/components/game/PinGameView.tsx\n'use client';\n\nimport React, { useState, useEffect, useCallback, useRef, useMemo } from 'react';\nimport JudgmentDisplay from './JudgmentDisplay';\nimport { Note, Judgment, PinChart } from '../../../shared/types';\nimport { audioService } from '../../lib/AudioService';\nimport { useKnifePhysics } from '../../hooks/useKnifePhysics';\n\ninterface PinGameViewProps {\n  chart: PinChart | null;\n  onPinThrow: () => void;\n  score: number;\n  combo: number;\n  judgment: Judgment | null;\n  noteSpeed: number;\n}\n\ninterface ApproachCircle {\n  id: string;\n  noteTime: number;\n  startTime: number;\n  uniqueKey: string;\n  scale: number;\n}\n\nconst PinGameView: React.FC<PinGameViewProps> = ({\n  chart,\n  onPinThrow,\n  score,\n  combo,\n  judgment,\n  noteSpeed,\n}) => {\n  const [isThrowingKnife, setIsThrowingKnife] = useState(false);\n  const [approachCircles, setApproachCircles] = useState<ApproachCircle[]>([]);\n  const timeMsRef = useRef<number>(0);\n  const targetRef = useRef<HTMLDivElement>(null);\n\n  // 접근 시간 계산 (노트 속도에 따라 조정) - useMemo로 안정화\n  const APPROACH_TIME = useMemo(() => Math.max(400, 2000 - noteSpeed), [noteSpeed]);\n  const TARGET_RADIUS = 128;\n\n  // 물리 엔진 초기화\n  const {\n    knives,\n    throwKnife: physicsThrowKnife,\n    getKnivesPositions,\n    resetKnives,\n    stuckKnivesCount,\n    setHitCallback\n  } = useKnifePhysics({\n    targetRadius: TARGET_RADIUS,\n    velocity: 400,\n    rotationSpeed: 540,\n    isGameActive: true // Always active for now to debug\n  });\n\n  // 디버깅 로그 추가\n  useEffect(() => {\n    console.log('[PinGameView] Chart:', chart?.title);\n    console.log('[PinGameView] Knives count:', knives.length);\n    console.log('[PinGameView] Approach circles count:', approachCircles.length);\n    console.log('[PinGameView] Current time:', timeMsRef.current);\n    console.log('[PinGameView] Stuck knives count:', stuckKnivesCount);\n    console.log('[PinGameView] Notes in chart:', chart?.notes?.length || 0);\n    console.log('[PinGameView] Audio service time:', audioService.getCurrentTime());\n  }, [chart, knives.length, approachCircles.length, stuckKnivesCount]);\n\n  // 접근 원 생성 로직 디버깅\n  useEffect(() => {\n    if (!chart?.notes) return;\n\n    const currentTimeMs = timeMsRef.current;\n    const upcomingNotes = chart.notes.filter(note => {\n      const noteStartTime = note.time * 1000 - APPROACH_TIME;\n      const noteEndTime = note.time * 1000 + 1000; // 1초 여유\n      return currentTimeMs >= noteStartTime && currentTimeMs <= noteEndTime;\n    });\n\n    console.log('[PinGameView] Current time:', currentTimeMs, 'Upcoming notes:', upcomingNotes.length);\n    \n    if (upcomingNotes.length > 0) {\n      console.log('[PinGameView] First upcoming note:', upcomingNotes[0]);\n    }\n  }, [chart, timeMsRef.current]);\n\n  // Set up internal timer for rendering, driven by the audio service\n  useEffect(() => {\n    let rafId: number;\n    const tick = () => {\n      timeMsRef.current = audioService.getCurrentTime() * 1000;\n      rafId = requestAnimationFrame(tick);\n    };\n    rafId = requestAnimationFrame(tick);\n    return () => cancelAnimationFrame(rafId);\n  }, []);\n\n  // Clean up approach circles\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      const currentTime = audioService.getCurrentTime() * 1000;\n\n      setApproachCircles(prevCircles => {\n        const updatedCircles = prevCircles.map(circle => ({\n          ...circle,\n          scale: Math.max(0.1, 1 - (currentTime - circle.startTime) / APPROACH_TIME)\n        })).filter(circle => currentTime - circle.startTime < APPROACH_TIME);\n\n        // Only update if there's a meaningful change\n        if (updatedCircles.length !== prevCircles.length ||\n          updatedCircles.some((circle, i) => prevCircles[i] && Math.abs(circle.scale - prevCircles[i].scale) > 0.01)) {\n          return updatedCircles;\n        }\n        return prevCircles;\n      });\n    }, 150);\n\n    return () => clearInterval(intervalId);\n  }, [APPROACH_TIME]);\n\n  // Generate approach circles with interval-based updates\n  useEffect(() => {\n    if (!chart?.notes) {\n      console.log('[PinGameView] No chart or notes available');\n      return;\n    }\n\n    console.log('[PinGameView] Setting up approach circle generation for', chart.notes.length, 'notes');\n\n    const intervalId = setInterval(() => {\n      const currentTimeMs = timeMsRef.current;\n      \n      // FORCE CREATE APPROACH CIRCLES FOR DEBUGGING - Create circles for the first few notes regardless of timing\n      const debugNotes = chart.notes.slice(0, 3);\n      console.log('[PinGameView] FORCE DEBUG: Creating circles for first 3 notes at time:', currentTimeMs);\n      \n      const debugCircles = debugNotes.map((note: Note, index: number) => ({\n        id: `debug-circle-${note.time}-${index}`,\n        noteTime: note.time * 1000,\n        startTime: currentTimeMs,\n        uniqueKey: `debug-${note.time}-${currentTimeMs}-${index}`,\n        scale: 1,\n      }));\n\n      setApproachCircles((prev) => {\n        if (prev.length === 0) {\n          console.log('[PinGameView] FORCE DEBUG: Adding', debugCircles.length, 'debug approach circles');\n          return debugCircles;\n        }\n        return prev;\n      });\n      \n      // Original logic for upcoming notes\n      const upcomingNotes = chart.notes.filter((note: Note) => {\n        const noteTimeMs = note.time * 1000;\n        const isUpcoming = noteTimeMs > currentTimeMs && noteTimeMs <= currentTimeMs + APPROACH_TIME;\n        return isUpcoming;\n      });\n\n      if (upcomingNotes.length > 0) {\n        console.log('[PinGameView] Found', upcomingNotes.length, 'upcoming notes at time:', currentTimeMs);\n      }\n\n      const newCircles = upcomingNotes.map((note: Note) => ({\n        id: `circle-${note.time}`,\n        noteTime: note.time * 1000,\n        startTime: currentTimeMs,\n        uniqueKey: `${note.time}-${currentTimeMs}`,\n        scale: 1,\n      }));\n\n      setApproachCircles((prev) => {\n        const existingIds = new Set(prev.map((c: ApproachCircle) => c.id));\n        const filteredNew = newCircles.filter((c: ApproachCircle) => !existingIds.has(c.id));\n        \n        if (filteredNew.length > 0) {\n          console.log('[PinGameView] Adding', filteredNew.length, 'new approach circles');\n          return [...prev, ...filteredNew];\n        }\n        return prev;\n      });\n    }, 100); // Check every 100ms for new notes\n\n    return () => clearInterval(intervalId);\n  }, [chart?.notes, APPROACH_TIME]);\n\n  // GameController와 연동하여 판정 처리\n  useEffect(() => {\n    setHitCallback((hitTime: number) => {\n      // 물리 엔진에서 칼이 목표물에 도달했을 때 GameController의 판정 로직 호출\n      onPinThrow(); // 이미 onPinThrow가 GameController.handlePinPress를 호출함\n    });\n  }, [onPinThrow, setHitCallback]);\n\n  // FORCE THROW KNIFE FOR DEBUGGING - Throw a knife every 2 seconds\n  useEffect(() => {\n    console.log('[PinGameView] Setting up auto knife throwing for debugging');\n    const intervalId = setInterval(() => {\n      console.log('[PinGameView] FORCE DEBUG: Throwing knife automatically');\n      physicsThrowKnife();\n    }, 2000);\n\n    return () => clearInterval(intervalId);\n  }, [physicsThrowKnife, onPinThrow]);\n\n  const handleThrowKnife = useCallback(() => {\n    if (isThrowingKnife) return;\n\n    setIsThrowingKnife(true);\n    physicsThrowKnife(); // 물리 엔진에서 칼 던지기 (판정은 칼이 도달할 때 자동 처리)\n    \n    setTimeout(() => setIsThrowingKnife(false), 150);\n  }, [isThrowingKnife, physicsThrowKnife]);\n\n  const handleKeyDown = useCallback((event: KeyboardEvent) => {\n    console.log('[PinGameView] Key pressed:', event.code, event.key);\n    if (event.code === 'KeyS' && !isThrowingKnife) {\n      console.log('[PinGameView] S key pressed - throwing knife!');\n      handleThrowKnife();\n    }\n  }, [isThrowingKnife, handleThrowKnife]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [handleKeyDown]);\n\n  // FORCE CONSOLE LOG ON EVERY RENDER\n  console.log('[PinGameView RENDER] Component is rendering!', {\n    chart: !!chart,\n    knivesCount: knives.length,\n    circlesCount: approachCircles.length,\n    gameTime: timeMsRef.current\n  });\n\n  return (\n    <div \n      className=\"min-h-screen relative overflow-hidden flex flex-col items-center justify-center\"\n      style={{\n        // FORCE VISIBLE BACKGROUND\n        backgroundColor: 'rgba(255, 0, 0, 0.5)', // Red background to verify visibility\n        border: '10px solid yellow', // Yellow border to make it obvious\n        zIndex: 9999, // Force to top\n      }}\n    >\n      {/* MEGA DEBUG OVERLAY - ALWAYS VISIBLE */}\n      <div \n        className=\"fixed top-0 left-0 w-full bg-red-500 text-white p-6 z-50\"\n        style={{ \n          fontSize: '24px', \n          fontWeight: 'bold',\n          boxShadow: '0 0 50px rgba(255, 0, 0, 1)',\n          zIndex: 99999\n        }}\n      >\n        🎯 PinGameView IS RENDERING! Time: {timeMsRef.current.toFixed(0)}ms | Knives: {knives.length} | Circles: {approachCircles.length}\n      </div>\n\n      {/* UI Overlay */}\n      <div className=\"absolute top-8 left-8 text-white z-20 bg-black/30 p-4 rounded-xl backdrop-blur-sm border border-white/10 shadow-lg\">\n        <div className=\"text-3xl font-bold tracking-tighter\">Score: {score}</div>\n        <div className=\"text-xl mt-1\">Combo: {combo}</div>\n      </div>\n\n      {/* Game Area */}\n      <div className=\"relative w-96 h-96 flex items-center justify-center\">\n        {/* Target Circle (Hit Circle) */}\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          <div\n            className=\"w-64 h-64 bg-red-500/20 rounded-full border-4 border-red-500 shadow-lg\"\n            style={{ boxShadow: '0 0 30px rgba(239, 68, 68, 0.5)' }}\n          />\n        </div>\n\n        {/* Approach Circles (osu! style) - FORCE VISIBLE FOR DEBUG */}\n        {approachCircles.map(circle => {\n          const nowMs = timeMsRef.current;\n          const timeElapsed = nowMs - circle.startTime;\n          const progress = Math.min(1, timeElapsed / APPROACH_TIME);\n\n          // Start large and shrink to target size (ensure perfect circle)\n          const maxSize = 400;\n          const minSize = 256; // Target circle size\n          const currentSize = maxSize - (progress * (maxSize - minSize));\n\n          // Fade out as it approaches the target\n          const opacity = Math.max(0.4, 1 - progress * 0.6);\n\n          return (\n            <div\n              key={circle.uniqueKey}\n              className=\"absolute inset-0 flex items-center justify-center pointer-events-none\"\n            >\n              <div\n                className=\"rounded-full border-4 border-blue-400\"\n                style={{\n                  width: `${currentSize}px`,\n                  height: `${currentSize}px`,\n                  opacity,\n                  boxShadow: `0 0 20px rgba(96, 165, 250, ${opacity * 0.8})`,\n                  transition: 'none',\n                  aspectRatio: '1',\n                  flexShrink: 0,\n                }}\n              />\n            </div>\n          );\n        })}\n        \n        {/* FORCE RENDER TEST CIRCLE - ALWAYS VISIBLE - ENHANCED */}\n        <div className=\"absolute inset-0 flex items-center justify-center pointer-events-none z-50\">\n          <div\n            className=\"rounded-full border-8 border-yellow-400 animate-pulse\"\n            style={{\n              width: '300px',\n              height: '300px',\n              opacity: 1.0,\n              boxShadow: '0 0 50px rgba(255, 255, 0, 1.0), inset 0 0 30px rgba(255, 255, 0, 0.3)',\n              backgroundColor: 'rgba(255, 255, 0, 0.4)',\n              transform: 'scale(1.1)',\n            }}\n          >\n            <div className=\"absolute inset-4 rounded-full border-4 border-red-500 bg-red-500/20\" />\n          </div>\n        </div>\n        \n        {/* DEBUG TEXT OVERLAY */}\n        <div className=\"absolute top-0 left-0 bg-red-500 text-white p-4 z-50 text-lg font-bold\">\n          PinGameView is rendering!\n          <br />Circles: {approachCircles.length}\n          <br />Knives: {knives.length}\n          <br />Time: {timeMsRef.current.toFixed(0)}ms\n        </div>\n\n        {/* Rotating Pin (Knife Hit style) */}\n        <div\n          ref={targetRef}\n          className=\"absolute inset-0 flex items-center justify-center z-10 animate-spin\"\n          style={{ animationDuration: '3s', animationTimingFunction: 'linear' }}\n        >\n          {/* Pin center */}\n          <div className=\"w-8 h-8 bg-gray-600 rounded-full border-2 border-gray-400 shadow-lg\" />\n        </div>\n\n        {/* Knives - 물리 엔진에서 관리 */}\n        {getKnivesPositions().map(({ knife, position }) => (\n          <div\n            key={knife.id}\n            className=\"absolute left-1/2 top-1/2 z-20\"\n            style={{\n              // Center first, then move to (x,y), then rotate\n              transform: `translate(-50%, -50%) translate(${position.x}px, ${position.y}px) rotate(${position.rotation}deg)`,\n            }}\n          >\n            <svg width=\"18\" height=\"64\" viewBox=\"0 0 18 64\" fill=\"none\">\n              <path d=\"M9 2 L16 34 L2 34 Z\" fill=\"#d1d5db\" stroke=\"#e5e7eb\" strokeWidth=\"1\" />\n              <rect x=\"3\" y=\"34\" width=\"12\" height=\"4\" rx=\"2\" fill=\"#9ca3af\" />\n              <rect x=\"5.5\" y=\"38\" width=\"7\" height=\"18\" rx=\"2\" fill=\"#92400e\" />\n              <circle cx=\"9\" cy=\"58\" r=\"4\" fill=\"#78350f\" />\n            </svg>\n          </div>\n        ))}\n        \n        {/* FORCE RENDER TEST KNIFE - ALWAYS VISIBLE - ENHANCED */}\n        <div\n          className=\"absolute left-1/2 top-1/2 z-20 animate-bounce\"\n          style={{\n            transform: `translate(-50%, -50%) translate(0px, 100px) rotate(0deg)`,\n            filter: 'drop-shadow(0 0 10px rgba(255, 0, 0, 0.8))',\n          }}\n        >\n          <svg width=\"24\" height=\"80\" viewBox=\"0 0 24 80\" fill=\"none\">\n            <path d=\"M12 2 L20 40 L4 40 Z\" fill=\"#ff0000\" stroke=\"#ffffff\" strokeWidth=\"2\" />\n            <rect x=\"4\" y=\"40\" width=\"16\" height=\"6\" rx=\"3\" fill=\"#ff0000\" stroke=\"#ffffff\" strokeWidth=\"1\" />\n            <rect x=\"7\" y=\"46\" width=\"10\" height=\"24\" rx=\"3\" fill=\"#cc0000\" stroke=\"#ffffff\" strokeWidth=\"1\" />\n            <circle cx=\"12\" cy=\"72\" r=\"6\" fill=\"#990000\" stroke=\"#ffffff\" strokeWidth=\"1\" />\n          </svg>\n        </div>\n\n        {/* Combo Display */}\n        {combo > 2 && (\n          <div className=\"absolute -bottom-20 text-5xl font-black text-yellow-300 animate-pulse z-30\">\n            <span style={{ textShadow: '0 0 15px rgba(253, 224, 71, 0.8)' }}>\n              {combo} COMBO!\n            </span>\n          </div>\n        )}\n\n        {/* Judgment Display */}\n        <JudgmentDisplay judgment={judgment as Judgment | null} />\n      </div>\n    </div>\n  );\n};\n\nexport default PinGameView;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2072, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/ui/PreGameLobby.tsx"],"sourcesContent":["// src/renderer/components/ui/PreGameLobby.tsx\n'use client';\n\nimport React from 'react';\nimport { PinChart } from '../../../shared/types';\n\ninterface PreGameLobbyProps {\n  chart: PinChart | null;\n  isLoading: boolean;\n  onStartGame: () => void;\n  onBackToMenu: () => void;\n}\n\nexport const PreGameLobby: React.FC<PreGameLobbyProps> = ({\n  chart,\n  isLoading,\n  onStartGame,\n  onBackToMenu\n}) => {\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900 text-white\">\n      <div className=\"text-center space-y-8 p-8 bg-black/30 rounded-xl backdrop-blur-sm border border-white/10\">\n        <h1 className=\"text-4xl font-bold bg-gradient-to-r from-cyan-400 to-purple-400 bg-clip-text text-transparent\">\n          Ready to Play?\n        </h1>\n        \n        {isLoading ? (\n          <div className=\"space-y-4\">\n            <div className=\"animate-spin w-12 h-12 border-4 border-cyan-400 border-t-transparent rounded-full mx-auto\"></div>\n            <p className=\"text-lg text-gray-300\">Loading chart and audio...</p>\n          </div>\n        ) : (\n          <div className=\"space-y-6\">\n            <p className=\"text-lg text-gray-300\">Chart loaded and ready!</p>\n            <div className=\"flex gap-4 justify-center\">\n              <button\n                onClick={onStartGame}\n                className=\"px-8 py-3 bg-gradient-to-r from-green-500 to-emerald-600 hover:from-green-600 hover:to-emerald-700 rounded-lg font-semibold text-white transition-all duration-200 transform hover:scale-105 shadow-lg\"\n              >\n                Start Game\n              </button>\n              <button\n                onClick={onBackToMenu}\n                className=\"px-6 py-3 bg-gray-600 hover:bg-gray-500 rounded-lg transition-colors\"\n              >\n                Back to Menu\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":"AAAA,8CAA8C;;;;;;AAC9C;;AAYO,MAAM,eAA4C;QAAC,EACxD,KAAK,EACL,SAAS,EACT,WAAW,EACX,YAAY,EACb;IACC,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAU;8BAAgG;;;;;;gBAI7G,0BACC,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;;;;;sCACf,6LAAC;4BAAE,WAAU;sCAAwB;;;;;;;;;;;6EAGvC,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAE,WAAU;sCAAwB;;;;;;sCACrC,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCACC,SAAS;oCACT,WAAU;8CACX;;;;;;8CAGD,6LAAC;oCACC,SAAS;oCACT,WAAU;8CACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASf;KAxCa","debugId":null}},
    {"offset": {"line": 2184, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/ui/PauseMenu.tsx"],"sourcesContent":["// src/renderer/components/ui/PauseMenu.tsx\n'use client';\n\nimport React from 'react';\n\ninterface PauseMenuProps {\n  onResume: () => void;\n  onRestart: () => void;\n  onBackToMenu: () => void;\n}\n\nexport const PauseMenu: React.FC<PauseMenuProps> = ({\n  onResume,\n  onRestart,\n  onBackToMenu\n}) => {\n  return (\n    <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm flex items-center justify-center z-50\">\n      <div className=\"bg-gradient-to-br from-gray-900 to-gray-800 p-8 rounded-xl border border-white/20 shadow-2xl\">\n        <h2 className=\"text-3xl font-bold text-center mb-8 bg-gradient-to-r from-cyan-400 to-purple-400 bg-clip-text text-transparent\">\n          일시정지\n        </h2>\n        \n        <div className=\"space-y-4 min-w-[200px]\">\n          <button\n            onClick={onResume}\n            className=\"w-full px-6 py-3 bg-gradient-to-r from-green-500 to-emerald-600 hover:from-green-600 hover:to-emerald-700 rounded-lg font-semibold text-white transition-all duration-200 transform hover:scale-105 shadow-lg\"\n          >\n            계속하기\n          </button>\n          \n          <button\n            onClick={onRestart}\n            className=\"w-full px-6 py-3 bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 rounded-lg font-semibold text-white transition-all duration-200 transform hover:scale-105 shadow-lg\"\n          >\n            다시시작\n          </button>\n          \n          <button\n            onClick={onBackToMenu}\n            className=\"w-full px-6 py-3 bg-gray-600 hover:bg-gray-500 rounded-lg font-semibold text-white transition-colors\"\n          >\n            메뉴로\n          </button>\n        </div>\n        \n        <p className=\"text-center text-gray-400 text-sm mt-6\">\n          ESC 키를 눌러 계속하기\n        </p>\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":"AAAA,2CAA2C;;;;;;AAC3C;;AAUO,MAAM,YAAsC;QAAC,EAClD,QAAQ,EACR,SAAS,EACT,YAAY,EACb;IACC,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAU;8BAAiH;;;;;;8BAI/H,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;sCAID,6LAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;sCAID,6LAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;;;;;;;8BAKH,6LAAC;oBAAE,WAAU;8BAAyC;;;;;;;;;;;;;;;;;AAM9D;KAzCa","debugId":null}},
    {"offset": {"line": 2273, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/ui/VideoController.tsx"],"sourcesContent":["// src/renderer/components/ui/VideoController.tsx\n'use client';\n\nimport React, { useState, useRef, useEffect } from 'react';\n\ninterface VideoControllerProps {\n  videoPath: string | null;\n  className?: string;\n}\n\nconst VideoController: React.FC<VideoControllerProps> = ({ videoPath, className = \"\" }) => {\n  const [videoUrl, setVideoUrl] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [isReady, setIsReady] = useState(false);\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  useEffect(() => {\n    // Cleanup previous object URL if it exists\n    if (videoUrl && videoUrl.startsWith('blob:')) {\n      URL.revokeObjectURL(videoUrl);\n    }\n\n    if (!videoPath) {\n      setVideoUrl(null);\n      return;\n    }\n\n    setIsLoading(true);\n    setHasError(false);\n    setIsReady(false);\n\n    // Always use IPC to load video assets\n    (window as any).electron.loadAsset(videoPath)\n      .then((data: any) => {\n        if (data) {\n          const blob = new Blob([data], { type: 'video/mp4' });\n          const url = URL.createObjectURL(blob);\n          setVideoUrl(url);\n          setIsLoading(false);\n        } else {\n          throw new Error('IPC returned no data for video asset');\n        }\n      })\n      .catch((err: any) => {\n        console.error('Failed to load video asset via IPC:', err);\n        setHasError(true);\n        setIsLoading(false);\n      });\n\n    // Cleanup function for when the component unmounts or videoPath changes\n    return () => {\n      if (videoUrl && videoUrl.startsWith('blob:')) {\n        URL.revokeObjectURL(videoUrl);\n      }\n    };\n  }, [videoPath]);\n\n  const handleLoadStart = () => {\n    setIsLoading(true);\n  };\n\n  const handleCanPlay = () => {\n    setIsLoading(false);\n    setIsReady(true);\n    setHasError(false);\n  };\n\n  const handleError = () => {\n    console.error(`Failed to load video: ${videoUrl}`);\n    setIsLoading(false);\n    setHasError(true);\n  };\n\n  if (!videoUrl) {\n    return (\n      <div className=\"fixed inset-0 z-0 bg-black flex items-center justify-center\">\n        {isLoading && <div className=\"text-white\">Loading Video...</div>}\n        {hasError && <div className=\"text-red-500\">Error Loading Video</div>}\n      </div>\n    );\n  }\n\n  return (\n    <video\n      ref={videoRef}\n      className={`fixed inset-0 w-full h-full object-cover z-0 ${className}`}\n      src={videoUrl}\n      autoPlay\n      loop\n      muted\n      playsInline\n      onLoadStart={handleLoadStart}\n      onCanPlay={handleCanPlay}\n      onError={handleError}\n      style={{\n        opacity: isReady ? 1 : 0,\n        transition: 'opacity 0.5s ease-in-out',\n      }}\n    />\n  );\n};\n\nexport default VideoController;\n"],"names":[],"mappings":"AAAA,iDAAiD;;;;;;AAGjD;;;AAFA;;AASA,MAAM,kBAAkD;QAAC,EAAE,SAAS,EAAE,YAAY,EAAE,EAAE;;IACpF,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,yKAAQ,EAAgB;IACxD,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,yKAAQ,EAAC;IAC3C,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,yKAAQ,EAAC;IACzC,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,yKAAQ,EAAC;IACvC,MAAM,WAAW,IAAA,uKAAM,EAAmB;IAE1C,IAAA,0KAAS;qCAAC;YACR,2CAA2C;YAC3C,IAAI,YAAY,SAAS,UAAU,CAAC,UAAU;gBAC5C,IAAI,eAAe,CAAC;YACtB;YAEA,IAAI,CAAC,WAAW;gBACd,YAAY;gBACZ;YACF;YAEA,aAAa;YACb,YAAY;YACZ,WAAW;YAEX,sCAAsC;YACrC,OAAe,QAAQ,CAAC,SAAS,CAAC,WAChC,IAAI;6CAAC,CAAC;oBACL,IAAI,MAAM;wBACR,MAAM,OAAO,IAAI,KAAK;4BAAC;yBAAK,EAAE;4BAAE,MAAM;wBAAY;wBAClD,MAAM,MAAM,IAAI,eAAe,CAAC;wBAChC,YAAY;wBACZ,aAAa;oBACf,OAAO;wBACL,MAAM,IAAI,MAAM;oBAClB;gBACF;4CACC,KAAK;6CAAC,CAAC;oBACN,QAAQ,KAAK,CAAC,uCAAuC;oBACrD,YAAY;oBACZ,aAAa;gBACf;;YAEF,wEAAwE;YACxE;6CAAO;oBACL,IAAI,YAAY,SAAS,UAAU,CAAC,UAAU;wBAC5C,IAAI,eAAe,CAAC;oBACtB;gBACF;;QACF;oCAAG;QAAC;KAAU;IAEd,MAAM,kBAAkB;QACtB,aAAa;IACf;IAEA,MAAM,gBAAgB;QACpB,aAAa;QACb,WAAW;QACX,YAAY;IACd;IAEA,MAAM,cAAc;QAClB,QAAQ,KAAK,CAAC,AAAC,yBAAiC,OAAT;QACvC,aAAa;QACb,YAAY;IACd;IAEA,IAAI,CAAC,UAAU;QACb,qBACE,6LAAC;YAAI,WAAU;;gBACZ,2BAAa,6LAAC;oBAAI,WAAU;8BAAa;;;;;;gBACzC,0BAAY,6LAAC;oBAAI,WAAU;8BAAe;;;;;;;;;;;;IAGjD;IAEA,qBACE,6LAAC;QACC,KAAK;QACL,WAAW,AAAC,gDAAyD,OAAV;QAC3D,KAAK;QACL,QAAQ;QACR,IAAI;QACJ,KAAK;QACL,WAAW;QACX,aAAa;QACb,WAAW;QACX,SAAS;QACT,OAAO;YACL,SAAS,UAAU,IAAI;YACvB,YAAY;QACd;;;;;;AAGN;GA3FM;KAAA;uCA6FS","debugId":null}},
    {"offset": {"line": 2413, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/scenes/GameScene.tsx"],"sourcesContent":["// src/renderer/components/scenes/GameScene.tsx\n'use client';\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport useGameStore from '../../store/gameStore';\nimport PinGameView from '../game/PinGameView';\nimport OsuGameView from '../game/OsuGameView';\nimport { PreGameLobby } from '../ui/PreGameLobby';\nimport { PauseMenu } from '../ui/PauseMenu';\nimport VideoController from '../ui/VideoController';\nimport { audioService } from '../../lib/AudioService';\nimport { PinChart } from '../../../shared/types';\n\ninterface GameSceneProps {\n  selectedChart: PinChart;\n  onBack: () => void;\n}\n\nconst GameScene: React.FC<GameSceneProps> = ({ selectedChart, onBack }) => {\n  const { score, combo, judgment, isPaused, updateGame, togglePause, reset } = useGameStore();\n\n  const [pinChart, setPinChart] = useState<PinChart | null>(null);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [videoPath, setVideoPath] = useState<string | null>(null);\n  const [backgroundUrl, setBackgroundUrl] = useState<string | null>(null);\n\n  const handleStartGame = async () => {\n    if (!pinChart || isLoading) {\n      console.warn('Pin chart or audio not loaded yet. Cannot start game.');\n      return;\n    }\n    console.log('Starting pin game...');\n    setGameStarted(true);\n\n    try {\n      // Initialize the game controller with the chart using handshake\n      const gameStartResult = await (window as any).electron.startGame(pinChart);\n      \n      if (!gameStartResult.success) {\n        console.error('Failed to start game in main process:', gameStartResult.error);\n        alert(`Failed to start game: ${gameStartResult.error}`);\n        setGameStarted(false);\n        return;\n      }\n\n      // Start audio playback only after successful game initialization\n      audioService.play();\n    } catch (error) {\n      console.error('Error during game start:', error);\n      alert(`Failed to start game: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      setGameStarted(false);\n    }\n  };\n\n  const handlePinPress = () => {\n    if (!gameStarted || isPaused) {\n      return;\n    }\n\n    // Send the renderer master time (seconds) to Main for judgment\n    const nowSec = audioService.getCurrentTime();\n    (window as any).electron.handlePinPress(nowSec);\n  };\n\n  // Load assets\n  useEffect(() => {\n    const loadGameAssets = async () => {\n      if (!selectedChart) {\n        console.error('No chart selected, returning to select screen.');\n        onBack();\n        return;\n      }\n\n      try {\n        setIsLoading(true);\n        \n        // --- START: ADD CRITICAL CHART DATA VALIDATION ---\n        console.log('[Renderer] Loading PinChart:', selectedChart);\n        if (!selectedChart || !selectedChart.notes || selectedChart.notes.length === 0) {\n          console.error('[Renderer] CRITICAL: Chart data is missing or notes are empty!');\n          alert('Chart data is invalid. Returning to selection.');\n          onBack();\n          return;\n        }\n        console.log('[Renderer] Chart validation passed - notes count:', selectedChart.notes.length);\n        // --- END: ADD CRITICAL CHART DATA VALIDATION ---\n        \n        setPinChart(selectedChart);\n\n        // Load main audio track\n        if (selectedChart.audioFilename) {\n          await audioService.loadAudio(selectedChart.audioFilename);\n          console.log(`[GameScene] Main audio loaded: ${selectedChart.audioFilename}`);\n        }\n\n        // --- [수정] 안전한 히트 사운드 로딩 로직 ---\n\n        // 개별 애셋을 안전하게 로드하는 헬퍼 함수\n        const loadSoundSafely = async (soundKey: string, fileName: string) => {\n          try {\n            const assetUri = `${selectedChart.folderPath}/${fileName}`;\n            console.log(`[HITSOUND DEBUG] Attempting to load sound: ${assetUri} as '${soundKey}'`);\n            console.log(`[HITSOUND DEBUG] selectedChart.folderPath: ${selectedChart.folderPath}`);\n            \n            // Use selectedChart directly instead of waiting for pinChart state\n            if (selectedChart && selectedChart.folderPath) {\n              await audioService.loadHitsound(soundKey, assetUri);\n              console.log(`[HITSOUND DEBUG] Successfully loaded sound: ${assetUri} as '${soundKey}'`);\n            } else {\n              console.error(`[HITSOUND DEBUG] Cannot load sound - missing selectedChart or folderPath`);\n              console.error(`[HITSOUND DEBUG] selectedChart:`, selectedChart);\n            }\n          } catch (e) {\n            // 개별 사운드 로딩에 실패하더라도, 전체 프로세스를 중단시키지 않고 경고만 남깁니다.\n            console.error(`[HITSOUND DEBUG] FAILED to load sound asset: ${fileName}`, e);\n          }\n        };\n\n        // 로드하려는 사운드 목록 - 모두 optional이므로 실패해도 게임 진행\n        console.log(`[HITSOUND DEBUG] Starting hitsound loading - all optional`);\n        await loadSoundSafely('normal-hitnormal', 'normal-hitnormal.wav');\n        await loadSoundSafely('combobreak', 'combobreak.wav');\n        await loadSoundSafely('normal-hitwhistle', 'normal-hitwhistle.wav');\n        console.log(`[HITSOUND DEBUG] Hitsound loading completed - game can proceed without them`);\n\n        // --- 수정 끝 ---\n\n        // Set background path if available\n        // Set video or background\n        if (selectedChart.videoPath) {\n          setVideoPath(selectedChart.videoPath);\n          setBackgroundUrl(null); // Ensure static bg is cleared\n        } else if (selectedChart.backgroundPath) {\n          setVideoPath(null); // Ensure video is cleared\n          // Load the background image as a blob URL to use in styles\n          try {\n            const imageBuffer = await (window as any).electron.loadAsset(selectedChart.backgroundPath);\n            const blob = new Blob([imageBuffer], { type: 'image/jpeg' }); // Adjust type if needed\n            const url = URL.createObjectURL(blob);\n            setBackgroundUrl(url);\n          } catch (bgError) {\n            console.error('Failed to load background image:', bgError);\n            setBackgroundUrl(null);\n          }\n        } else {\n          // No video or background\n          setVideoPath(null);\n          setBackgroundUrl(null);\n        }\n\n        setIsLoading(false);\n        console.log(`[GameScene] Asset loading completed successfully`);\n      } catch (error: unknown) {\n        console.error('Failed to load game assets:', error);\n        setIsLoading(false);\n        \n        // Show user-friendly error\n        const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n        alert(`Failed to load game assets: ${errorMessage}\\n\\nReturning to song selection.`);\n        \n        // Return to select scene\n        onBack();\n      }\n    };\n\n    loadGameAssets();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedChart]);\n\n  // Set up game update listener\n  useEffect(() => {\n    const removeOnGameUpdate = (window as any).electron.onGameUpdate((gameUpdate: any) => {\n      // The game state is updated via IPC from the main process.\n      updateGame(gameUpdate);\n    });\n\n    // This effect should only run once on mount to set up the listener.\n    return () => {\n      removeOnGameUpdate();\n      audioService.stop();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Keyboard controls\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (!gameStarted || isPaused) return;\n\n      if (event.code === 'Space') {\n        event.preventDefault();\n        handlePinPress();\n      }\n    };\n\n    if (gameStarted && !isPaused) {\n      window.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [gameStarted, isPaused]);\n\n  // Pause/unpause controls\n  useEffect(() => {\n    const handleGlobalKeyDown = (event: KeyboardEvent) => {\n      if (event.code === 'Escape') {\n        event.preventDefault();\n        togglePause();\n      }\n    };\n\n    if (gameStarted) {\n      window.addEventListener('keydown', handleGlobalKeyDown);\n    }\n\n    return () => {\n      window.removeEventListener('keydown', handleGlobalKeyDown);\n    };\n  }, [gameStarted, togglePause]);\n\n  const handleRestart = () => {\n    reset();\n    togglePause();\n    handleStartGame();\n  };\n\n  const handleBackToMenu = () => {\n    reset();\n    togglePause();\n    onBack();\n  };\n\n  // Render different states\n  if (!gameStarted) {\n    return (\n      <div>\n        <div className=\"absolute top-0 left-0 bg-orange-500 text-white p-4 z-50 text-lg font-bold\">\n          PRE-GAME STATE - gameStarted: {gameStarted ? 'YES' : 'NO'}\n        </div>\n        <PreGameLobby\n          chart={pinChart}\n          isLoading={isLoading}\n          onStartGame={handleStartGame}\n          onBackToMenu={onBack}\n        />\n      </div>\n    );\n  }\n\n  if (isPaused) {\n    return (\n      <PauseMenu\n        onResume={togglePause}\n        onRestart={handleRestart}\n        onBackToMenu={handleBackToMenu}\n      />\n    );\n  }\n\n  return (\n    <div className=\"relative w-full h-screen overflow-hidden bg-black\">\n      {/* Background: Video > Static Image > Fallback */}\n      {videoPath ? (\n        <VideoController key={videoPath} videoPath={videoPath} />\n      ) : backgroundUrl ? (\n        <div\n          className=\"absolute inset-0 z-0 bg-cover bg-center\"\n          style={{ backgroundImage: `url(${backgroundUrl})` }}\n        />\n      ) : (\n        <div className=\"absolute inset-0 z-0 bg-gray-900\" />\n      )}\n\n      {/* MEGA DEBUG OVERLAY FOR GAMESCENE - ALWAYS VISIBLE */}\n      <div \n        className=\"fixed top-0 right-0 bg-blue-600 text-white p-6 z-50\"\n        style={{ \n          fontSize: '20px', \n          fontWeight: 'bold',\n          boxShadow: '0 0 50px rgba(0, 0, 255, 1)',\n          zIndex: 99998,\n          minWidth: '400px'\n        }}\n      >\n        🎮 GAMESCENE STATUS:<br/>\n        pinChart: {pinChart ? 'EXISTS' : 'NULL'}<br/>\n        gameMode: {pinChart?.gameMode || 'NONE'}<br/>\n        gameStarted: {gameStarted ? 'YES' : 'NO'}<br/>\n        isPaused: {isPaused ? 'YES' : 'NO'}<br/>\n        Chart Title: {pinChart?.title || 'N/A'}\n      </div>\n\n      {/* Game View */}\n      <div className=\"absolute top-20 left-4 bg-green-500 text-white p-4 z-50 text-lg font-bold\">\n        GameScene Debug:\n        <br />pinChart: {pinChart ? 'EXISTS' : 'NULL'}\n        <br />gameMode: {pinChart?.gameMode || 'NONE'}\n        <br />gameStarted: {gameStarted ? 'YES' : 'NO'}\n      </div>\n      \n      {/* ALWAYS TRY TO RENDER PINGAMEVIEW FOR DEBUGGING */}\n      {(() => {\n        console.log('[GameScene] About to render game view. pinChart:', !!pinChart, 'gameMode:', pinChart?.gameMode);\n        return null;\n      })()}\n      \n      {pinChart && (\n        (() => {\n          console.log('[GameScene] FORCE RENDERING PinGameView - Original gameMode:', pinChart.gameMode, '-> FORCING PIN MODE');\n          // FORCE PIN GAME MODE FOR DEBUGGING - Always render PinGameView regardless of gameMode\n          const forcedPinChart = { ...pinChart, gameMode: 'pin' as const };\n          return (\n            <div className=\"absolute inset-0 bg-blue-500/20\">\n              <div className=\"absolute top-0 left-0 bg-purple-500 text-white p-4 z-50 text-lg font-bold\">\n                🎯 RENDERING PinGameView! (FORCED MODE - Original: {pinChart.gameMode})\n              </div>\n              <PinGameView\n                chart={forcedPinChart}\n                onPinThrow={handlePinPress}\n                score={score}\n                combo={combo}\n                judgment={judgment}\n                noteSpeed={500}\n              />\n            </div>\n          );\n        })()\n      )}\n      \n      {/* FORCE RENDER PINGAMEVIEW ALWAYS FOR DEBUGGING - REMOVE LATER */}\n      <div \n        className=\"fixed bottom-0 left-0 w-full bg-orange-500 text-white p-4 z-50\"\n        style={{ fontSize: '16px', zIndex: 99997 }}\n      >\n        🔍 DEBUG: pinChart={pinChart ? 'YES' : 'NO'} | gameMode={pinChart?.gameMode || 'N/A'} | \n        Chart Details: {pinChart ? `${pinChart.title} - ${pinChart.notes?.length} notes` : 'No chart'}\n      </div>\n      \n      {/* Debug info overlay */}\n      <div className=\"absolute top-4 right-4 bg-black/50 text-white p-2 text-sm z-50\">\n        <div>Chart: {pinChart?.title || 'None'}</div>\n        <div>Notes: {pinChart?.notes?.length || 0}</div>\n        <div>Game Started: {gameStarted ? 'Yes' : 'No'}</div>\n        <div>Loading: {isLoading ? 'Yes' : 'No'}</div>\n        <div>Audio Time: {audioService.getCurrentTime().toFixed(2)}s</div>\n      </div>\n    </div>\n  );\n};\n\nexport default GameScene;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2956, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/lib/gameUtils.ts"],"sourcesContent":["// src/renderer/lib/gameUtils.ts\n\nimport { JudgmentCounts } from '../../shared/types';\n\n/**\n * Calculates the accuracy based on judgment counts.\n * Perfects are worth 100%, Greats are worth 50%.\n * @param judgments - An object containing the counts of each judgment type.\n * @returns The calculated accuracy as a percentage (0-100).\n */\nexport const calculateAccuracy = (judgments: JudgmentCounts): number => {\n  const totalNotes =\n    judgments.KOOL + judgments.COOL + judgments.GOOD + judgments.MISS;\n  if (totalNotes === 0) {\n    return 0;\n  }\n\n  const weightedScore =\n    judgments.KOOL * 1 + judgments.COOL * 0.5 + judgments.GOOD * 0.25;\n  const accuracy = (weightedScore / totalNotes) * 100;\n\n  return parseFloat(accuracy.toFixed(2)); // Return with 2 decimal places\n};\n\n/**\n * Determines the rank based on the accuracy score.\n * @param accuracy - The accuracy percentage.\n * @returns A string representing the rank (e.g., 'S', 'A', 'B').\n */\nexport const getRank = (accuracy: number): string => {\n  if (accuracy >= 98) return 'S';\n  if (accuracy >= 95) return 'A';\n  if (accuracy >= 90) return 'B';\n  if (accuracy >= 80) return 'C';\n  return 'D';\n};\n\n// ------------------------------\n// osu!-style timing utilities\n// ------------------------------\n\n// Clamp a value between [a, b]\nexport function clamp(v: number, a: number, b: number) {\n  return Math.max(a, Math.min(b, v));\n}\n\n// Linear interpolation\nexport function lerp(a: number, b: number, t: number) {\n  return a + (b - a) * t;\n}\n\n// AR -> preempt (ms)\nexport function preemptFromAR(AR: number) {\n  if (AR <= 5) return 1800 - 120 * AR;\n  return 1200 - 150 * (AR - 5);\n}\n\n// OD -> hit windows (ms)\nexport function windowsFromOD(OD: number) {\n  const w300 = 80 - 6 * OD;\n  const w100 = 140 - 8 * OD;\n  const w50 = 200 - 10 * OD;\n  return { w300, w100, w50 };\n}\n\n// Approach ring scale for current frame\nexport function approachScale(\n  nowMs: number,\n  hitTimeMs: number,\n  preemptMs: number,\n  startScale = 2.0\n) {\n  const t = clamp(1 - (hitTimeMs - nowMs) / preemptMs, 0, 1);\n  return lerp(startScale, 1.0, t);\n}\n\n// Hit circle alpha (fade-in over first 40% of preempt)\nexport function hitAlpha(nowMs: number, spawnTimeMs: number, preemptMs: number) {\n  const fadeIn = preemptMs * 0.4;\n  const x = clamp((nowMs - spawnTimeMs) / fadeIn, 0, 1);\n  // smoothstep\n  return x * x * (3 - 2 * x);\n}\n"],"names":[],"mappings":"AAAA,gCAAgC;;;;;;;;;;;;;;;;;;;AAUzB,MAAM,oBAAoB,CAAC;IAChC,MAAM,aACJ,UAAU,IAAI,GAAG,UAAU,IAAI,GAAG,UAAU,IAAI,GAAG,UAAU,IAAI;IACnE,IAAI,eAAe,GAAG;QACpB,OAAO;IACT;IAEA,MAAM,gBACJ,UAAU,IAAI,GAAG,IAAI,UAAU,IAAI,GAAG,MAAM,UAAU,IAAI,GAAG;IAC/D,MAAM,WAAW,AAAC,gBAAgB,aAAc;IAEhD,OAAO,WAAW,SAAS,OAAO,CAAC,KAAK,+BAA+B;AACzE;AAOO,MAAM,UAAU,CAAC;IACtB,IAAI,YAAY,IAAI,OAAO;IAC3B,IAAI,YAAY,IAAI,OAAO;IAC3B,IAAI,YAAY,IAAI,OAAO;IAC3B,IAAI,YAAY,IAAI,OAAO;IAC3B,OAAO;AACT;AAOO,SAAS,MAAM,CAAS,EAAE,CAAS,EAAE,CAAS;IACnD,OAAO,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG;AACjC;AAGO,SAAS,KAAK,CAAS,EAAE,CAAS,EAAE,CAAS;IAClD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI;AACvB;AAGO,SAAS,cAAc,EAAU;IACtC,IAAI,MAAM,GAAG,OAAO,OAAO,MAAM;IACjC,OAAO,OAAO,MAAM,CAAC,KAAK,CAAC;AAC7B;AAGO,SAAS,cAAc,EAAU;IACtC,MAAM,OAAO,KAAK,IAAI;IACtB,MAAM,OAAO,MAAM,IAAI;IACvB,MAAM,MAAM,MAAM,KAAK;IACvB,OAAO;QAAE;QAAM;QAAM;IAAI;AAC3B;AAGO,SAAS,cACd,KAAa,EACb,SAAiB,EACjB,SAAiB;QACjB,aAAA,iEAAa;IAEb,MAAM,IAAI,MAAM,IAAI,CAAC,YAAY,KAAK,IAAI,WAAW,GAAG;IACxD,OAAO,KAAK,YAAY,KAAK;AAC/B;AAGO,SAAS,SAAS,KAAa,EAAE,WAAmB,EAAE,SAAiB;IAC5E,MAAM,SAAS,YAAY;IAC3B,MAAM,IAAI,MAAM,CAAC,QAAQ,WAAW,IAAI,QAAQ,GAAG;IACnD,aAAa;IACb,OAAO,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC;AAC3B","debugId":null}},
    {"offset": {"line": 3029, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/game/ScoreSummary.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\n\ninterface ScoreSummaryProps {\n  score: number;\n  maxCombo: number;\n}\n\nconst getRank = (score: number) => {\n  if (score > 950000) return { rank: 'S', color: 'text-theme-highlight' };\n  if (score > 900000) return { rank: 'A', color: 'text-theme-primary' };\n  if (score > 800000) return { rank: 'B', color: 'text-theme-primary/80' };\n  if (score > 700000) return { rank: 'C', color: 'text-theme-text-dark' };\n  return { rank: 'D', color: 'text-theme-accent' };\n};\n\nconst ScoreSummary: React.FC<ScoreSummaryProps> = ({ score, maxCombo }) => {\n  const { rank, color } = getRank(score);\n\n  return (\n    <div className=\"text-center\">\n      <p className=\"text-2xl text-theme-text-dark font-medium mb-2\">FINAL SCORE</p>\n      <p className=\"text-8xl font-black text-transparent bg-gradient-to-r from-theme-primary to-theme-secondary bg-clip-text mb-4\">\n        {score.toLocaleString()}\n      </p>\n      <div className=\"flex justify-center items-baseline gap-8 text-theme-text-light\">\n        <div className=\"text-center\">\n          <p className=\"text-lg text-theme-text-dark\">RANK</p>\n          <p className={`text-5xl font-bold ${color}`}>{rank}</p>\n        </div>\n        <div className=\"text-center\">\n          <p className=\"text-lg text-theme-text-dark\">MAX COMBO</p>\n          <p className=\"text-5xl font-bold\">{maxCombo}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ScoreSummary;\n"],"names":[],"mappings":";;;;;AAAA;;AASA,MAAM,UAAU,CAAC;IACf,IAAI,QAAQ,QAAQ,OAAO;QAAE,MAAM;QAAK,OAAO;IAAuB;IACtE,IAAI,QAAQ,QAAQ,OAAO;QAAE,MAAM;QAAK,OAAO;IAAqB;IACpE,IAAI,QAAQ,QAAQ,OAAO;QAAE,MAAM;QAAK,OAAO;IAAwB;IACvE,IAAI,QAAQ,QAAQ,OAAO;QAAE,MAAM;QAAK,OAAO;IAAuB;IACtE,OAAO;QAAE,MAAM;QAAK,OAAO;IAAoB;AACjD;AAEA,MAAM,eAA4C;QAAC,EAAE,KAAK,EAAE,QAAQ,EAAE;IACpE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,QAAQ;IAEhC,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAE,WAAU;0BAAiD;;;;;;0BAC9D,6LAAC;gBAAE,WAAU;0BACV,MAAM,cAAc;;;;;;0BAEvB,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAE,WAAU;0CAA+B;;;;;;0CAC5C,6LAAC;gCAAE,WAAW,AAAC,sBAA2B,OAAN;0CAAU;;;;;;;;;;;;kCAEhD,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAE,WAAU;0CAA+B;;;;;;0CAC5C,6LAAC;gCAAE,WAAU;0CAAsB;;;;;;;;;;;;;;;;;;;;;;;;AAK7C;KArBM;uCAuBS","debugId":null}},
    {"offset": {"line": 3157, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/game/JudgmentDetails.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { JudgmentCounts, Judgment } from '../../../shared/types';\n\ninterface JudgmentDetailsProps {\n  judgments: JudgmentCounts;\n}\n\nconst judgmentStyles: Record<Judgment, string> = {\n  KOOL: 'text-theme-highlight',\n  COOL: 'text-theme-primary',\n  GOOD: 'text-green-400',\n  MISS: 'text-theme-accent',\n};\n\nconst JudgmentDetails: React.FC<JudgmentDetailsProps> = ({ judgments }) => {\n  const judgmentOrder: Judgment[] = ['KOOL', 'COOL', 'GOOD', 'MISS'];\n\n  return (\n    <div className=\"grid grid-cols-4 gap-4 text-center\">\n      {judgmentOrder.map((key) => (\n        <div key={key}>\n          <p className={`text-lg ${judgmentStyles[key]} font-bold`}>{key}</p>\n          <p className=\"text-3xl font-semibold text-theme-text-light\">\n            {judgments[key]}\n          </p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default JudgmentDetails;\n"],"names":[],"mappings":";;;;;AAAA;;AASA,MAAM,iBAA2C;IAC/C,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;AACR;AAEA,MAAM,kBAAkD;QAAC,EAAE,SAAS,EAAE;IACpE,MAAM,gBAA4B;QAAC;QAAQ;QAAQ;QAAQ;KAAO;IAElE,qBACE,6LAAC;QAAI,WAAU;kBACZ,cAAc,GAAG,CAAC,CAAC,oBAClB,6LAAC;;kCACC,6LAAC;wBAAE,WAAW,AAAC,WAA8B,OAApB,cAAc,CAAC,IAAI,EAAC;kCAAc;;;;;;kCAC3D,6LAAC;wBAAE,WAAU;kCACV,SAAS,CAAC,IAAI;;;;;;;eAHT;;;;;;;;;;AASlB;KAfM;uCAiBS","debugId":null}},
    {"offset": {"line": 3221, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/game/FinishActions.tsx"],"sourcesContent":["// src/renderer/components/game/FinishActions.tsx\n'use client';\n\nimport React from 'react';\n\ninterface ActionButtonProps {\n  label: string;\n  onClick: () => void;\n  variant: 'primary' | 'secondary';\n}\n\nconst ActionButton: React.FC<ActionButtonProps> = ({ label, onClick, variant }) => {\n  const baseClasses = 'px-8 py-3 rounded-xl transition-all duration-200 font-medium transform hover:scale-105';\n  const styles = {\n    primary: 'bg-theme-primary/20 hover:bg-theme-primary/30 border border-theme-primary/50 text-theme-primary hover:text-theme-primary/90',\n    secondary: 'bg-theme-text-dark/30 hover:bg-theme-text-dark/50 text-theme-text-light/80 hover:text-theme-text-light',\n  };\n  return (\n    <button onClick={onClick} className={`${baseClasses} ${styles[variant]}`}>\n      {label}\n    </button>\n  );\n};\n\ninterface FinishActionsProps {\n  onRestart: () => void;\n  onSelectMusic: () => void;\n}\n\nconst FinishActions: React.FC<FinishActionsProps> = ({ onRestart, onSelectMusic }) => {\n  const actions: ActionButtonProps[] = [\n    { label: 'Retry', onClick: onRestart, variant: 'primary' },\n    { label: 'Back to Menu', onClick: onSelectMusic, variant: 'secondary' },\n  ];\n\n  return (\n    <div className=\"flex justify-center gap-6\">\n      {actions.map((action) => (\n        <ActionButton key={action.label} {...action} />\n      ))}\n    </div>\n  );\n};\n\nexport default FinishActions;\n"],"names":[],"mappings":"AAAA,iDAAiD;;;;;;AACjD;;AAUA,MAAM,eAA4C;QAAC,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE;IAC5E,MAAM,cAAc;IACpB,MAAM,SAAS;QACb,SAAS;QACT,WAAW;IACb;IACA,qBACE,6LAAC;QAAO,SAAS;QAAS,WAAW,AAAC,GAAiB,OAAf,aAAY,KAAmB,OAAhB,MAAM,CAAC,QAAQ;kBACnE;;;;;;AAGP;KAXM;AAkBN,MAAM,gBAA8C;QAAC,EAAE,SAAS,EAAE,aAAa,EAAE;IAC/E,MAAM,UAA+B;QACnC;YAAE,OAAO;YAAS,SAAS;YAAW,SAAS;QAAU;QACzD;YAAE,OAAO;YAAgB,SAAS;YAAe,SAAS;QAAY;KACvE;IAED,qBACE,6LAAC;QAAI,WAAU;kBACZ,QAAQ,GAAG,CAAC,CAAC,uBACZ,6LAAC;gBAAiC,GAAG,MAAM;eAAxB,OAAO,KAAK;;;;;;;;;;AAIvC;MAbM;uCAeS","debugId":null}},
    {"offset": {"line": 3288, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/game/RankDisplay.tsx"],"sourcesContent":["// src/renderer/components/game/RankDisplay.tsx\n'use client';\n\nimport React from 'react';\n\ninterface RankDisplayProps {\n  rank: string;\n}\n\nconst rankColorMap: { [key: string]: string } = {\n  S: 'text-yellow-400',\n  A: 'text-green-400',\n  B: 'text-blue-400',\n  C: 'text-purple-400',\n  D: 'text-gray-500',\n};\n\nconst RankDisplay: React.FC<RankDisplayProps> = ({ rank }) => {\n  const color = rankColorMap[rank] || 'text-gray-500';\n\n  return (\n    <div className=\"flex flex-col items-center\">\n      <p className=\"text-2xl font-semibold text-theme-text-light/80 mb-2\">Rank</p>\n      <div\n        className={`text-9xl font-black ${color} transform-gpu transition-all duration-500`}\n        style={{ filter: `drop-shadow(0 0 20px ${color.replace('text-', 'bg-').split('-')[0]})` }}\n      >\n        {rank}\n      </div>\n    </div>\n  );\n};\n\nexport default RankDisplay;\n"],"names":[],"mappings":"AAAA,+CAA+C;;;;;;AAC/C;;AAQA,MAAM,eAA0C;IAC9C,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;AACL;AAEA,MAAM,cAA0C;QAAC,EAAE,IAAI,EAAE;IACvD,MAAM,QAAQ,YAAY,CAAC,KAAK,IAAI;IAEpC,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAE,WAAU;0BAAuD;;;;;;0BACpE,6LAAC;gBACC,WAAW,AAAC,uBAA4B,OAAN,OAAM;gBACxC,OAAO;oBAAE,QAAQ,AAAC,wBAAmE,OAA5C,MAAM,OAAO,CAAC,SAAS,OAAO,KAAK,CAAC,IAAI,CAAC,EAAE,EAAC;gBAAG;0BAEvF;;;;;;;;;;;;AAIT;KAdM;uCAgBS","debugId":null}},
    {"offset": {"line": 3346, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/game/AccuracyDisplay.tsx"],"sourcesContent":["// src/renderer/components/game/AccuracyDisplay.tsx\n'use client';\n\nimport React from 'react';\nimport { useSpring, animated } from 'react-spring';\n\ninterface AccuracyDisplayProps {\n  accuracy: number;\n}\n\nconst AccuracyDisplay: React.FC<AccuracyDisplayProps> = ({ accuracy }) => {\n  const radius = 60;\n  const circumference = 2 * Math.PI * radius;\n\n  const { val } = useSpring({\n    from: { val: 0 },\n    to: { val: accuracy },\n    config: { duration: 1000 },\n  });\n\n  const { strokeDashoffset } = useSpring({\n    from: { strokeDashoffset: circumference },\n    to: { strokeDashoffset: circumference - (accuracy / 100) * circumference },\n    config: { duration: 1000 },\n  });\n\n  return (\n    <div className=\"flex flex-col items-center\">\n      <p className=\"text-2xl font-semibold text-theme-text-light/80 mb-4\">Accuracy</p>\n      <div className=\"relative w-40 h-40\">\n        <svg className=\"w-full h-full\" viewBox=\"0 0 140 140\">\n          <circle\n            cx=\"70\"\n            cy=\"70\"\n            r={radius}\n            strokeWidth=\"10\"\n            className=\"stroke-current text-theme-text-dark/30\"\n            fill=\"transparent\"\n          />\n          <animated.circle\n            cx=\"70\"\n            cy=\"70\"\n            r={radius}\n            strokeWidth=\"10\"\n            className=\"stroke-current text-theme-accent transform -rotate-90 origin-center\"\n            fill=\"transparent\"\n            strokeDasharray={circumference}\n            strokeDashoffset={strokeDashoffset}\n            strokeLinecap=\"round\"\n          />\n        </svg>\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          <animated.p className=\"text-4xl font-bold text-theme-text-light\">\n            {val.to((v) => `${v.toFixed(2)}%`)}\n          </animated.p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AccuracyDisplay;\n"],"names":[],"mappings":"AAAA,mDAAmD;;;;;;AAInD;AAAA;AAAA;;;AAHA;;AASA,MAAM,kBAAkD;QAAC,EAAE,QAAQ,EAAE;;IACnE,MAAM,SAAS;IACf,MAAM,gBAAgB,IAAI,KAAK,EAAE,GAAG;IAEpC,MAAM,EAAE,GAAG,EAAE,GAAG,IAAA,oMAAS,EAAC;QACxB,MAAM;YAAE,KAAK;QAAE;QACf,IAAI;YAAE,KAAK;QAAS;QACpB,QAAQ;YAAE,UAAU;QAAK;IAC3B;IAEA,MAAM,EAAE,gBAAgB,EAAE,GAAG,IAAA,oMAAS,EAAC;QACrC,MAAM;YAAE,kBAAkB;QAAc;QACxC,IAAI;YAAE,kBAAkB,gBAAgB,AAAC,WAAW,MAAO;QAAc;QACzE,QAAQ;YAAE,UAAU;QAAK;IAC3B;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAE,WAAU;0BAAuD;;;;;;0BACpE,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;wBAAgB,SAAQ;;0CACrC,6LAAC;gCACC,IAAG;gCACH,IAAG;gCACH,GAAG;gCACH,aAAY;gCACZ,WAAU;gCACV,MAAK;;;;;;0CAEP,6LAAC,iMAAQ,CAAC,MAAM;gCACd,IAAG;gCACH,IAAG;gCACH,GAAG;gCACH,aAAY;gCACZ,WAAU;gCACV,MAAK;gCACL,iBAAiB;gCACjB,kBAAkB;gCAClB,eAAc;;;;;;;;;;;;kCAGlB,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,iMAAQ,CAAC,CAAC;4BAAC,WAAU;sCACnB,IAAI,EAAE,CAAC,CAAC,IAAM,AAAC,GAAe,OAAb,EAAE,OAAO,CAAC,IAAG;;;;;;;;;;;;;;;;;;;;;;;AAM3C;GAjDM;;QAIY,oMAAS;QAMI,oMAAS;;;KAVlC;uCAmDS","debugId":null}},
    {"offset": {"line": 3482, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/scenes/FinishScene.tsx"],"sourcesContent":["// src/renderer/components/scenes/FinishScene.tsx\n'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useTransition, animated } from 'react-spring';\nimport useGameStore from '../../store/gameStore';\nimport { calculateAccuracy, getRank } from '../../lib/gameUtils';\n\nimport ScoreSummary from '../game/ScoreSummary';\nimport JudgmentDetails from '../game/JudgmentDetails';\nimport FinishActions from '../game/FinishActions';\nimport RankDisplay from '../game/RankDisplay';\nimport AccuracyDisplay from '../game/AccuracyDisplay';\n\ninterface FinishSceneProps {\n  onBack: () => void;\n}\n\nconst FinishScene: React.FC<FinishSceneProps> = ({ onBack }) => {\n  const { score, maxCombo, judgments, reset, setCurrentScene } = useGameStore();\n\n  const [accuracy, setAccuracy] = useState(0);\n  const [rank, setRank] = useState('');\n\n  useEffect(() => {\n    const acc = calculateAccuracy(judgments);\n    const rnk = getRank(acc);\n    setAccuracy(acc);\n    setRank(rnk);\n  }, [judgments]);\n\n  const handleRestart = () => {\n    reset();\n    setCurrentScene('Game');\n  };\n\n  const handleSelectMusic = () => {\n    reset();\n    setCurrentScene('Select');\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const resultItems: ((style: any) => React.ReactElement)[] = [\n    (style) => <animated.div style={style}><ScoreSummary score={score} maxCombo={maxCombo} /></animated.div>,\n    (style) => <animated.div style={style}><div className=\"w-full h-px bg-theme-text-dark/50\" /></animated.div>,\n    (style) => <animated.div style={style}><div className=\"flex justify-around items-center\"><RankDisplay rank={rank} /><AccuracyDisplay accuracy={accuracy} /></div></animated.div>,\n    (style) => <animated.div style={style}><div className=\"w-full h-px bg-theme-text-dark/50\" /></animated.div>,\n    (style) => <animated.div style={style}><JudgmentDetails judgments={judgments} /></animated.div>,\n    (style) => <animated.div style={style}><div className=\"w-full h-px bg-theme-text-dark/50\" /></animated.div>,\n    (style) => <animated.div style={style}><FinishActions onRestart={handleRestart} onSelectMusic={handleSelectMusic} /></animated.div>,\n  ];\n\n  const transitions = useTransition(resultItems, {\n    from: { opacity: 0, transform: 'translateY(20px)' },\n    enter: { opacity: 1, transform: 'translateY(0px)' },\n    trail: 200, // Staggered animation\n  });\n\n  return (\n    <div className=\"min-h-screen bg-theme-bg flex items-center justify-center p-8\">\n      <div className=\"bg-theme-bg/70 backdrop-blur-xl rounded-3xl p-12 border border-theme-text-dark/50 shadow-2xl max-w-3xl w-full space-y-8\">\n        <button\n          onClick={onBack}\n          className=\"px-6 py-3 bg-theme-secondary text-white rounded-lg hover:bg-theme-secondary/80 transition-colors\"\n        >\n          Back to Menu\n        </button>\n        <h1 className=\"text-6xl font-black text-center bg-clip-text text-transparent bg-gradient-to-b from-theme-accent to-theme-secondary animate-pulse\">\n          GAME CLEAR\n        </h1>\n        {transitions((style, item) => item(style))}\n      </div>\n    </div>\n  );\n};\n\nexport default FinishScene;\n"],"names":[],"mappings":"AAAA,iDAAiD;;;;;;AAGjD;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAXA;;;;;;;;;;AAiBA,MAAM,cAA0C;QAAC,EAAE,MAAM,EAAE;;IACzD,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,eAAe,EAAE,GAAG,IAAA,mJAAY;IAE3E,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,yKAAQ,EAAC;IACzC,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,yKAAQ,EAAC;IAEjC,IAAA,0KAAS;iCAAC;YACR,MAAM,MAAM,IAAA,2JAAiB,EAAC;YAC9B,MAAM,MAAM,IAAA,iJAAO,EAAC;YACpB,YAAY;YACZ,QAAQ;QACV;gCAAG;QAAC;KAAU;IAEd,MAAM,gBAAgB;QACpB;QACA,gBAAgB;IAClB;IAEA,MAAM,oBAAoB;QACxB;QACA,gBAAgB;IAClB;IAEA,8DAA8D;IAC9D,MAAM,cAAsD;QAC1D,CAAC,sBAAU,6LAAC,iMAAQ,CAAC,GAAG;gBAAC,OAAO;0BAAO,cAAA,6LAAC,oKAAY;oBAAC,OAAO;oBAAO,UAAU;;;;;;;;;;;QAC7E,CAAC,sBAAU,6LAAC,iMAAQ,CAAC,GAAG;gBAAC,OAAO;0BAAO,cAAA,6LAAC;oBAAI,WAAU;;;;;;;;;;;QACtD,CAAC,sBAAU,6LAAC,iMAAQ,CAAC,GAAG;gBAAC,OAAO;0BAAO,cAAA,6LAAC;oBAAI,WAAU;;sCAAmC,6LAAC,mKAAW;4BAAC,MAAM;;;;;;sCAAQ,6LAAC,uKAAe;4BAAC,UAAU;;;;;;;;;;;;;;;;;QAC/I,CAAC,sBAAU,6LAAC,iMAAQ,CAAC,GAAG;gBAAC,OAAO;0BAAO,cAAA,6LAAC;oBAAI,WAAU;;;;;;;;;;;QACtD,CAAC,sBAAU,6LAAC,iMAAQ,CAAC,GAAG;gBAAC,OAAO;0BAAO,cAAA,6LAAC,uKAAe;oBAAC,WAAW;;;;;;;;;;;QACnE,CAAC,sBAAU,6LAAC,iMAAQ,CAAC,GAAG;gBAAC,OAAO;0BAAO,cAAA,6LAAC;oBAAI,WAAU;;;;;;;;;;;QACtD,CAAC,sBAAU,6LAAC,iMAAQ,CAAC,GAAG;gBAAC,OAAO;0BAAO,cAAA,6LAAC,qKAAa;oBAAC,WAAW;oBAAe,eAAe;;;;;;;;;;;KAChG;IAED,MAAM,cAAc,IAAA,wMAAa,EAAC,aAAa;QAC7C,MAAM;YAAE,SAAS;YAAG,WAAW;QAAmB;QAClD,OAAO;YAAE,SAAS;YAAG,WAAW;QAAkB;QAClD,OAAO;IACT;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBACC,SAAS;oBACT,WAAU;8BACX;;;;;;8BAGD,6LAAC;oBAAG,WAAU;8BAAoI;;;;;;gBAGjJ,YAAY,CAAC,OAAO,OAAS,KAAK;;;;;;;;;;;;AAI3C;GAxDM;;QAC2D,mJAAY;QAiCvD,wMAAa;;;KAlC7B;uCA0DS","debugId":null}},
    {"offset": {"line": 3717, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/settings/SettingSlider.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\n\ninterface SettingSliderProps {\n  label: string;\n  value: number;\n  min: number;\n  max: number;\n  step: number;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst SettingSlider: React.FC<SettingSliderProps> = ({ label, value, min, max, step, onChange }) => {\n  return (\n    <div className=\"setting-item\">\n      <label htmlFor={label} className=\"text-2xl font-semibold mb-4 flex justify-between items-center\">\n        <span>{label}</span>\n        <span className=\"text-3xl font-bold text-theme-secondary bg-theme-bg/50 px-4 py-1 rounded-lg\">{value}</span>\n      </label>\n      <input\n        type=\"range\"\n        id={label}\n        min={min}\n        max={max}\n        step={step}\n        value={value}\n        onChange={onChange}\n        className=\"w-full h-3 bg-theme-text-light/10 rounded-full appearance-none cursor-pointer range-lg accent-theme-accent focus:outline-none focus:ring-2 focus:ring-theme-secondary focus:ring-opacity-50 transition-all duration-300\"\n      />\n    </div>\n  );\n};\n\nexport default SettingSlider;\n"],"names":[],"mappings":";;;;;AAAA;;AAaA,MAAM,gBAA8C;QAAC,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE;IAC7F,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAM,SAAS;gBAAO,WAAU;;kCAC/B,6LAAC;kCAAM;;;;;;kCACP,6LAAC;wBAAK,WAAU;kCAA+E;;;;;;;;;;;;0BAEjG,6LAAC;gBACC,MAAK;gBACL,IAAI;gBACJ,KAAK;gBACL,KAAK;gBACL,MAAM;gBACN,OAAO;gBACP,UAAU;gBACV,WAAU;;;;;;;;;;;;AAIlB;KAnBM;uCAqBS","debugId":null}},
    {"offset": {"line": 3786, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/settings/DisabledSettingSlider.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\n\ninterface DisabledSettingSliderProps {\n  label: string;\n  value: number | string;\n}\n\nconst DisabledSettingSlider: React.FC<DisabledSettingSliderProps> = ({ label, value }) => {\n  return (\n    <div className=\"opacity-50\">\n      <label className=\"text-2xl font-semibold mb-4 flex justify-between items-center\">\n        <span>{label}</span>\n        <span className=\"text-3xl font-bold text-theme-secondary bg-theme-bg/50 px-4 py-1 rounded-lg\">{value}</span>\n      </label>\n      <input type=\"range\" disabled className=\"w-full h-3 bg-theme-text-light/10 rounded-full appearance-none cursor-not-allowed\" />\n      <p className=\"text-sm text-right mt-2\">Coming Soon</p>\n    </div>\n  );\n};\n\nexport default DisabledSettingSlider;\n"],"names":[],"mappings":";;;;;AAAA;;AASA,MAAM,wBAA8D;QAAC,EAAE,KAAK,EAAE,KAAK,EAAE;IACnF,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAM,WAAU;;kCACf,6LAAC;kCAAM;;;;;;kCACP,6LAAC;wBAAK,WAAU;kCAA+E;;;;;;;;;;;;0BAEjG,6LAAC;gBAAM,MAAK;gBAAQ,QAAQ;gBAAC,WAAU;;;;;;0BACvC,6LAAC;gBAAE,WAAU;0BAA0B;;;;;;;;;;;;AAG7C;KAXM;uCAaS","debugId":null}},
    {"offset": {"line": 3857, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/scenes/SettingsScene.tsx"],"sourcesContent":["// src/renderer/components/scenes/SettingsScene.tsx\n'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport useGameStore from '../../store/gameStore';\nimport { Settings } from '../../../shared/types';\nimport SettingSlider from '../settings/SettingSlider';\nimport DisabledSettingSlider from '../settings/DisabledSettingSlider';\n\n// Define the structure for each setting configuration\ninterface SettingConfig {\n  id: keyof Settings;\n  label: string;\n  min?: number;\n  max?: number;\n  step?: number;\n  enabled: boolean;\n}\n\n// Centralized settings configuration\nconst settingsConfig: SettingConfig[] = [\n  {\n    id: 'noteSpeed',\n    label: 'Note Speed',\n    min: 100,\n    max: 1000,\n    step: 50,\n    enabled: true,\n  },\n  // Add future settings here, e.g.:\n  // { id: 'masterVolume', label: 'Master Volume', min: 0, max: 100, step: 1, enabled: false },\n];\n\ninterface SettingsSceneProps {\n  onBack: () => void;\n}\n\nconst SettingsScene: React.FC<SettingsSceneProps> = ({ onBack }) => {\n  const setCurrentScene = useGameStore((state) => state.setCurrentScene);\n  const [settings, setSettings] = useState<Partial<Settings>>({});\n\n  // Fetch all settings on component mount\n  useEffect(() => {\n    const fetchAllSettings = async () => {\n      const initialSettings: Partial<Settings> = {};\n      for (const config of settingsConfig) {\n        if (config.enabled) {\n          initialSettings[config.id] = await window.electron.getSetting(config.id);\n        }\n      }\n      setSettings(initialSettings);\n    };\n    fetchAllSettings();\n  }, []);\n\n  // Generic handler for all setting changes\n  const handleSettingChange = (id: keyof Settings, value: number) => {\n    const newSettings = { ...settings, [id]: value };\n    setSettings(newSettings);\n    window.electron.setSetting(id, value);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-theme-bg text-theme-text-light flex flex-col items-center justify-center p-8\">\n      <div className=\"absolute top-8 left-8\">\n        <button\n          onClick={onBack}\n          className=\"px-6 py-3 bg-theme-secondary text-white rounded-lg hover:bg-theme-secondary/80 transition-colors\"\n        >\n          Back to Menu\n        </button>\n      </div>\n\n      <div className=\"w-full max-w-2xl bg-theme-bg/70 backdrop-blur-xl rounded-2xl shadow-2xl p-10 border border-theme-text-dark/50\">\n        <h1 className=\"text-5xl font-bold text-center mb-12 bg-clip-text text-transparent bg-gradient-to-r from-theme-secondary to-theme-accent animate-pulse\">\n          Settings\n        </h1>\n\n        <div className=\"space-y-10\">\n          {settingsConfig.map((config) =>\n            config.enabled ? (\n              <SettingSlider\n                key={config.id}\n                label={config.label}\n                value={settings[config.id] ?? config.min ?? 0}\n                min={config.min ?? 0}\n                max={config.max ?? 100}\n                step={config.step ?? 1}\n                onChange={(e) => handleSettingChange(config.id, parseInt(e.target.value, 10))}\n              />\n            ) : (\n              <DisabledSettingSlider key={config.id} label={config.label} value={100} />\n            )\n          )}\n        </div>\n      </div>\n\n      <p className=\"mt-8 text-sm text-theme-text-dark\">More settings will be available in future updates.</p>\n    </div>\n  );\n};\n\nexport default SettingsScene;\n"],"names":[],"mappings":"AAAA,mDAAmD;;;;;;AAGnD;AACA;AAEA;AACA;;;AANA;;;;;AAkBA,qCAAqC;AACrC,MAAM,iBAAkC;IACtC;QACE,IAAI;QACJ,OAAO;QACP,KAAK;QACL,KAAK;QACL,MAAM;QACN,SAAS;IACX;CAGD;AAMD,MAAM,gBAA8C;QAAC,EAAE,MAAM,EAAE;;IAC7D,MAAM,kBAAkB,IAAA,mJAAY;uDAAC,CAAC,QAAU,MAAM,eAAe;;IACrE,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,yKAAQ,EAAoB,CAAC;IAE7D,wCAAwC;IACxC,IAAA,0KAAS;mCAAC;YACR,MAAM;4DAAmB;oBACvB,MAAM,kBAAqC,CAAC;oBAC5C,KAAK,MAAM,UAAU,eAAgB;wBACnC,IAAI,OAAO,OAAO,EAAE;4BAClB,eAAe,CAAC,OAAO,EAAE,CAAC,GAAG,MAAM,OAAO,QAAQ,CAAC,UAAU,CAAC,OAAO,EAAE;wBACzE;oBACF;oBACA,YAAY;gBACd;;YACA;QACF;kCAAG,EAAE;IAEL,0CAA0C;IAC1C,MAAM,sBAAsB,CAAC,IAAoB;QAC/C,MAAM,cAAc;YAAE,GAAG,QAAQ;YAAE,CAAC,GAAG,EAAE;QAAM;QAC/C,YAAY;QACZ,OAAO,QAAQ,CAAC,UAAU,CAAC,IAAI;IACjC;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBACC,SAAS;oBACT,WAAU;8BACX;;;;;;;;;;;0BAKH,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAyI;;;;;;kCAIvJ,6LAAC;wBAAI,WAAU;kCACZ,eAAe,GAAG,CAAC,CAAC;gCAKR,qBAAA,MACF,aACA,aACC;mCAPV,OAAO,OAAO,iBACZ,6LAAC,yKAAa;gCAEZ,OAAO,OAAO,KAAK;gCACnB,OAAO,CAAA,OAAA,CAAA,sBAAA,QAAQ,CAAC,OAAO,EAAE,CAAC,cAAnB,iCAAA,sBAAuB,OAAO,GAAG,cAAjC,kBAAA,OAAqC;gCAC5C,KAAK,CAAA,cAAA,OAAO,GAAG,cAAV,yBAAA,cAAc;gCACnB,KAAK,CAAA,cAAA,OAAO,GAAG,cAAV,yBAAA,cAAc;gCACnB,MAAM,CAAA,eAAA,OAAO,IAAI,cAAX,0BAAA,eAAe;gCACrB,UAAU,CAAC,IAAM,oBAAoB,OAAO,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,KAAK,EAAE;+BANpE,OAAO,EAAE;;;;yFAShB,6LAAC,iLAAqB;gCAAiB,OAAO,OAAO,KAAK;gCAAE,OAAO;+BAAvC,OAAO,EAAE;;;;;;;;;;;;;;;;;0BAM7C,6LAAC;gBAAE,WAAU;0BAAoC;;;;;;;;;;;;AAGvD;GA/DM;;QACoB,mJAAY;;;KADhC;uCAiES","debugId":null}},
    {"offset": {"line": 4014, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/scenes/OszImportScene.tsx"],"sourcesContent":["// src/renderer/components/scenes/OszImportScene.tsx\n'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { PinChart } from '../../../shared/types';\n// OszChart 타입 정의 (main 프로세스 타입을 직접 참조할 수 없으므로 복사)\ninterface OszChart {\n  id: string;\n  title: string;\n  artist: string;\n  creator: string;\n  audioFilename: string;\n  backgroundFilename?: string;\n  difficulties: OszDifficulty[];\n  folderPath: string;\n}\n\ninterface OszDifficulty {\n  name: string;\n  version: string;\n  overallDifficulty: number;\n  approachRate: number;\n  circleSize: number;\n  hpDrainRate: number;\n  filePath: string;\n  noteCount: number;\n}\n\ninterface OszImportSceneProps {\n  onBack: () => void;\n  onChartSelected: (chart: PinChart) => void;\n}\n\nconst OszImportScene: React.FC<OszImportSceneProps> = ({ onBack, onChartSelected }) => {\n  const [library, setLibrary] = useState<OszChart[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [importStatus, setImportStatus] = useState<string>('');\n\n  // 라이브러리 로드\n  useEffect(() => {\n    loadLibrary();\n  }, []);\n\n  const loadLibrary = async () => {\n    try {\n      const charts = await (window as any).electron.getChartLibrary();\n      setLibrary(charts as OszChart[]);\n    } catch (error) {\n      console.error('Failed to load chart library:', error);\n    }\n  };\n\n  // .osz 파일 임포트\n  const handleImportOsz = async () => {\n    try {\n      setIsLoading(true);\n      setImportStatus('파일 선택 중...');\n\n      // 파일 선택 다이얼로그 (Electron의 dialog API 사용)\n      const filePath = await (window as any).electron.selectOszFile();\n\n      if (!filePath) {\n        setImportStatus('');\n        setIsLoading(false);\n        return;\n      }\n\n      setImportStatus('차트 임포트 중...');\n\n      // .osz 파일 임포트\n      await (window as any).electron.importOszFile(filePath);\n      \n      setImportStatus('임포트 완료!');\n      setTimeout(() => setImportStatus(''), 2000);\n\n      // 라이브러리 새로고침\n      await loadLibrary();\n    } catch (error) {\n      console.error('Failed to import .osz file:', error);\n      setImportStatus('임포트 실패: ' + (error as Error).message);\n      setTimeout(() => setImportStatus(''), 3000);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 난이도 선택 및 게임 시작\n  const handleDifficultySelect = async (chart: OszChart, difficultyIndex: number) => {\n    try {\n      setIsLoading(true);\n      setImportStatus('차트 변환 중...');\n\n      const pinChart = await (window as any).electron.convertDifficultyToPinChart(\n        chart,\n        difficultyIndex\n      ) as PinChart;\n\n      onChartSelected(pinChart);\n    } catch (error) {\n      console.error('Failed to convert difficulty:', error);\n      setImportStatus('변환 실패: ' + (error as Error).message);\n      setTimeout(() => setImportStatus(''), 3000);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 차트 삭제\n  const handleRemoveChart = async (chartId: string) => {\n    if (!confirm('이 차트를 삭제하시겠습니까?')) return;\n\n    try {\n      await (window as any).electron.invoke('remove-chart-from-library', chartId);\n      await loadLibrary();\n    } catch (error) {\n      console.error('Failed to remove chart:', error);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-theme-bg-primary text-white p-8\">\n      {/* 헤더 */}\n      <div className=\"flex items-center justify-between mb-8\">\n        <div>\n          <h1 className=\"text-4xl font-bold text-theme-primary mb-2\">\n            .osz 차트 라이브러리\n          </h1>\n          <p className=\"text-theme-text-secondary\">\n            osu! 비트맵(.osz) 파일을 임포트하여 플레이하세요\n          </p>\n        </div>\n        <button\n          onClick={onBack}\n          className=\"px-6 py-3 bg-theme-secondary text-white rounded-lg hover:bg-theme-secondary/80 transition-colors\"\n        >\n          뒤로가기\n        </button>\n      </div>\n\n      {/* 임포트 버튼 및 상태 */}\n      <div className=\"mb-8\">\n        <button\n          onClick={handleImportOsz}\n          disabled={isLoading}\n          className=\"px-8 py-4 bg-theme-primary text-white rounded-lg hover:bg-theme-primary/80 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          {isLoading ? '처리 중...' : '.osz 파일 임포트'}\n        </button>\n        {importStatus && (\n          <p className=\"mt-2 text-theme-accent\">{importStatus}</p>\n        )}\n      </div>\n\n      {/* 차트 라이브러리 */}\n      <div className=\"grid gap-6\">\n        {library.length === 0 ? (\n          <div className=\"text-center py-12\">\n            <p className=\"text-theme-text-secondary text-lg\">\n              임포트된 차트가 없습니다.\n            </p>\n            <p className=\"text-theme-text-secondary mt-2\">\n              .osz 파일을 임포트하여 시작하세요.\n            </p>\n          </div>\n        ) : (\n          library.map((chart) => (\n            <div\n              key={chart.id}\n              className=\"bg-theme-bg-secondary rounded-lg p-6 border border-theme-border\"\n            >\n              {/* 차트 정보 */}\n              <div className=\"flex items-start justify-between mb-4\">\n                <div>\n                  <h3 className=\"text-xl font-bold text-theme-primary\">\n                    {chart.title}\n                  </h3>\n                  <p className=\"text-theme-text-secondary\">\n                    by {chart.artist} • mapped by {chart.creator}\n                  </p>\n                </div>\n                <button\n                  onClick={() => handleRemoveChart(chart.id)}\n                  className=\"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 transition-colors text-sm\"\n                >\n                  삭제\n                </button>\n              </div>\n\n              {/* 난이도 목록 */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3\">\n                {chart.difficulties.map((difficulty, index) => (\n                  <button\n                    key={index}\n                    onClick={() => handleDifficultySelect(chart, index)}\n                    disabled={isLoading}\n                    className=\"p-4 bg-theme-bg-primary rounded-lg border border-theme-border hover:border-theme-primary transition-colors disabled:opacity-50 disabled:cursor-not-allowed text-left\"\n                  >\n                    <div className=\"font-semibold text-theme-primary\">\n                      {difficulty.name}\n                    </div>\n                    <div className=\"text-sm text-theme-text-secondary mt-1\">\n                      OD: {difficulty.overallDifficulty.toFixed(1)} • \n                      AR: {difficulty.approachRate.toFixed(1)}\n                    </div>\n                    <div className=\"text-sm text-theme-text-secondary\">\n                      {difficulty.noteCount} 노트\n                    </div>\n                  </button>\n                ))}\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default OszImportScene;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4325, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/app/page.tsx"],"sourcesContent":["// src/renderer/app/page.tsx\n'use client';\n\nimport React, { useState } from 'react';\nimport useGameStore from '../store/gameStore';\nimport StartScene from '../components/scenes/StartScene';\nimport SelectScene from '../components/scenes/SelectScene';\nimport GameScene from '../components/scenes/GameScene';\nimport FinishScene from '../components/scenes/FinishScene';\nimport SettingsScene from '../components/scenes/SettingsScene';\nimport OszImportScene from '../components/scenes/OszImportScene';\nimport { GameScene as GameSceneType, PinChart } from '../../shared/types';\n\nconst SceneManager: React.FC = () => {\n    const [currentScene, setCurrentScene] = useState<GameSceneType>('Start');\n    const [selectedChart, setSelectedChart] = useState<PinChart | null>(null);\n\n    const handleSceneChange = (scene: GameSceneType) => {\n        setCurrentScene(scene);\n    };\n\n    const handleChartSelected = (chart: PinChart) => {\n        setSelectedChart(chart);\n        setCurrentScene('Game');\n    };\n\n    const renderScene = () => {\n        switch (currentScene) {\n            case 'Start':\n                return <StartScene onNavigate={handleSceneChange} />;\n            case 'Select':\n                return <SelectScene onBack={() => handleSceneChange('Start')} onStartGame={handleChartSelected} />;\n            case 'Game':\n                return selectedChart ? <GameScene selectedChart={selectedChart} onBack={() => handleSceneChange('Select')} /> : <StartScene onNavigate={handleSceneChange} />;\n            case 'Finish':\n                return <FinishScene onBack={() => handleSceneChange('Start')} />;\n            case 'Settings':\n                return <SettingsScene onBack={() => handleSceneChange('Start')} />;\n            case 'OszImport':\n                return <OszImportScene onBack={() => handleSceneChange('Start')} onChartSelected={handleChartSelected} />;\n            default:\n                return <StartScene onNavigate={handleSceneChange} />;\n        }\n    };\n\n    return <div>{renderScene()}</div>;\n};\n\nexport default function HomePage() {\n    return <SceneManager />;\n}"],"names":[],"mappings":"AAAA,4BAA4B;;;;;;AAG5B;AAEA;AACA;AACA;AACA;AACA;AACA;;;AATA;;;;;;;;AAYA,MAAM,eAAyB;;IAC3B,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,yKAAQ,EAAgB;IAChE,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,yKAAQ,EAAkB;IAEpE,MAAM,oBAAoB,CAAC;QACvB,gBAAgB;IACpB;IAEA,MAAM,sBAAsB,CAAC;QACzB,iBAAiB;QACjB,gBAAgB;IACpB;IAEA,MAAM,cAAc;QAChB,OAAQ;YACJ,KAAK;gBACD,qBAAO,6LAAC,oKAAU;oBAAC,YAAY;;;;;;YACnC,KAAK;gBACD,qBAAO,6LAAC,qKAAW;oBAAC,QAAQ,IAAM,kBAAkB;oBAAU,aAAa;;;;;;YAC/E,KAAK;gBACD,OAAO,8BAAgB,6LAAC,mKAAS;oBAAC,eAAe;oBAAe,QAAQ,IAAM,kBAAkB;;;;;6EAAgB,6LAAC,oKAAU;oBAAC,YAAY;;;;;;YAC5I,KAAK;gBACD,qBAAO,6LAAC,qKAAW;oBAAC,QAAQ,IAAM,kBAAkB;;;;;;YACxD,KAAK;gBACD,qBAAO,6LAAC,uKAAa;oBAAC,QAAQ,IAAM,kBAAkB;;;;;;YAC1D,KAAK;gBACD,qBAAO,6LAAC,wKAAc;oBAAC,QAAQ,IAAM,kBAAkB;oBAAU,iBAAiB;;;;;;YACtF;gBACI,qBAAO,6LAAC,oKAAU;oBAAC,YAAY;;;;;;QACvC;IACJ;IAEA,qBAAO,6LAAC;kBAAK;;;;;;AACjB;GAjCM;KAAA;AAmCS,SAAS;IACpB,qBAAO,6LAAC;;;;;AACZ;MAFwB","debugId":null}}]
}