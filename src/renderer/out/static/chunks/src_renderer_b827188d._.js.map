{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n    \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\",\n    {\n        variants: {\n            variant: {\n                default:\n                    \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n                destructive:\n                    \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n                outline:\n                    \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n                secondary:\n                    \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n                ghost: \"hover:bg-accent hover:text-accent-foreground\",\n                link: \"text-primary underline-offset-4 hover:underline\",\n                // Game-specific variants\n                game: \"bg-gradient-to-r from-primary to-primary/80 text-primary-foreground shadow-game hover:shadow-game/80 transform hover:scale-105 transition-all duration-200\",\n                perfect: \"bg-game-perfect text-white shadow-lg hover:bg-game-perfect/90 animate-pulse-game\",\n                great: \"bg-game-great text-white shadow-lg hover:bg-game-great/90\",\n                good: \"bg-game-good text-white shadow-lg hover:bg-game-good/90\",\n                miss: \"bg-game-miss text-white shadow-lg hover:bg-game-miss/90\",\n            },\n            size: {\n                default: \"h-9 px-4 py-2\",\n                sm: \"h-8 rounded-md px-3 text-xs\",\n                lg: \"h-10 rounded-md px-8\",\n                xl: \"h-12 rounded-lg px-10 text-base\",\n                icon: \"h-9 w-9\",\n                // Game-specific sizes\n                game: \"h-12 px-6 py-3 text-base font-semibold\",\n            },\n        },\n        defaultVariants: {\n            variant: \"default\",\n            size: \"default\",\n        },\n    }\n)\n\nexport interface ButtonProps\n    extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n    asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n    ({ className, variant, size, asChild = false, ...props }, ref) => {\n        const Comp = asChild ? Slot : \"button\"\n        return (\n            <Comp\n                className={cn(buttonVariants({ variant, size, className }))}\n                ref={ref}\n                {...props}\n            />\n        )\n    }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,IAAA,0KAAG,EACtB,uOACA;IACI,UAAU;QACN,SAAS;YACL,SACI;YACJ,aACI;YACJ,SACI;YACJ,WACI;YACJ,OAAO;YACP,MAAM;YACN,yBAAyB;YACzB,MAAM;YACN,SAAS;YACT,OAAO;YACP,MAAM;YACN,MAAM;QACV;QACA,MAAM;YACF,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,MAAM;YACN,sBAAsB;YACtB,MAAM;QACV;IACJ;IACA,iBAAiB;QACb,SAAS;QACT,MAAM;IACV;AACJ;AASJ,MAAM,uBAAS,2KAAgB,MAC3B,QAA0D;QAAzD,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO;IACpD,MAAM,OAAO,UAAU,2KAAI,GAAG;IAC9B,qBACI,6LAAC;QACG,WAAW,IAAA,wIAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGrB;;AAEJ,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n    extends React.InputHTMLAttributes<HTMLInputElement> { }\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n    ({ className, type, ...props }, ref) => {\n        return (\n            <input\n                type={type}\n                className={cn(\n                    \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n                    className\n                )}\n                ref={ref}\n                {...props}\n            />\n        )\n    }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAKA,MAAM,sBAAQ,2KAAgB,MAC1B,QAAgC;QAA/B,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO;IAC1B,qBACI,6LAAC;QACG,MAAM;QACN,WAAW,IAAA,wIAAE,EACT,yUACA;QAEJ,KAAK;QACJ,GAAG,KAAK;;;;;;AAGrB;;AAEJ,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n    HTMLDivElement,\n    React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n    <div\n        ref={ref}\n        className={cn(\n            \"rounded-xl border bg-card text-card-foreground shadow\",\n            className\n        )}\n        {...props}\n    />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n    HTMLDivElement,\n    React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n    <div ref={ref} className={cn(\"flex flex-col space-y-1.5 p-6\", className)} {...props} />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n    HTMLParagraphElement,\n    React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n    <h3\n        ref={ref}\n        className={cn(\"font-semibold leading-none tracking-tight\", className)}\n        {...props}\n    />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n    HTMLParagraphElement,\n    React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n    <p ref={ref} className={cn(\"text-sm text-muted-foreground\", className)} {...props} />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n    HTMLDivElement,\n    React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n    <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n    HTMLDivElement,\n    React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n    <div ref={ref} className={cn(\"flex items-center p-6 pt-0\", className)} {...props} />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,2KAAgB,MAG3B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACtB,6LAAC;QACG,KAAK;QACL,WAAW,IAAA,wIAAE,EACT,yDACA;QAEH,GAAG,KAAK;;;;;;;;AAGjB,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,2KAAgB,OAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACtB,6LAAC;QAAI,KAAK;QAAK,WAAW,IAAA,wIAAE,EAAC,iCAAiC;QAAa,GAAG,KAAK;;;;;;;;AAEvF,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,2KAAgB,OAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACtB,6LAAC;QACG,KAAK;QACL,WAAW,IAAA,wIAAE,EAAC,6CAA6C;QAC1D,GAAG,KAAK;;;;;;;;AAGjB,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,2KAAgB,OAGtC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACtB,6LAAC;QAAE,KAAK;QAAK,WAAW,IAAA,wIAAE,EAAC,iCAAiC;QAAa,GAAG,KAAK;;;;;;;;AAErF,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACtB,6LAAC;QAAI,KAAK;QAAK,WAAW,IAAA,wIAAE,EAAC,YAAY;QAAa,GAAG,KAAK;;;;;;;;AAElE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,2KAAgB,QAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACtB,6LAAC;QAAI,KAAK;QAAK,WAAW,IAAA,wIAAE,EAAC,8BAA8B;QAAa,GAAG,KAAK;;;;;;;;AAEpF,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 242, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/hooks/useSongs.ts"],"sourcesContent":["/**\n * useSongs Hook - Manages song library and OSZ files with dummy data fallback\n */\n\n'use client';\n\nimport { useState, useEffect, useCallback } from 'react';\nimport type { SongData } from '../../shared/d.ts/ipc';\nimport { getMixedSongs, isDummySong } from '../lib/dummy-data';\n\ninterface UseSongsReturn {\n    songs: SongData[];\n    loading: boolean;\n    error: string | null;\n    refreshLibrary: () => Promise<void>;\n    importOsz: (filePath: string) => Promise<boolean>;\n    getSong: (id: string) => SongData | undefined;\n    importFromFile: (file: File) => Promise<boolean>;\n    hasDummyData: boolean;\n}\n\nexport function useSongs(): UseSongsReturn {\n    const [songs, setSongs] = useState<SongData[]>([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n    const [hasDummyData, setHasDummyData] = useState(false);\n\n    const refreshLibrary = useCallback(async () => {\n        console.log('üîÑ refreshLibrary called');\n        try {\n            setLoading(true);\n            setError(null);\n\n            console.log('üîç Checking window.electronAPI:', {\n                hasWindow: typeof window !== 'undefined',\n                hasElectronAPI: !!(window as any).electronAPI,\n                hasCharts: !!((window as any).electronAPI?.charts),\n                hasOsz: !!((window as any).electronAPI?.osz),\n                apis: (window as any).electronAPI ? Object.keys((window as any).electronAPI) : 'undefined'\n            });\n\n            let realSongs: SongData[] = [];\n\n            if (typeof window !== 'undefined' && (window as any).electronAPI) {\n                const electronAPI = (window as any).electronAPI;\n                let charts = null;\n\n                // Try charts API first (new way)\n                if (electronAPI.charts?.getLibrary) {\n                    console.log('üìû Calling electronAPI.charts.getLibrary()');\n                    try {\n                        const response = await electronAPI.charts.getLibrary();\n                        console.log('üì® Charts API Response:', response);\n\n                        if (response && response.success && Array.isArray(response.charts)) {\n                            charts = response.charts;\n                        } else if (Array.isArray(response)) {\n                            charts = response;\n                        }\n                    } catch (chartError) {\n                        console.warn('‚ö†Ô∏è Charts API failed:', chartError);\n                    }\n                }\n\n                // Try OSZ API as fallback (old way)\n                if (!charts && electronAPI.osz?.getLibrary) {\n                    console.log('üìû Fallback to electronAPI.osz.getLibrary()');\n                    try {\n                        const response = await electronAPI.osz.getLibrary();\n                        console.log('üì® OSZ API Response:', response);\n\n                        if (response && response.success && Array.isArray(response.charts)) {\n                            charts = response.charts;\n                        } else if (Array.isArray(response)) {\n                            charts = response;\n                        }\n                    } catch (oszError) {\n                        console.warn('‚ö†Ô∏è OSZ API failed:', oszError);\n                    }\n                }\n\n                if (charts && Array.isArray(charts)) {\n                    console.log(`‚úÖ Found ${charts.length} real charts`);\n                    // Convert chart data to SongData format with real difficulty data\n                    realSongs = charts.map((chart: any) => {\n                        // Extract real difficulty data from OSZ chart\n                        let difficultyData = {\n                            easy: 1,\n                            normal: 3,\n                            hard: 5,\n                            expert: 7\n                        };\n\n                        // If chart has difficulties array (from library.json)\n                        if (chart.difficulties && Array.isArray(chart.difficulties)) {\n                            const diffs = chart.difficulties;\n                            // Map OSZ difficulties to our format\n                            if (diffs.length > 0) {\n                                const avgDiff = diffs.reduce((sum: number, d: any) =>\n                                    sum + (d.overallDifficulty || 5), 0) / diffs.length;\n\n                                // Convert to our scale (1-10)\n                                const scaledDiff = Math.round(avgDiff);\n                                difficultyData = {\n                                    easy: Math.max(1, scaledDiff - 2),\n                                    normal: scaledDiff,\n                                    hard: Math.min(10, scaledDiff + 2),\n                                    expert: Math.min(10, scaledDiff + 4)\n                                };\n                            }\n                        }\n\n                        return {\n                            id: chart.id,\n                            title: chart.title,\n                            artist: chart.artist,\n                            audioFile: chart.audioFilename || chart.audioPath || chart.audioFile || '',\n                            backgroundImage: chart.backgroundFilename || chart.backgroundImage || '',\n                            difficulty: difficultyData,\n                            bpm: chart.bpm || 120,\n                            duration: chart.duration || 180000,\n                            filePath: chart.filePath || '',\n                            notes: chart.notes || []\n                        };\n                    });\n                }\n            }\n\n            // Use only real songs (no dummy data fallback)\n            setSongs(realSongs);\n            setHasDummyData(false);\n\n            if (realSongs.length > 0) {\n                console.log(`‚úÖ Using ${realSongs.length} real songs with actual OSZ data`);\n                console.log('üìä Sample song:', realSongs[0]);\n            } else {\n                console.warn('‚ö†Ô∏è No real songs found');\n                setError('Í≥° ÎùºÏù¥Î∏åÎü¨Î¶¨Í∞Ä ÎπÑÏñ¥ÏûàÏäµÎãàÎã§. OSZ ÌååÏùºÏùÑ ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî.');\n            }\n        } catch (err) {\n            console.error('üí• Failed to load song library:', err);\n            setError('Í≥° ÎùºÏù¥Î∏åÎü¨Î¶¨Î•º Î∂àÎü¨Ïò§Îäî Îç∞ Ïã§Ìå®ÌñàÏäµÎãàÎã§');\n            setSongs([]);\n        } finally {\n            setLoading(false);\n        }\n    }, []); const importOsz = useCallback(async (filePath: string): Promise<boolean> => {\n        try {\n            setError(null);\n\n            if (typeof window !== 'undefined' && (window as any).electronAPI?.osz) {\n                const result = await (window as any).electronAPI.osz.importFromPath(filePath);\n\n                if (result.success) {\n                    // Refresh library after successful import\n                    await refreshLibrary();\n                    return true;\n                } else {\n                    setError(result.error || 'OSZ ÌååÏùº Í∞ÄÏ†∏Ïò§Í∏∞Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§');\n                    return false;\n                }\n            } else {\n                setError('Electron IPCÎ•º ÏÇ¨Ïö©Ìï† Ïàò ÏóÜÏäµÎãàÎã§');\n                return false;\n            }\n        } catch (err) {\n            console.error('Failed to import OSZ:', err);\n            setError('OSZ ÌååÏùº Í∞ÄÏ†∏Ïò§Í∏∞ Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§');\n            return false;\n        }\n    }, [refreshLibrary]);\n\n    const importFromFile = useCallback(async (file: File): Promise<boolean> => {\n        try {\n            setError(null);\n\n            if (typeof window !== 'undefined' && (window as any).electronAPI?.osz) {\n                // Convert File to buffer for IPC\n                const arrayBuffer = await file.arrayBuffer();\n                const buffer = new Uint8Array(arrayBuffer);\n\n                const result = await (window as any).electronAPI.osz.importFromBuffer({\n                    name: file.name,\n                    buffer: buffer\n                });\n\n                if (result.success) {\n                    // Refresh library after successful import\n                    await refreshLibrary();\n                    return true;\n                } else {\n                    setError(result.error || 'OSZ ÌååÏùº Í∞ÄÏ†∏Ïò§Í∏∞Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§');\n                    return false;\n                }\n            } else {\n                setError('Electron IPCÎ•º ÏÇ¨Ïö©Ìï† Ïàò ÏóÜÏäµÎãàÎã§');\n                return false;\n            }\n        } catch (err) {\n            console.error('Failed to import file:', err);\n            setError('ÌååÏùº Í∞ÄÏ†∏Ïò§Í∏∞ Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§');\n            return false;\n        }\n    }, [refreshLibrary]);\n\n    const getSong = useCallback((id: string): SongData | undefined => {\n        return songs.find(song => song.id === id);\n    }, [songs]);\n\n    // Load songs on mount\n    useEffect(() => {\n        refreshLibrary();\n    }, [refreshLibrary]);\n\n    return {\n        songs,\n        loading,\n        error,\n        refreshLibrary,\n        importOsz,\n        getSong,\n        importFromFile,\n        hasDummyData\n    };\n}\n\nexport default useSongs;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 473, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/lib/ipc-service.ts"],"sourcesContent":["/**\n * IPC Service - Frontend service for communicating with Electron main process\n * Provides type-safe APIs for renderer to interact with backend\n */\n\ninterface ChartData {\n    id: string\n    title: string\n    artist: string\n    difficulty: string\n    audioPath: string\n    backgroundPath?: string\n    duration: number\n    bpm: number\n}\n\ninterface GameSession {\n    sessionId: string\n    chartId: string\n    startTime: number\n    score: number\n    accuracy: number\n    combo: number\n}\n\ninterface Settings {\n    audio: {\n        masterVolume: number\n        musicVolume: number\n        effectVolume: number\n        enableFeedback: boolean\n    }\n    game: {\n        scrollSpeed: number\n        noteSize: number\n        enableParticles: boolean\n        showFps: boolean\n    }\n    display: {\n        fullscreen: boolean\n        vsync: boolean\n        targetFps: number\n    }\n    controls: {\n        keyBindings: {\n            lane1: string\n            lane2: string\n            lane3: string\n            lane4: string\n        }\n    }\n}\n\nclass IPCService {\n    private static instance: IPCService\n\n    public static getInstance(): IPCService {\n        if (!IPCService.instance) {\n            IPCService.instance = new IPCService()\n        }\n        return IPCService.instance\n    }\n\n    private get api() {\n        if (!(window as any).electronAPI) {\n            throw new Error('Electron API not available. Make sure this is running in Electron.')\n        }\n        return (window as any).electronAPI\n    }\n\n    // Game methods - Updated for new runtime .osu loading API\n    async getDifficulties(chartId: string): Promise<{\n        success: boolean;\n        difficulties?: Array<{\n            name: string;\n            filename: string;\n            starRating: number;\n            difficultyName: string;\n        }>;\n        error?: string;\n    }> {\n        return await this.api.game.getDifficulties(chartId);\n    }\n\n    async startGame(params: { chartId: string; difficulty?: string; gameMode: string; mods?: string[] }): Promise<GameSession> {\n        const result = await this.api.game.start(params); // ‚úÖ Updated: Use new API params\n        if (!result.success) {\n            throw new Error(result.error || 'Failed to start game');\n        }\n        // Mock GameSession for now - this should come from the backend\n        return {\n            sessionId: 'mock-session-' + Date.now(),\n            chartId: params.chartId,\n            startTime: Date.now(),\n            score: 0,\n            accuracy: 1.0,\n            combo: 0\n        };\n    }\n\n    async stopGame(): Promise<void> {\n        const result = await this.api.game.stop()\n        if (!result.success) {\n            throw new Error(result.error || 'Failed to stop game')\n        }\n    }\n\n    async pauseGame(): Promise<void> {\n        const result = await this.api.game.pause()\n        if (!result.success) {\n            throw new Error(result.error || 'Failed to pause game')\n        }\n    }\n\n    async resumeGame(): Promise<void> {\n        const result = await this.api.game.resume()\n        if (!result.success) {\n            throw new Error(result.error || 'Failed to resume game')\n        }\n    }\n\n    throwKnife(data: { id: string; time: number; lane: number }): void {\n        this.api.game.throwKnife({ id: data.id, time: data.time })\n    }\n\n    onKnifeResult(callback: (result: any) => void): () => void {\n        return this.api.game.onKnifeResult(callback)\n    }\n\n    // Chart methods (using osz API)\n    async getChartLibrary(): Promise<ChartData[]> {\n        const result = await this.api.osz.getLibrary()\n        if (!result.success) {\n            throw new Error(result.error || 'Failed to load chart library')\n        }\n        return result.charts || []\n    }\n\n    async getChart(chartId: string): Promise<ChartData> {\n        // For now, get from library and find by ID\n        const library = await this.getChartLibrary()\n        const chart = library.find(c => c.id === chartId)\n        if (!chart) {\n            throw new Error(`Chart ${chartId} not found`)\n        }\n        return chart\n    }\n\n    async importChart(filePath?: string): Promise<{ success: boolean; error?: string }> {\n        const result = await this.api.osz.import(filePath)\n        return {\n            success: result.success,\n            error: result.error\n        }\n    }\n\n    async removeChart(chartId: string): Promise<void> {\n        const result = await this.api.osz.removeChart(chartId)\n        if (!result.success) {\n            throw new Error(result.error || 'Failed to remove chart')\n        }\n    }\n\n    async getChartAudio(chartId: string): Promise<string> {\n        const result = await this.api.osz.getAudio(chartId)\n        if (!result.success) {\n            throw new Error(result.error || 'Failed to get audio')\n        }\n        // Convert ArrayBuffer to URL if needed\n        return 'mock-audio-url'\n    }\n\n    async getChartBackground(chartId: string): Promise<string> {\n        // Mock implementation for now\n        return 'mock-background-url'\n    }\n\n    // Settings methods\n    async getSettings(): Promise<Settings> {\n        const result = await this.api.settings.getAll()\n        if (!result.success) {\n            throw new Error(result.error || 'Failed to load settings')\n        }\n\n        // Return default settings if none exist\n        return result.settings || {\n            audio: {\n                masterVolume: 1.0,\n                musicVolume: 0.8,\n                effectVolume: 0.6,\n                enableFeedback: true\n            },\n            game: {\n                scrollSpeed: 1.0,\n                noteSize: 1.0,\n                enableParticles: true,\n                showFps: false\n            },\n            display: {\n                fullscreen: false,\n                vsync: true,\n                targetFps: 60\n            },\n            controls: {\n                keyBindings: {\n                    lane1: 'D',\n                    lane2: 'F',\n                    lane3: 'J',\n                    lane4: 'K'\n                }\n            }\n        }\n    }\n\n    async setSetting(key: string, value: any): Promise<void> {\n        const result = await this.api.settings.set(key, value)\n        if (!result.success) {\n            throw new Error(result.error || 'Failed to update setting')\n        }\n    }\n\n    async resetSettings(): Promise<void> {\n        const result = await this.api.settings.reset()\n        if (!result.success) {\n            throw new Error(result.error || 'Failed to reset settings')\n        }\n    }\n\n    onSettingsChange(callback: (settings: Settings) => void): () => void {\n        return this.api.settings.onChange((change: any) => {\n            // For now, just trigger a reload - in production this would be more sophisticated\n            this.getSettings().then(callback).catch(console.error)\n        })\n    }\n\n    // System methods\n    async getVersion(): Promise<string> {\n        return this.api.system.version || '0.1.0'\n    }\n\n    async openExternal(url: string): Promise<void> {\n        // Mock implementation - would need to add to backend\n        window.open(url, '_blank')\n    }\n\n    async showMessageBox(options: any): Promise<any> {\n        // Mock implementation - would use alert for now\n        return { response: 0 }\n    }\n}\n\nexport const ipcService = IPCService.getInstance()\nexport type { ChartData, GameSession, Settings }\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 660, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/hooks/useGameState.ts"],"sourcesContent":["/**\n * useGameState Hook - Manages game state and controls\n * ‚úÖ UNIFIED: Uses consistent ipc-service pattern throughout\n */\n\n'use client';\n\nimport { useState, useCallback, useRef } from 'react';\nimport type { SongData, ScoreData } from '../../shared/d.ts/ipc';\nimport { ipcService } from '../lib/ipc-service';\n\ntype GameMode = 'osu' | 'pin';\ntype GameState = 'idle' | 'loading' | 'playing' | 'paused' | 'finished';\n\ninterface GameStats {\n    score: number;\n    combo: number;\n    accuracy: number;\n    hits: {\n        perfect: number;\n        great: number;\n        good: number;\n        miss: number;\n    };\n}\n\ninterface UseGameStateReturn {\n    // State\n    currentSong: SongData | null;\n    gameMode: GameMode;\n    gameState: GameState;\n    stats: GameStats;\n    isPlaying: boolean;\n\n    // Controls\n    startGame: (song: SongData, mode: GameMode) => Promise<boolean>;\n    stopGame: () => Promise<void>;\n    pauseGame: () => Promise<void>;\n    resumeGame: () => Promise<void>;\n\n    // Score management\n    updateStats: (newStats: Partial<GameStats>) => void;\n    submitScore: () => Promise<boolean>;\n    resetStats: () => void;\n}\n\nexport function useGameState(): UseGameStateReturn {\n    const [currentSong, setCurrentSong] = useState<SongData | null>(null);\n    const [gameMode, setGameMode] = useState<GameMode>('osu');\n    const [gameState, setGameState] = useState<GameState>('idle');\n    const [stats, setStats] = useState<GameStats>({\n        score: 0,\n        combo: 0,\n        accuracy: 100,\n        hits: {\n            perfect: 0,\n            great: 0,\n            good: 0,\n            miss: 0\n        }\n    });\n\n    const gameStartTime = useRef<number>(0);\n    const isPlaying = gameState === 'playing';\n\n    const startGame = useCallback(async (song: SongData, mode: GameMode = 'pin'): Promise<boolean> => {\n        try {\n            setGameState('loading');\n\n            // ‚úÖ CRITICAL FIX: Always stop any existing game first\n            try {\n                await ipcService.stopGame();\n                console.log('üõë Stopped existing game session');\n            } catch (stopError) {\n                console.log('‚ÑπÔ∏è No existing game to stop:', stopError);\n            }\n\n            // ‚úÖ NEW API: Use chartId and difficulty instead of full chartData\n            console.log('üéÆ Starting pin game with song:', song.title, '(ID:', song.id, ')');\n\n            const gameStartParams = {\n                chartId: song.id,\n                difficulty: 'Normal', // Default difficulty - could be made configurable\n                gameMode: 'osu' as const,\n                mods: [] as string[]\n            };\n\n            console.log('üéÆ Starting game with new API params:', gameStartParams);\n\n            // ‚úÖ Start new game session\n            const gameSession = await ipcService.startGame(gameStartParams);\n            console.log('üéÆ Pin game session started:', gameSession);\n\n            setCurrentSong(song);\n            setGameMode('pin'); // Always set to pin mode\n            setGameState('playing');\n            gameStartTime.current = Date.now();\n            resetStats();\n            return true;\n\n        } catch (error) {\n            console.error('‚ùå Game start failed:', error);\n            setGameState('idle');\n            return false;\n        }\n    }, []);\n\n    const stopGame = useCallback(async (): Promise<void> => {\n        try {\n            // Only try to stop if game is actually running\n            if (gameState === 'playing' || gameState === 'paused') {\n                await ipcService.stopGame();\n            } else {\n                console.log('üõë No game running, skipping stop command');\n            }\n\n            setGameState('idle');\n            setCurrentSong(null);\n        } catch (error) {\n            console.log('‚ÑπÔ∏è Stop game error (may be expected):', error);\n            // Always reset state even if stop fails\n            setGameState('idle');\n            setCurrentSong(null);\n        }\n    }, [gameState]);\n\n    const pauseGame = useCallback(async (): Promise<void> => {\n        try {\n            // ‚úÖ Use ipcService for consistency\n            if (typeof window !== 'undefined' && window.electronAPI?.game?.pause) {\n                await window.electronAPI.game.pause();\n                setGameState('paused');\n            }\n        } catch (error) {\n            console.error('‚ùå Failed to pause game:', error);\n        }\n    }, []);\n\n    const resumeGame = useCallback(async (): Promise<void> => {\n        try {\n            // ‚úÖ Use ipcService for consistency\n            if (typeof window !== 'undefined' && window.electronAPI?.game?.resume) {\n                await window.electronAPI.game.resume();\n                setGameState('playing');\n            }\n        } catch (error) {\n            console.error('‚ùå Failed to resume game:', error);\n        }\n    }, []);\n\n    const updateStats = useCallback((newStats: Partial<GameStats>) => {\n        setStats(prev => ({ ...prev, ...newStats }));\n    }, []);\n\n    const submitScore = useCallback(async (): Promise<boolean> => {\n        if (!currentSong) return false;\n\n        try {\n            const scoreData: ScoreData = {\n                songId: currentSong.id,\n                score: stats.score,\n                accuracy: stats.accuracy,\n                combo: stats.combo,\n                rank: calculateRank(stats.accuracy),\n                timestamp: Date.now(),\n            };\n\n            // ‚úÖ TODO: Implement actual score submission via ipcService\n            console.log('üìä Score submission (TODO):', scoreData);\n            return true;\n\n        } catch (error) {\n            console.error('‚ùå Failed to submit score:', error);\n            return false;\n        }\n    }, [currentSong, stats]);\n\n    const resetStats = useCallback(() => {\n        setStats({\n            score: 0,\n            combo: 0,\n            accuracy: 100,\n            hits: {\n                perfect: 0,\n                great: 0,\n                good: 0,\n                miss: 0\n            }\n        });\n    }, []);\n\n    return {\n        // State\n        currentSong,\n        gameMode,\n        gameState,\n        stats,\n        isPlaying,\n\n        // Controls\n        startGame,\n        stopGame,\n        pauseGame,\n        resumeGame,\n\n        // Score management\n        updateStats,\n        submitScore,\n        resetStats,\n    };\n}\n\n// Helper function to calculate rank based on accuracy\nfunction calculateRank(accuracy: number): ScoreData['rank'] {\n    if (accuracy >= 97) return 'SS';\n    if (accuracy >= 90) return 'S';\n    if (accuracy >= 80) return 'A';\n    if (accuracy >= 70) return 'B';\n    if (accuracy >= 60) return 'C';\n    if (accuracy >= 50) return 'D';\n    return 'F';\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 862, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/ui/dialog.tsx"],"sourcesContent":["import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n    React.ElementRef<typeof DialogPrimitive.Overlay>,\n    React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n    <DialogPrimitive.Overlay\n        ref={ref}\n        className={cn(\n            \"fixed inset-0 z-50 bg-background/80 backdrop-blur-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n            className\n        )}\n        {...props}\n    />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n    React.ElementRef<typeof DialogPrimitive.Content>,\n    React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n    <DialogPortal>\n        <DialogOverlay />\n        <DialogPrimitive.Content\n            ref={ref}\n            className={cn(\n                \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n                className\n            )}\n            {...props}\n        >\n            {children}\n            <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n                <X className=\"h-4 w-4\" />\n                <span className=\"sr-only\">Close</span>\n            </DialogPrimitive.Close>\n        </DialogPrimitive.Content>\n    </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n    className,\n    ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n    <div\n        className={cn(\n            \"flex flex-col space-y-1.5 text-center sm:text-left\",\n            className\n        )}\n        {...props}\n    />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n    className,\n    ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n    <div\n        className={cn(\n            \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n            className\n        )}\n        {...props}\n    />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n    React.ElementRef<typeof DialogPrimitive.Title>,\n    React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n    <DialogPrimitive.Title\n        ref={ref}\n        className={cn(\n            \"text-lg font-semibold leading-none tracking-tight\",\n            className\n        )}\n        {...props}\n    />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n    React.ElementRef<typeof DialogPrimitive.Description>,\n    React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n    <DialogPrimitive.Description\n        ref={ref}\n        className={cn(\"text-sm text-muted-foreground\", className)}\n        {...props}\n    />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n    Dialog,\n    DialogPortal,\n    DialogOverlay,\n    DialogClose,\n    DialogTrigger,\n    DialogContent,\n    DialogHeader,\n    DialogFooter,\n    DialogTitle,\n    DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,SAAS,6KAAoB;AAEnC,MAAM,gBAAgB,gLAAuB;AAE7C,MAAM,eAAe,+KAAsB;AAE3C,MAAM,cAAc,8KAAqB;AAEzC,MAAM,8BAAgB,2KAAgB,CAGpC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACtB,6LAAC,gLAAuB;QACpB,KAAK;QACL,WAAW,IAAA,wIAAE,EACT,gLACA;QAEH,GAAG,KAAK;;;;;;;KAVX;AAaN,cAAc,WAAW,GAAG,gLAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,2KAAgB,OAGpC,QAAoC;QAAnC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO;yBAChC,6LAAC;;0BACG,6LAAC;;;;;0BACD,6LAAC,gLAAuB;gBACpB,KAAK;gBACL,WAAW,IAAA,wIAAE,EACT,+fACA;gBAEH,GAAG,KAAK;;oBAER;kCACD,6LAAC,8KAAqB;wBAAC,WAAU;;0CAC7B,6LAAC,oMAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;;AAK1C,cAAc,WAAW,GAAG,gLAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe;QAAC,EAClB,SAAS,EACT,GAAG,OACgC;yBACnC,6LAAC;QACG,WAAW,IAAA,wIAAE,EACT,sDACA;QAEH,GAAG,KAAK;;;;;;;MATX;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe;QAAC,EAClB,SAAS,EACT,GAAG,OACgC;yBACnC,6LAAC;QACG,WAAW,IAAA,wIAAE,EACT,iEACA;QAEH,GAAG,KAAK;;;;;;;MATX;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACtB,6LAAC,8KAAqB;QAClB,KAAK;QACL,WAAW,IAAA,wIAAE,EACT,qDACA;QAEH,GAAG,KAAK;;;;;;;;AAGjB,YAAY,WAAW,GAAG,8KAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,2KAAgB,OAGxC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACtB,6LAAC,oLAA2B;QACxB,KAAK;QACL,WAAW,IAAA,wIAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGjB,kBAAkB,WAAW,GAAG,oLAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1038, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/ui/DifficultySelectionModal.tsx"],"sourcesContent":["/**\n * Difficulty Selection Modal Component\n */\n\n'use client';\n\nimport React from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Star, Zap, Target, Crown } from 'lucide-react';\n\ninterface Difficulty {\n  name: string;\n  filename: string;\n  starRating: number;\n  difficultyName: string;\n}\n\ninterface DifficultySelectionModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSelectDifficulty: (difficulty: string) => void;\n  songTitle: string;\n  difficulties: Difficulty[];\n  loading?: boolean;\n}\n\nexport function DifficultySelectionModal({\n  isOpen,\n  onClose,\n  onSelectDifficulty,\n  songTitle,\n  difficulties,\n  loading = false\n}: DifficultySelectionModalProps) {\n  const getDifficultyIcon = (starRating: number) => {\n    if (starRating >= 7) return <Crown className=\"h-4 w-4 text-yellow-500\" />;\n    if (starRating >= 5) return <Target className=\"h-4 w-4 text-red-500\" />;\n    if (starRating >= 3) return <Zap className=\"h-4 w-4 text-orange-500\" />;\n    return <Star className=\"h-4 w-4 text-blue-500\" />;\n  };\n\n  const getDifficultyColor = (starRating: number) => {\n    if (starRating >= 7) return 'bg-yellow-500/20 text-yellow-300 border-yellow-500/50';\n    if (starRating >= 5) return 'bg-red-500/20 text-red-300 border-red-500/50';\n    if (starRating >= 3) return 'bg-orange-500/20 text-orange-300 border-orange-500/50';\n    return 'bg-blue-500/20 text-blue-300 border-blue-500/50';\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"sm:max-w-[425px] bg-gray-900 text-white border-gray-700\">\n        <DialogHeader>\n          <DialogTitle className=\"text-xl font-bold text-center\">\n            ÎÇúÏù¥ÎèÑ ÏÑ†ÌÉù\n          </DialogTitle>\n          <DialogDescription className=\"text-center text-gray-300\">\n            <span className=\"font-medium text-blue-400\">{songTitle}</span>Ïùò ÎÇúÏù¥ÎèÑÎ•º ÏÑ†ÌÉùÌïòÏÑ∏Ïöî\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"space-y-3 mt-6\">\n          {loading ? (\n            <div className=\"text-center py-8\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mx-auto\"></div>\n              <p className=\"text-gray-400 mt-2\">ÎÇúÏù¥ÎèÑ Ï†ïÎ≥¥ Î°úÎî©Ï§ë...</p>\n            </div>\n          ) : difficulties.length === 0 ? (\n            <div className=\"text-center py-8\">\n              <p className=\"text-gray-400\">ÏÇ¨Ïö© Í∞ÄÎä•Ìïú ÎÇúÏù¥ÎèÑÍ∞Ä ÏóÜÏäµÎãàÎã§</p>\n              <Button\n                variant=\"outline\"\n                onClick={onClose}\n                className=\"mt-4\"\n              >\n                Îã´Í∏∞\n              </Button>\n            </div>\n          ) : (\n            difficulties.map((difficulty) => (\n              <div\n                key={difficulty.filename}\n                className=\"p-4 border border-gray-700 rounded-lg hover:border-blue-500/50 hover:bg-gray-800/50 transition-all cursor-pointer\"\n                onClick={() => onSelectDifficulty(difficulty.difficultyName)}\n              >\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-3\">\n                    {getDifficultyIcon(difficulty.starRating)}\n                    <div>\n                      <h3 className=\"font-medium text-white\">\n                        {difficulty.difficultyName}\n                      </h3>\n                      <p className=\"text-sm text-gray-400\">\n                        {difficulty.name}\n                      </p>\n                    </div>\n                  </div>\n                  \n                  <span \n                    className={`px-2 py-1 text-xs rounded-md border ${getDifficultyColor(difficulty.starRating)}`}\n                  >\n                    ‚òÖ {difficulty.starRating.toFixed(1)}\n                  </span>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n\n        <div className=\"flex gap-2 mt-6\">\n          <Button\n            variant=\"outline\"\n            onClick={onClose}\n            className=\"flex-1\"\n          >\n            Ï∑®ÏÜå\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;;;AAKD;AAOA;AACA;AAAA;AAAA;AAAA;AAXA;;;;;AA6BO,SAAS,yBAAyB,KAOT;QAPS,EACvC,MAAM,EACN,OAAO,EACP,kBAAkB,EAClB,SAAS,EACT,YAAY,EACZ,UAAU,KAAK,EACe,GAPS;IAQvC,MAAM,oBAAoB,CAAC;QACzB,IAAI,cAAc,GAAG,qBAAO,6LAAC,gNAAK;YAAC,WAAU;;;;;;QAC7C,IAAI,cAAc,GAAG,qBAAO,6LAAC,mNAAM;YAAC,WAAU;;;;;;QAC9C,IAAI,cAAc,GAAG,qBAAO,6LAAC,0MAAG;YAAC,WAAU;;;;;;QAC3C,qBAAO,6LAAC,6MAAI;YAAC,WAAU;;;;;;IACzB;IAEA,MAAM,qBAAqB,CAAC;QAC1B,IAAI,cAAc,GAAG,OAAO;QAC5B,IAAI,cAAc,GAAG,OAAO;QAC5B,IAAI,cAAc,GAAG,OAAO;QAC5B,OAAO;IACT;IAEA,qBACE,6LAAC,2JAAM;QAAC,MAAM;QAAQ,cAAc;kBAClC,cAAA,6LAAC,kKAAa;YAAC,WAAU;;8BACvB,6LAAC,iKAAY;;sCACX,6LAAC,gKAAW;4BAAC,WAAU;sCAAgC;;;;;;sCAGvD,6LAAC,sKAAiB;4BAAC,WAAU;;8CAC3B,6LAAC;oCAAK,WAAU;8CAA6B;;;;;;gCAAiB;;;;;;;;;;;;;8BAIlE,6LAAC;oBAAI,WAAU;8BACZ,wBACC,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;;;;;0CACf,6LAAC;gCAAE,WAAU;0CAAqB;;;;;;;;;;;+BAElC,aAAa,MAAM,KAAK,kBAC1B,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAE,WAAU;0CAAgB;;;;;;0CAC7B,6LAAC,2JAAM;gCACL,SAAQ;gCACR,SAAS;gCACT,WAAU;0CACX;;;;;;;;;;;+BAKH,aAAa,GAAG,CAAC,CAAC,2BAChB,6LAAC;4BAEC,WAAU;4BACV,SAAS,IAAM,mBAAmB,WAAW,cAAc;sCAE3D,cAAA,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;;4CACZ,kBAAkB,WAAW,UAAU;0DACxC,6LAAC;;kEACC,6LAAC;wDAAG,WAAU;kEACX,WAAW,cAAc;;;;;;kEAE5B,6LAAC;wDAAE,WAAU;kEACV,WAAW,IAAI;;;;;;;;;;;;;;;;;;kDAKtB,6LAAC;wCACC,WAAW,AAAC,uCAAgF,OAA1C,mBAAmB,WAAW,UAAU;;4CAC3F;4CACI,WAAW,UAAU,CAAC,OAAO,CAAC;;;;;;;;;;;;;2BApBhC,WAAW,QAAQ;;;;;;;;;;8BA4BhC,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC,2JAAM;wBACL,SAAQ;wBACR,SAAS;wBACT,WAAU;kCACX;;;;;;;;;;;;;;;;;;;;;;AAOX;KA9FgB","debugId":null}},
    {"offset": {"line": 1291, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/app/select/page.tsx"],"sourcesContent":["/**\n * Select Page - Song Library with Real Data\n */\n\n'use client';\n\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { ArrowLeft, Search, Play, Star, Heart, Music, Clock, Zap, RefreshCw } from 'lucide-react';\nimport Link from 'next/link';\nimport { useState, useMemo } from 'react';\nimport { useSongs } from '@/hooks/useSongs';\nimport { useGameState } from '@/hooks/useGameState';\nimport { DifficultySelectionModal } from '@/components/ui/DifficultySelectionModal';\nimport { ipcService } from '@/lib/ipc-service';\n\nexport default function SelectPage() {\n    const { songs, loading, error, refreshLibrary, hasDummyData } = useSongs();\n    const { startGame } = useGameState();\n    const [searchQuery, setSearchQuery] = useState('');\n    const [selectedDifficulty, setSelectedDifficulty] = useState<string>('all');\n    \n    // Difficulty selection modal state\n    const [showDifficultyModal, setShowDifficultyModal] = useState(false);\n    const [selectedSong, setSelectedSong] = useState<any>(null);\n    const [difficulties, setDifficulties] = useState<any[]>([]);\n    const [loadingDifficulties, setLoadingDifficulties] = useState(false);\n\n    // Filter songs based on search and difficulty\n    const filteredSongs = useMemo(() => {\n        return songs.filter(song => {\n            const matchesSearch = song.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n                song.artist.toLowerCase().includes(searchQuery.toLowerCase());\n\n            const matchesDifficulty = selectedDifficulty === 'all' ||\n                Object.keys(song.difficulty).some(diff =>\n                    diff === selectedDifficulty && song.difficulty[diff as keyof typeof song.difficulty]\n                );\n\n            return matchesSearch && matchesDifficulty;\n        });\n    }, [songs, searchQuery, selectedDifficulty]);\n\n    const handlePlaySong = async (songId: string) => {\n        const song = songs.find(s => s.id === songId);\n        if (song) {\n            console.log('üéØ Opening difficulty selection for:', song.title);\n            \n            setSelectedSong(song);\n            setShowDifficultyModal(true);\n            setLoadingDifficulties(true);\n            \n            try {\n                // Get available difficulties for this chart\n                const response = await ipcService.getDifficulties(songId);\n                if (response.success && response.difficulties) {\n                    setDifficulties(response.difficulties);\n                } else {\n                    console.error('Failed to get difficulties:', response.error);\n                    setDifficulties([]);\n                }\n            } catch (error) {\n                console.error('Error getting difficulties:', error);\n                setDifficulties([]);\n            } finally {\n                setLoadingDifficulties(false);\n            }\n        }\n    };\n\n    const handleDifficultySelected = async (difficulty: string) => {\n        if (selectedSong) {\n            console.log('üéØ Starting game with difficulty:', difficulty);\n            \n            const success = await startGame(selectedSong, 'pin');\n            if (success) {\n                console.log('‚úÖ Game started, navigating to /pin');\n                setShowDifficultyModal(false);\n                window.location.href = '/pin';\n            } else {\n                console.error('‚ùå Failed to start game');\n            }\n        }\n    };\n\n    const handleCloseDifficultyModal = () => {\n        setShowDifficultyModal(false);\n        setSelectedSong(null);\n        setDifficulties([]);\n    };\n\n    const formatDuration = (ms: number) => {\n        const minutes = Math.floor(ms / 60000);\n        const seconds = Math.floor((ms % 60000) / 1000);\n        return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n    };\n\n    if (loading) {\n        return (\n            <div className=\"min-h-full bg-gradient-to-br from-slate-900 via-purple-900/20 to-slate-900 flex items-center justify-center\">\n                <div className=\"text-center\">\n                    <div className=\"w-16 h-16 border-4 border-purple-500 border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n                    <p className=\"text-white text-lg\">Loading Song Library...</p>\n                </div>\n            </div>\n        );\n    }\n\n    if (error) {\n        return (\n            <div className=\"min-h-full bg-gradient-to-br from-slate-900 via-purple-900/20 to-slate-900 p-6\">\n                <div className=\"max-w-4xl mx-auto\">\n                    <Card className=\"bg-red-900/20 border-red-500\">\n                        <CardHeader>\n                            <CardTitle className=\"text-red-400\">Error Loading Songs</CardTitle>\n                        </CardHeader>\n                        <CardContent>\n                            <p className=\"text-red-300 mb-4\">{error}</p>\n                            <Button onClick={refreshLibrary} variant=\"outline\" className=\"border-red-500 text-red-300\">\n                                <RefreshCw className=\"w-4 h-4 mr-2\" />\n                                Retry\n                            </Button>\n                        </CardContent>\n                    </Card>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <>\n            <div className=\"min-h-full bg-gradient-to-br from-slate-900 via-purple-900/20 to-slate-900 p-6 pt-20\">\n            <div className=\"max-w-7xl mx-auto\">\n                {/* Dummy Data Warning */}\n                {hasDummyData && (\n                    <div className=\"mb-6\">\n                        <Card className=\"bg-yellow-900/20 border-yellow-500/30\">\n                            <CardContent className=\"p-4\">\n                                <div className=\"flex items-center gap-3\">\n                                    <div className=\"w-6 h-6 bg-yellow-500 rounded-full flex items-center justify-center\">\n                                        <Zap className=\"w-4 h-4 text-yellow-900\" />\n                                    </div>\n                                    <div>\n                                        <p className=\"text-yellow-200 font-medium\">\n                                            ÌÖåÏä§Ìä∏ Î™®Îìú: ÎçîÎØ∏ Îç∞Ïù¥ÌÑ∞Î•º ÏÇ¨Ïö© Ï§ëÏûÖÎãàÎã§\n                                        </p>\n                                        <p className=\"text-yellow-300 text-sm\">\n                                            OSZ ÌååÏùºÏù¥ ÌååÏã±ÎêòÏßÄ ÏïäÏïòÍ±∞ÎÇò Í≥°Ïù¥ Î∂ÄÏ°±Ìï©ÎãàÎã§. Ïã§Ï†ú ÏùåÏïÖÏùÑ Îì§ÏùÑ Ïàò ÏóÜÏäµÎãàÎã§.\n                                        </p>\n                                    </div>\n                                </div>\n                            </CardContent>\n                        </Card>\n                    </div>\n                )}\n\n                {/* Header */}\n                <div className=\"flex items-center justify-between mb-8\">\n                    <div className=\"flex items-center gap-4\">\n                        <Link href=\"/\">\n                            <Button variant=\"ghost\" size=\"sm\" className=\"text-slate-300 hover:text-white\">\n                                <ArrowLeft className=\"w-4 h-4 mr-2\" />\n                                Back\n                            </Button>\n                        </Link>\n                        <div>\n                            <h1 className=\"text-4xl font-bold text-white mb-2\">Í≥° ÎùºÏù¥Î∏åÎü¨Î¶¨</h1>\n                            <p className=\"text-slate-400 text-lg\">{songs.length}Í≥° ÏÇ¨Ïö© Í∞ÄÎä•</p>\n                        </div>\n                    </div>\n\n                    <div className=\"flex items-center gap-4\">\n                        <Button\n                            onClick={async () => {\n                                console.log('üß™ Testing IPC connection...');\n                                const electronAPI = (window as any).electronAPI;\n                                console.log('window.electronAPI:', electronAPI);\n\n                                if (electronAPI) {\n                                    console.log('Available APIs:', Object.keys(electronAPI));\n\n                                    if (electronAPI.charts) {\n                                        console.log('Charts API methods:', Object.keys(electronAPI.charts));\n\n                                        // Test actual API call\n                                        try {\n                                            const result = await electronAPI.charts.getLibrary();\n                                            console.log('‚úÖ Charts API test successful:', result);\n\n                                            // Try to copy to clipboard (with error handling)\n                                            try {\n                                                await navigator.clipboard.writeText(JSON.stringify(result, null, 2));\n                                                console.log('üìã Results copied to clipboard!');\n                                            } catch (clipboardError) {\n                                                console.log('‚ÑπÔ∏è Clipboard copy failed (expected in some environments):', clipboardError);\n                                            }\n\n                                        } catch (error) {\n                                            console.error('‚ùå Charts API test failed:', error);\n                                        }\n                                    }\n\n                                    if (electronAPI.osz) {\n                                        console.log('OSZ API methods:', Object.keys(electronAPI.osz));\n\n                                        // Test OSZ API\n                                        try {\n                                            const result = await electronAPI.osz.getLibrary();\n                                            console.log('‚úÖ OSZ API test successful:', result);\n                                        } catch (error) {\n                                            console.error('‚ùå OSZ API test failed:', error);\n                                        }\n                                    }\n\n                                } else {\n                                    console.error('‚ùå electronAPI not found on window object');\n                                    console.log('window keys:', Object.keys(window));\n                                }\n                            }}\n                            variant=\"outline\"\n                            className=\"border-blue-500 text-blue-300 hover:bg-blue-600 hover:text-white\"\n                        >\n                            Test IPC & Copy\n                        </Button>\n                        <Button\n                            onClick={refreshLibrary}\n                            variant=\"outline\"\n                            className=\"border-purple-500 text-purple-300 hover:bg-purple-600 hover:text-white\"\n                        >\n                            <RefreshCw className=\"w-4 h-4 mr-2\" />\n                            ÏÉàÎ°úÍ≥†Ïπ®\n                        </Button>\n                    </div>\n                </div>\n\n                {/* Search and Filters */}\n                <div className=\"flex flex-col md:flex-row gap-4 mb-8\">\n                    <div className=\"relative flex-1\">\n                        <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-slate-400 w-4 h-4\" />\n                        <Input\n                            placeholder=\"Í≥°Ïù¥ÎÇò ÏïÑÌã∞Ïä§Ìä∏ Í≤ÄÏÉâ...\"\n                            value={searchQuery}\n                            onChange={(e) => setSearchQuery(e.target.value)}\n                            className=\"pl-10 bg-slate-800 border-slate-700 text-white placeholder-slate-400\"\n                        />\n                    </div>\n\n                    <div className=\"flex gap-2\">\n                        {['all', 'easy', 'normal', 'hard', 'expert'].map((difficulty) => (\n                            <Button\n                                key={difficulty}\n                                variant={selectedDifficulty === difficulty ? 'default' : 'ghost'}\n                                size=\"sm\"\n                                onClick={() => setSelectedDifficulty(difficulty)}\n                                className={selectedDifficulty === difficulty\n                                    ? 'bg-purple-500 text-white'\n                                    : 'text-slate-300 hover:text-white'\n                                }\n                            >\n                                {difficulty === 'all' ? 'Ï†ÑÏ≤¥' :\n                                    difficulty === 'easy' ? 'Ïâ¨ÏõÄ' :\n                                        difficulty === 'normal' ? 'Î≥¥ÌÜµ' :\n                                            difficulty === 'hard' ? 'Ïñ¥Î†§ÏõÄ' : 'ÏùµÏä§ÌçºÌä∏'}\n                            </Button>\n                        ))}\n                    </div>\n                </div>\n\n                {/* Songs Grid */}\n                {filteredSongs.length === 0 ? (\n                    <Card className=\"bg-slate-800/50 border-slate-700\">\n                        <CardContent className=\"text-center py-12\">\n                            <Music className=\"w-16 h-16 text-slate-400 mx-auto mb-4\" />\n                            <h3 className=\"text-xl font-semibold text-white mb-2\">Í≥°ÏùÑ Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§</h3>\n                            <p className=\"text-slate-400 mb-4\">\n                                {searchQuery ? 'Í≤ÄÏÉâ Ï°∞Í±¥Ïóê ÎßûÎäî Í≥°Ïù¥ ÏóÜÏäµÎãàÎã§.' : 'ÎùºÏù¥Î∏åÎü¨Î¶¨Í∞Ä ÎπÑÏñ¥ ÏûàÏäµÎãàÎã§.'}\n                            </p>\n                            <Button variant=\"outline\" className=\"border-slate-600 text-slate-300\">\n                                .osz ÌååÏùº Í∞ÄÏ†∏Ïò§Í∏∞\n                            </Button>\n                        </CardContent>\n                    </Card>\n                ) : (\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                        {filteredSongs.map((song) => (\n                            <Card\n                                key={song.id}\n                                className=\"bg-slate-800/50 border-slate-700 hover:bg-slate-700/50 transition-all duration-300 group\"\n                            >\n                                <CardHeader>\n                                    <div className=\"flex justify-between items-start\">\n                                        <div className=\"flex-1 min-w-0\">\n                                            <CardTitle className=\"text-white text-lg truncate\">{song.title}</CardTitle>\n                                            <CardDescription className=\"text-slate-400 truncate\">{song.artist}</CardDescription>\n                                        </div>\n                                        <Button variant=\"ghost\" size=\"sm\" className=\"text-slate-400 hover:text-red-400\">\n                                            <Heart className=\"w-4 h-4\" />\n                                        </Button>\n                                    </div>\n                                </CardHeader>\n\n                                <CardContent className=\"space-y-4\">\n                                    {/* Song Info */}\n                                    <div className=\"flex items-center justify-between text-sm text-slate-400\">\n                                        <div className=\"flex items-center gap-2\">\n                                            <Clock className=\"w-4 h-4\" />\n                                            {formatDuration(song.duration)}\n                                        </div>\n                                        <div className=\"flex items-center gap-2\">\n                                            <Zap className=\"w-4 h-4\" />\n                                            {song.bpm} BPM\n                                        </div>\n                                    </div>\n\n                                    {/* Difficulties */}\n                                    <div className=\"flex gap-1\">\n                                        {Object.entries(song.difficulty).map(([diff, stars]) =>\n                                            stars ? (\n                                                <div\n                                                    key={diff}\n                                                    className={`px-2 py-1 rounded text-xs font-medium ${diff === 'easy' ? 'bg-green-500/20 text-green-400' :\n                                                        diff === 'normal' ? 'bg-blue-500/20 text-blue-400' :\n                                                            diff === 'hard' ? 'bg-yellow-500/20 text-yellow-400' :\n                                                                'bg-red-500/20 text-red-400'\n                                                        }`}\n                                                >\n                                                    {diff === 'easy' ? 'Ïâ¨ÏõÄ' :\n                                                        diff === 'normal' ? 'Î≥¥ÌÜµ' :\n                                                            diff === 'hard' ? 'Ïñ¥Î†§ÏõÄ' :\n                                                                diff === 'expert' ? 'ÏùµÏä§ÌçºÌä∏' : diff.charAt(0).toUpperCase() + diff.slice(1)} {String(stars)}‚òÖ\n                                                </div>\n                                            ) : null\n                                        )}\n                                    </div>\n\n                                    {/* Action Button - Simplified to Pin Mode Only */}\n                                    <div className=\"flex gap-2 pt-2\">\n                                        <Button\n                                            size=\"sm\"\n                                            onClick={() => handlePlaySong(song.id)}\n                                            className=\"w-full bg-purple-500 hover:bg-purple-600 text-white\"\n                                        >\n                                            <Play className=\"w-4 h-4 mr-2\" />\n                                            ÌïÄ Î™®ÎìúÎ°ú ÌîåÎ†àÏù¥\n                                        </Button>\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        ))}\n                    </div>\n                )}\n            </div>\n            </div>\n\n            {/* Difficulty Selection Modal */}\n        <DifficultySelectionModal\n            isOpen={showDifficultyModal}\n            onClose={handleCloseDifficultyModal}\n            onSelectDifficulty={handleDifficultySelected}\n            songTitle={selectedSong?.title || ''}\n            difficulties={difficulties}\n            loading={loadingDifficulties}\n        />\n        </>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}