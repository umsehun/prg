{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/ui/StartSceneBackground.tsx"],"sourcesContent":["// src/renderer/components/ui/StartSceneBackground.tsx\n'use client';\n\nimport React from 'react';\n\nconst StartSceneBackground: React.FC = () => (\n  <div className=\"absolute inset-0 overflow-hidden\">\n    <div className=\"absolute top-0 left-0 w-72 h-72 bg-theme-secondary rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob\"></div>\n    <div className=\"absolute top-0 right-0 w-72 h-72 bg-theme-accent rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-2000\"></div>\n    <div className=\"absolute bottom-0 left-1/4 w-72 h-72 bg-theme-primary rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-4000\"></div>\n  </div>\n);\n\nexport default StartSceneBackground;\n"],"names":[],"mappings":"AAAA,sDAAsD;;;;;;AACtD;;AAIA,MAAM,uBAAiC,kBACrC,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;;;;;0BACf,8OAAC;gBAAI,WAAU;;;;;;0BACf,8OAAC;gBAAI,WAAU;;;;;;;;;;;;uCAIJ","debugId":null}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/ui/StartSceneHeader.tsx"],"sourcesContent":["// src/renderer/components/ui/StartSceneHeader.tsx\n'use client';\n\nimport React from 'react';\n\nconst StartSceneHeader: React.FC = () => (\n  <div className=\"text-center\">\n    <h1 className=\"text-8xl md:text-9xl font-black mb-4 bg-clip-text text-transparent bg-gradient-to-r from-theme-secondary to-theme-accent animate-pulse\">\n      PRG\n    </h1>\n    <p className=\"text-xl md:text-2xl text-theme-text-light/80 mb-12 font-light\">A RHYTHM GAME EXPERIENCE</p>\n  </div>\n);\n\nexport default StartSceneHeader;\n"],"names":[],"mappings":"AAAA,kDAAkD;;;;;;AAClD;;AAIA,MAAM,mBAA6B,kBACjC,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAyI;;;;;;0BAGvJ,8OAAC;gBAAE,WAAU;0BAAgE;;;;;;;;;;;;uCAIlE","debugId":null}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/scenes/StartScene.tsx"],"sourcesContent":["// src/renderer/components/scenes/StartScene.tsx\n'use client';\n\nimport React from 'react';\nimport { GameScene } from '../../../shared/types';\nimport StartSceneBackground from '../ui/StartSceneBackground';\nimport StartSceneHeader from '../ui/StartSceneHeader';\n\ninterface MenuItem {\n  label: string;\n  scene: GameScene;\n}\n\nconst menuItems: MenuItem[] = [\n  { label: 'Start Game', scene: 'Select' },\n  { label: '.osz Import', scene: 'OszImport' },\n  { label: 'Settings', scene: 'Settings' },\n];\n\ninterface StartSceneProps {\n  onNavigate: (scene: GameScene) => void;\n}\n\nconst StartScene: React.FC<StartSceneProps> = ({ onNavigate }) => {\n\n  return (\n    <div className=\"min-h-screen bg-theme-bg text-theme-text-light flex flex-col items-center justify-center p-8 overflow-hidden relative\">\n      <StartSceneBackground />\n\n      <div className=\"relative z-10 flex flex-col items-center justify-center\">\n        <StartSceneHeader />\n\n        <div className=\"space-y-6\">\n          {menuItems.map((item, index) => (\n            <button\n              key={index}\n              onClick={() => onNavigate(item.scene)}\n              className=\"group relative px-12 py-4 bg-theme-primary text-theme-text-light rounded-lg hover:bg-theme-primary/80 transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl\"\n            >\n              {item.label}\n            </button>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StartScene;\n"],"names":[],"mappings":"AAAA,gDAAgD;;;;;;AAKhD;AACA;AALA;;;;AAYA,MAAM,YAAwB;IAC5B;QAAE,OAAO;QAAc,OAAO;IAAS;IACvC;QAAE,OAAO;QAAe,OAAO;IAAY;IAC3C;QAAE,OAAO;QAAY,OAAO;IAAW;CACxC;AAMD,MAAM,aAAwC,CAAC,EAAE,UAAU,EAAE;IAE3D,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,uKAAoB;;;;;0BAErB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,mKAAgB;;;;;kCAEjB,8OAAC;wBAAI,WAAU;kCACZ,UAAU,GAAG,CAAC,CAAC,MAAM,sBACpB,8OAAC;gCAEC,SAAS,IAAM,WAAW,KAAK,KAAK;gCACpC,WAAU;0CAET,KAAK,KAAK;+BAJN;;;;;;;;;;;;;;;;;;;;;;AAWnB;uCAEe","debugId":null}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/lib/AssetLoader.ts"],"sourcesContent":["// src/renderer/lib/AssetLoader.ts\nimport type { IpcApi } from '../../types/ipc';\n\n/**\n * Client-side asset loader that uses Electron IPC to load assets from the main process.\n * This replaces HTTP requests with secure IPC communication.\n */\nexport class AssetLoader {\n  /**\n   * Load an audio asset and create a blob URL for use in the browser.\n   * @param assetPath - Path relative to public/assets (e.g., 'bad-apple/Bad_Apple.ogg')\n   * @returns Promise<string> - Blob URL for the audio file\n   */\n  static async loadAudio(assetPath: string): Promise<string> {\n    try {\n      const electron = (window as unknown as { electron: { loadAsset: (assetPath: string) => Promise<ArrayBuffer> } }).electron;\n      const buffer = await electron.loadAsset(assetPath);\n      const blob = new Blob([buffer], { type: 'audio/ogg' });\n      return URL.createObjectURL(blob);\n    } catch (error) {\n      console.error(`Failed to load audio asset: ${assetPath}`, error);\n      throw new Error(`Failed to load audio: ${assetPath}`);\n    }\n  }\n\n  /**\n   * Load an image asset and create a blob URL for use in the browser.\n   * @param assetPath - Path relative to public/assets (e.g., 'bad-apple/Bad_Apple.png')\n   * @returns Promise<string> - Blob URL for the image file\n   */\n  static async loadImage(assetPath: string): Promise<string> {\n    try {\n      const electron = (window as unknown as { electron: { loadAsset: (assetPath: string) => Promise<ArrayBuffer> } }).electron;\n      const buffer = await electron.loadAsset(assetPath);\n      const blob = new Blob([buffer], { type: 'image/png' });\n      return URL.createObjectURL(blob);\n    } catch (error) {\n      console.error(`Failed to load image asset: ${assetPath}`, error);\n      throw new Error(`Failed to load image: ${assetPath}`);\n    }\n  }\n\n  /**\n   * Check if an asset exists.\n   * @param assetPath - Path relative to public/assets\n   * @returns Promise<boolean> - True if asset exists\n   */\n  static async exists(assetPath: string): Promise<boolean> {\n    try {\n      const electron = (window as unknown as { electron: { assetExists: (assetPath: string) => Promise<boolean> } }).electron;\n      return await electron.assetExists(assetPath);\n    } catch (error) {\n      console.error(`Failed to check asset existence: ${assetPath}`, error);\n      return false;\n    }\n  }\n\n  /**\n   * Clean up blob URLs to prevent memory leaks.\n   * @param blobUrl - The blob URL to revoke\n   */\n  static cleanup(blobUrl: string): void {\n    if (blobUrl.startsWith('blob:')) {\n      URL.revokeObjectURL(blobUrl);\n    }\n  }\n}\n"],"names":[],"mappings":"AAAA,kCAAkC;;;;;AAO3B,MAAM;IACX;;;;GAIC,GACD,aAAa,UAAU,SAAiB,EAAmB;QACzD,IAAI;YACF,MAAM,WAAW,AAAC,OAA+F,QAAQ;YACzH,MAAM,SAAS,MAAM,SAAS,SAAS,CAAC;YACxC,MAAM,OAAO,IAAI,KAAK;gBAAC;aAAO,EAAE;gBAAE,MAAM;YAAY;YACpD,OAAO,IAAI,eAAe,CAAC;QAC7B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,4BAA4B,EAAE,WAAW,EAAE;YAC1D,MAAM,IAAI,MAAM,CAAC,sBAAsB,EAAE,WAAW;QACtD;IACF;IAEA;;;;GAIC,GACD,aAAa,UAAU,SAAiB,EAAmB;QACzD,IAAI;YACF,MAAM,WAAW,AAAC,OAA+F,QAAQ;YACzH,MAAM,SAAS,MAAM,SAAS,SAAS,CAAC;YACxC,MAAM,OAAO,IAAI,KAAK;gBAAC;aAAO,EAAE;gBAAE,MAAM;YAAY;YACpD,OAAO,IAAI,eAAe,CAAC;QAC7B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,4BAA4B,EAAE,WAAW,EAAE;YAC1D,MAAM,IAAI,MAAM,CAAC,sBAAsB,EAAE,WAAW;QACtD;IACF;IAEA;;;;GAIC,GACD,aAAa,OAAO,SAAiB,EAAoB;QACvD,IAAI;YACF,MAAM,WAAW,AAAC,OAA6F,QAAQ;YACvH,OAAO,MAAM,SAAS,WAAW,CAAC;QACpC,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,iCAAiC,EAAE,WAAW,EAAE;YAC/D,OAAO;QACT;IACF;IAEA;;;GAGC,GACD,OAAO,QAAQ,OAAe,EAAQ;QACpC,IAAI,QAAQ,UAAU,CAAC,UAAU;YAC/B,IAAI,eAAe,CAAC;QACtB;IACF;AACF","debugId":null}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/ui/BannerImage.tsx"],"sourcesContent":["// src/renderer/components/ui/BannerImage.tsx\n'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { AssetLoader } from '@/lib/AssetLoader';\n\ninterface BannerImageProps {\n  bannerPath: string;\n  title: string;\n}\n\nconst BannerImage: React.FC<BannerImageProps> = ({ bannerPath, title }) => {\n  const [imageSrc, setImageSrc] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const loadImage = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        \n        // Remove /assets/ prefix if present\n        const assetPath = bannerPath.replace('/assets/', '');\n        const blobUrl = await AssetLoader.loadImage(assetPath);\n        setImageSrc(blobUrl);\n      } catch (err) {\n        console.error(`Failed to load banner image: ${bannerPath}`, err);\n        setError('Failed to load image');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadImage();\n\n    // Cleanup blob URL on unmount\n    return () => {\n      if (imageSrc) {\n        AssetLoader.cleanup(imageSrc);\n      }\n    };\n  }, [bannerPath]);\n\n  if (isLoading) {\n    return (\n      <div className=\"w-full h-full flex items-center justify-center bg-gray-800\">\n        <div className=\"text-white\">Loading...</div>\n      </div>\n    );\n  }\n\n  if (error || !imageSrc) {\n    return (\n      <div className=\"w-full h-full flex items-center justify-center bg-gray-800\">\n        <div className=\"text-white/70\">No Image</div>\n      </div>\n    );\n  }\n\n  return (\n    <img\n      src={imageSrc}\n      alt={title}\n      className=\"w-full h-full object-cover\"\n    />\n  );\n};\n\nexport default BannerImage;\n"],"names":[],"mappings":"AAAA,6CAA6C;;;;;;AAG7C;AACA;AAHA;;;;AAUA,MAAM,cAA0C,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE;IACpE,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAgB;IACxD,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iNAAQ,EAAC;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,iNAAQ,EAAgB;IAElD,IAAA,kNAAS,EAAC;QACR,MAAM,YAAY;YAChB,IAAI;gBACF,aAAa;gBACb,SAAS;gBAET,oCAAoC;gBACpC,MAAM,YAAY,WAAW,OAAO,CAAC,YAAY;gBACjD,MAAM,UAAU,MAAM,oJAAW,CAAC,SAAS,CAAC;gBAC5C,YAAY;YACd,EAAE,OAAO,KAAK;gBACZ,QAAQ,KAAK,CAAC,CAAC,6BAA6B,EAAE,YAAY,EAAE;gBAC5D,SAAS;YACX,SAAU;gBACR,aAAa;YACf;QACF;QAEA;QAEA,8BAA8B;QAC9B,OAAO;YACL,IAAI,UAAU;gBACZ,oJAAW,CAAC,OAAO,CAAC;YACtB;QACF;IACF,GAAG;QAAC;KAAW;IAEf,IAAI,WAAW;QACb,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;0BAAa;;;;;;;;;;;IAGlC;IAEA,IAAI,SAAS,CAAC,UAAU;QACtB,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;0BAAgB;;;;;;;;;;;IAGrC;IAEA,qBACE,8OAAC;QACC,KAAK;QACL,KAAK;QACL,WAAU;;;;;;AAGhB;uCAEe","debugId":null}},
    {"offset": {"line": 323, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/store/gameStore.ts"],"sourcesContent":["// src/renderer/store/gameStore.ts\n/**\n * @file Zustand store for managing the global game state.\n */\nimport { create } from 'zustand';\nimport { GameScene, Judgment, JudgmentCounts, ChartMetadata, GameUpdateArgs } from '../../shared/types';\n\n// Defines the state structure of the game\nexport interface GameState {\n  score: number;\n  combo: number;\n  maxCombo: number;\n  judgment: Judgment | null;\n  judgments: JudgmentCounts;\n  currentScene: GameScene;\n  isPaused: boolean;\n  charts: ChartMetadata[];\n  selectedChartId: string | null;\n  gameMode: string;\n}\n\n// Defines the actions available to modify the state\nexport interface GameActions {\n  updateGame: (data: GameUpdateArgs) => void;\n  setCurrentScene: (scene: GameScene) => void;\n  togglePause: () => void;\n  setSelectedChart: (chartId: string) => void;\n  setGameMode: (mode: string) => void;\n  loadCharts: () => Promise<void>;\n  reset: () => void;\n}\n\n// Combines state and actions into a single type for the store\nexport type GameStore = GameState & GameActions;\n\nconst initialState: GameState = {\n  score: 0,\n  combo: 0,\n  maxCombo: 0,\n  judgment: null,\n  judgments: { KOOL: 0, COOL: 0, GOOD: 0, MISS: 0 },\n  currentScene: 'Start' as GameScene,\n  isPaused: false,\n  charts: [],\n  selectedChartId: null,\n  gameMode: 'pin',\n};\n\nconst useGameStore = create<GameStore>()((set, get) => ({\n  ...initialState,\n\n  updateGame: (data: GameUpdateArgs) => {\n    const { combo, judgment } = data;\n    const state = get();\n\n    const newJudgments = { ...state.judgments };\n    if (judgment && judgment in newJudgments) {\n      newJudgments[judgment]++;\n    }\n\n    set((state) => ({\n      ...data,\n      maxCombo: Math.max(state.maxCombo, combo ?? state.combo),\n      judgments: newJudgments,\n    }));\n  },\n\n  setCurrentScene: (scene: GameScene) => set({ currentScene: scene }),\n\n  togglePause: () => set((state) => ({ isPaused: !state.isPaused })),\n\n  setSelectedChart: (chartId: string) => set({ selectedChartId: chartId }),\n\n  setGameMode: (mode: string) => set({ gameMode: mode }),\n\n  loadCharts: async () => {\n    if (get().charts.length > 0) return;\n    const charts = await window.electron.discoverCharts();\n    set({\n      charts,\n      selectedChartId: charts[0]?.id ?? null,\n    });\n  },\n\n  reset: () => set(initialState),\n}));\n\nexport default useGameStore;\n"],"names":[],"mappings":"AAAA,kCAAkC;AAClC;;CAEC;;;;AACD;;AA+BA,MAAM,eAA0B;IAC9B,OAAO;IACP,OAAO;IACP,UAAU;IACV,UAAU;IACV,WAAW;QAAE,MAAM;QAAG,MAAM;QAAG,MAAM;QAAG,MAAM;IAAE;IAChD,cAAc;IACd,UAAU;IACV,QAAQ,EAAE;IACV,iBAAiB;IACjB,UAAU;AACZ;AAEA,MAAM,eAAe,IAAA,kJAAM,IAAc,CAAC,KAAK,MAAQ,CAAC;QACtD,GAAG,YAAY;QAEf,YAAY,CAAC;YACX,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG;YAC5B,MAAM,QAAQ;YAEd,MAAM,eAAe;gBAAE,GAAG,MAAM,SAAS;YAAC;YAC1C,IAAI,YAAY,YAAY,cAAc;gBACxC,YAAY,CAAC,SAAS;YACxB;YAEA,IAAI,CAAC,QAAU,CAAC;oBACd,GAAG,IAAI;oBACP,UAAU,KAAK,GAAG,CAAC,MAAM,QAAQ,EAAE,SAAS,MAAM,KAAK;oBACvD,WAAW;gBACb,CAAC;QACH;QAEA,iBAAiB,CAAC,QAAqB,IAAI;gBAAE,cAAc;YAAM;QAEjE,aAAa,IAAM,IAAI,CAAC,QAAU,CAAC;oBAAE,UAAU,CAAC,MAAM,QAAQ;gBAAC,CAAC;QAEhE,kBAAkB,CAAC,UAAoB,IAAI;gBAAE,iBAAiB;YAAQ;QAEtE,aAAa,CAAC,OAAiB,IAAI;gBAAE,UAAU;YAAK;QAEpD,YAAY;YACV,IAAI,MAAM,MAAM,CAAC,MAAM,GAAG,GAAG;YAC7B,MAAM,SAAS,MAAM,OAAO,QAAQ,CAAC,cAAc;YACnD,IAAI;gBACF;gBACA,iBAAiB,MAAM,CAAC,EAAE,EAAE,MAAM;YACpC;QACF;QAEA,OAAO,IAAM,IAAI;IACnB,CAAC;uCAEc","debugId":null}},
    {"offset": {"line": 393, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/ui/AnimatedSceneBackground.tsx"],"sourcesContent":["// src/renderer/components/ui/AnimatedSceneBackground.tsx\n'use client';\n\nimport React from 'react';\n\nconst AnimatedSceneBackground: React.FC = () => (\n  <div className=\"absolute inset-0 overflow-hidden\">\n    <div className=\"absolute -top-40 -right-40 w-80 h-80 bg-theme-secondary/10 rounded-full blur-3xl animate-pulse\" />\n    <div className=\"absolute -bottom-40 -left-40 w-80 h-80 bg-theme-primary/10 rounded-full blur-3xl animate-pulse delay-1000\" />\n    <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-theme-accent/5 rounded-full blur-3xl animate-pulse delay-500\" />\n  </div>\n);\n\nexport default AnimatedSceneBackground;\n"],"names":[],"mappings":"AAAA,yDAAyD;;;;;;AACzD;;AAIA,MAAM,0BAAoC,kBACxC,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;;;;;0BACf,8OAAC;gBAAI,WAAU;;;;;;0BACf,8OAAC;gBAAI,WAAU;;;;;;;;;;;;uCAIJ","debugId":null}},
    {"offset": {"line": 436, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/scenes/SelectScene.tsx"],"sourcesContent":["// src/renderer/components/scenes/SelectScene.tsx\n'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport BannerImage from '@/components/ui/BannerImage';\nimport useGameStore from '../../store/gameStore';\nimport AnimatedSceneBackground from '../ui/AnimatedSceneBackground';\n\ninterface SelectSceneProps {\n  onBack: () => void;\n  onStartGame: (chart: any) => void;\n}\n\nconst SelectScene: React.FC<SelectSceneProps> = ({ onBack, onStartGame }) => {\n  const { charts, selectedChartId, setSelectedChart, setCurrentScene, loadCharts } = useGameStore();\n  const [selectedDifficultyIndex, setSelectedDifficultyIndex] = useState<number>(0);\n  const [availableDifficulties, setAvailableDifficulties] = useState<string[]>([]);\n\n  useEffect(() => {\n    loadCharts();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); // Only run once on mount to prevent infinite re-renders\n\n  const selectedChart = charts.find((c) => c.id === selectedChartId);\n\n  // Load available difficulties when chart is selected\n  useEffect(() => {\n    console.log('[DIFFICULTY DEBUG] Selected chart:', selectedChart);\n    console.log('[DIFFICULTY DEBUG] Chart path:', selectedChart?.chartPath);\n    console.log('[DIFFICULTY DEBUG] Full chart object:', JSON.stringify(selectedChart, null, 2));\n    \n    if (selectedChart) {\n      // Check if this chart has difficulties (for OSZ charts)\n      const chartWithDifficulties = selectedChart as any;\n      const difficulties = chartWithDifficulties.oszMetadata?.difficulties || chartWithDifficulties.difficulties;\n      console.log('[DIFFICULTY DEBUG] Chart difficulties:', difficulties);\n      \n      if (difficulties && difficulties.length > 1) {\n        const diffNames = difficulties.map((diff: any) => diff.name || `Difficulty ${diff.index + 1}`);\n        console.log('[DIFFICULTY DEBUG] Setting difficulties:', diffNames);\n        setAvailableDifficulties(diffNames);\n        setSelectedDifficultyIndex(0);\n      } else {\n        console.log('[DIFFICULTY DEBUG] No multiple difficulties found, clearing array');\n        setAvailableDifficulties([]);\n        setSelectedDifficultyIndex(0);\n      }\n    } else {\n      console.log('[DIFFICULTY DEBUG] No chart selected, clearing difficulties');\n      setAvailableDifficulties([]);\n      setSelectedDifficultyIndex(0);\n    }\n  }, [selectedChart]);\n\n  const handleStartGame = async () => {\n    if (selectedChart) {\n      try {\n        let pinChart;\n        \n        // OSZ 파일인지 확인 (chartPath가 .osz로 끝나는지)\n        if (selectedChart.chartPath.endsWith('.osz')) {\n          // OSZ 차트를 PinChart로 변환 (선택된 난이도 인덱스 전달)\n          pinChart = await (window as any).electron.convertOszToPinChart(selectedChart, selectedDifficultyIndex);\n        } else {\n          // 기존 JSON 차트를 PinChart로 변환\n          pinChart = await (window as any).electron.loadPinChart(selectedChart.chartPath);\n        }\n        \n        if (pinChart) {\n          onStartGame(pinChart);\n        }\n      } catch (error) {\n        console.error('Failed to load chart:', error);\n      }\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-theme-bg flex flex-col items-center justify-center p-8 text-theme-text-light\">\n      <AnimatedSceneBackground />\n\n      <div className=\"w-full max-w-6xl h-[70vh] bg-black/30 backdrop-blur-lg rounded-2xl shadow-2xl border border-white/10 flex p-8 z-10\">\n        {/* Song List */}\n        <div className=\"w-1/3 pr-6 border-r border-white/10 overflow-y-auto\">\n          <h2 className=\"text-3xl font-black mb-6 text-theme-accent\">SELECT MUSIC</h2>\n          <div className=\"space-y-2\">\n            {charts.map((chart) => (\n              <button\n                key={chart.id}\n                onClick={() => setSelectedChart(chart.id)}\n                className={`w-full text-left p-4 rounded-lg transition-all duration-200 ${\n                  selectedChartId === chart.id\n                    ? 'bg-theme-primary/30 border-l-4 border-theme-primary'\n                    : 'bg-white/5 hover:bg-white/10'\n                }`}\n              >\n                <p className=\"font-bold text-lg\">{chart.title}</p>\n                <p className=\"text-sm text-white/60\">{chart.artist}</p>\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Selected Song Details */}\n        <div className=\"w-2/3 pl-8 flex flex-col justify-between\">\n          {selectedChart ? (\n            <div className=\"flex-grow flex flex-col items-center justify-center text-center\">\n              <div className=\"relative w-full max-w-lg h-48 rounded-lg shadow-lg mb-8 border-2 border-white/20 overflow-hidden\">\n                <BannerImage \n                  bannerPath={selectedChart.bannerPath || ''}\n                  title={selectedChart.title}\n                />\n              </div>\n              <h1 className=\"text-5xl font-extrabold tracking-tight\">{selectedChart.title}</h1>\n              <p className=\"text-2xl text-white/70 mt-2\">{selectedChart.artist}</p>\n              \n              {/* Difficulty Selection UI */}\n              {(() => {\n                console.log('[UI DEBUG] availableDifficulties.length:', availableDifficulties.length);\n                return null;\n              })()}\n              {availableDifficulties.length > 1 && (\n                <div className=\"mt-8 w-full max-w-md\">\n                  <h3 className=\"text-xl font-bold mb-4 text-theme-accent\">Select Difficulty</h3>\n                  <div className=\"grid grid-cols-1 gap-2\">\n                    {availableDifficulties.map((difficulty, index) => (\n                      <button\n                        key={index}\n                        onClick={() => setSelectedDifficultyIndex(index)}\n                        className={`px-4 py-2 rounded-lg text-left transition-all ${\n                          selectedDifficultyIndex === index\n                            ? 'bg-theme-accent text-black font-bold'\n                            : 'bg-white/10 hover:bg-white/20 text-white'\n                        }`}\n                      >\n                        {difficulty}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              )}\n              {/* Debug info */}\n              {availableDifficulties.length <= 1 && (\n                <div className=\"mt-4 text-sm text-white/50\">\n                  Debug: {availableDifficulties.length} difficulties available\n                </div>\n              )}\n            </div>\n          ) : (\n            <div className=\"flex-grow flex items-center justify-center\">\n              <p className=\"text-2xl\">Select a song</p>\n            </div>\n          )}\n\n          \n          <div className=\"flex justify-between items-center\">\n            <button\n            onClick={onBack}\n            className=\"px-6 py-3 bg-theme-secondary text-white rounded-lg hover:bg-theme-secondary/80 transition-colors\"\n          >\n            Back to Menu\n          </button>\n            <button\n              onClick={handleStartGame}\n              disabled={!selectedChart}\n              className=\"px-12 py-4 text-2xl font-bold bg-theme-accent rounded-lg hover:bg-opacity-80 transition-all disabled:bg-gray-600 disabled:cursor-not-allowed transform hover:scale-105\"\n            >\n              GAME START\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SelectScene;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 734, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/lib/gameUtils.ts"],"sourcesContent":["// src/renderer/lib/gameUtils.ts\n\nimport { JudgmentCounts } from '../../shared/types';\n\n/**\n * Calculates the accuracy based on judgment counts.\n * Perfects are worth 100%, Greats are worth 50%.\n * @param judgments - An object containing the counts of each judgment type.\n * @returns The calculated accuracy as a percentage (0-100).\n */\nexport const calculateAccuracy = (judgments: JudgmentCounts): number => {\n  const totalNotes =\n    judgments.KOOL + judgments.COOL + judgments.GOOD + judgments.MISS;\n  if (totalNotes === 0) {\n    return 0;\n  }\n\n  const weightedScore =\n    judgments.KOOL * 1 + judgments.COOL * 0.5 + judgments.GOOD * 0.25;\n  const accuracy = (weightedScore / totalNotes) * 100;\n\n  return parseFloat(accuracy.toFixed(2)); // Return with 2 decimal places\n};\n\n/**\n * Determines the rank based on the accuracy score.\n * @param accuracy - The accuracy percentage.\n * @returns A string representing the rank (e.g., 'S', 'A', 'B').\n */\nexport const getRank = (accuracy: number): string => {\n  if (accuracy >= 98) return 'S';\n  if (accuracy >= 95) return 'A';\n  if (accuracy >= 90) return 'B';\n  if (accuracy >= 80) return 'C';\n  return 'D';\n};\n\n// ------------------------------\n// osu!-style timing utilities\n// ------------------------------\n\n// Clamp a value between [a, b]\nexport function clamp(v: number, a: number, b: number) {\n  return Math.max(a, Math.min(b, v));\n}\n\n// Linear interpolation\nexport function lerp(a: number, b: number, t: number) {\n  return a + (b - a) * t;\n}\n\n// AR -> preempt (ms)\nexport function preemptFromAR(AR: number) {\n  if (AR <= 5) return 1800 - 120 * AR;\n  return 1200 - 150 * (AR - 5);\n}\n\n// OD -> hit windows (ms)\nexport function windowsFromOD(OD: number) {\n  const w300 = 80 - 6 * OD;\n  const w100 = 140 - 8 * OD;\n  const w50 = 200 - 10 * OD;\n  return { w300, w100, w50 };\n}\n\n// Approach ring scale for current frame\nexport function approachScale(\n  nowMs: number,\n  hitTimeMs: number,\n  preemptMs: number,\n  startScale = 2.0\n) {\n  const t = clamp(1 - (hitTimeMs - nowMs) / preemptMs, 0, 1);\n  return lerp(startScale, 1.0, t);\n}\n\n// Hit circle alpha (fade-in over first 40% of preempt)\nexport function hitAlpha(nowMs: number, spawnTimeMs: number, preemptMs: number) {\n  const fadeIn = preemptMs * 0.4;\n  const x = clamp((nowMs - spawnTimeMs) / fadeIn, 0, 1);\n  // smoothstep\n  return x * x * (3 - 2 * x);\n}\n"],"names":[],"mappings":"AAAA,gCAAgC;;;;;;;;;;;;;;;;;;;AAUzB,MAAM,oBAAoB,CAAC;IAChC,MAAM,aACJ,UAAU,IAAI,GAAG,UAAU,IAAI,GAAG,UAAU,IAAI,GAAG,UAAU,IAAI;IACnE,IAAI,eAAe,GAAG;QACpB,OAAO;IACT;IAEA,MAAM,gBACJ,UAAU,IAAI,GAAG,IAAI,UAAU,IAAI,GAAG,MAAM,UAAU,IAAI,GAAG;IAC/D,MAAM,WAAW,AAAC,gBAAgB,aAAc;IAEhD,OAAO,WAAW,SAAS,OAAO,CAAC,KAAK,+BAA+B;AACzE;AAOO,MAAM,UAAU,CAAC;IACtB,IAAI,YAAY,IAAI,OAAO;IAC3B,IAAI,YAAY,IAAI,OAAO;IAC3B,IAAI,YAAY,IAAI,OAAO;IAC3B,IAAI,YAAY,IAAI,OAAO;IAC3B,OAAO;AACT;AAOO,SAAS,MAAM,CAAS,EAAE,CAAS,EAAE,CAAS;IACnD,OAAO,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG;AACjC;AAGO,SAAS,KAAK,CAAS,EAAE,CAAS,EAAE,CAAS;IAClD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI;AACvB;AAGO,SAAS,cAAc,EAAU;IACtC,IAAI,MAAM,GAAG,OAAO,OAAO,MAAM;IACjC,OAAO,OAAO,MAAM,CAAC,KAAK,CAAC;AAC7B;AAGO,SAAS,cAAc,EAAU;IACtC,MAAM,OAAO,KAAK,IAAI;IACtB,MAAM,OAAO,MAAM,IAAI;IACvB,MAAM,MAAM,MAAM,KAAK;IACvB,OAAO;QAAE;QAAM;QAAM;IAAI;AAC3B;AAGO,SAAS,cACd,KAAa,EACb,SAAiB,EACjB,SAAiB,EACjB,aAAa,GAAG;IAEhB,MAAM,IAAI,MAAM,IAAI,CAAC,YAAY,KAAK,IAAI,WAAW,GAAG;IACxD,OAAO,KAAK,YAAY,KAAK;AAC/B;AAGO,SAAS,SAAS,KAAa,EAAE,WAAmB,EAAE,SAAiB;IAC5E,MAAM,SAAS,YAAY;IAC3B,MAAM,IAAI,MAAM,CAAC,QAAQ,WAAW,IAAI,QAAQ,GAAG;IACnD,aAAa;IACb,OAAO,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC;AAC3B","debugId":null}},
    {"offset": {"line": 803, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/game/ScoreSummary.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\n\ninterface ScoreSummaryProps {\n  score: number;\n  maxCombo: number;\n}\n\nconst getRank = (score: number) => {\n  if (score > 950000) return { rank: 'S', color: 'text-theme-highlight' };\n  if (score > 900000) return { rank: 'A', color: 'text-theme-primary' };\n  if (score > 800000) return { rank: 'B', color: 'text-theme-primary/80' };\n  if (score > 700000) return { rank: 'C', color: 'text-theme-text-dark' };\n  return { rank: 'D', color: 'text-theme-accent' };\n};\n\nconst ScoreSummary: React.FC<ScoreSummaryProps> = ({ score, maxCombo }) => {\n  const { rank, color } = getRank(score);\n\n  return (\n    <div className=\"text-center\">\n      <p className=\"text-2xl text-theme-text-dark font-medium mb-2\">FINAL SCORE</p>\n      <p className=\"text-8xl font-black text-transparent bg-gradient-to-r from-theme-primary to-theme-secondary bg-clip-text mb-4\">\n        {score.toLocaleString()}\n      </p>\n      <div className=\"flex justify-center items-baseline gap-8 text-theme-text-light\">\n        <div className=\"text-center\">\n          <p className=\"text-lg text-theme-text-dark\">RANK</p>\n          <p className={`text-5xl font-bold ${color}`}>{rank}</p>\n        </div>\n        <div className=\"text-center\">\n          <p className=\"text-lg text-theme-text-dark\">MAX COMBO</p>\n          <p className=\"text-5xl font-bold\">{maxCombo}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ScoreSummary;\n"],"names":[],"mappings":";;;;;AAAA;;AASA,MAAM,UAAU,CAAC;IACf,IAAI,QAAQ,QAAQ,OAAO;QAAE,MAAM;QAAK,OAAO;IAAuB;IACtE,IAAI,QAAQ,QAAQ,OAAO;QAAE,MAAM;QAAK,OAAO;IAAqB;IACpE,IAAI,QAAQ,QAAQ,OAAO;QAAE,MAAM;QAAK,OAAO;IAAwB;IACvE,IAAI,QAAQ,QAAQ,OAAO;QAAE,MAAM;QAAK,OAAO;IAAuB;IACtE,OAAO;QAAE,MAAM;QAAK,OAAO;IAAoB;AACjD;AAEA,MAAM,eAA4C,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE;IACpE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,QAAQ;IAEhC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAE,WAAU;0BAAiD;;;;;;0BAC9D,8OAAC;gBAAE,WAAU;0BACV,MAAM,cAAc;;;;;;0BAEvB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAE,WAAU;0CAA+B;;;;;;0CAC5C,8OAAC;gCAAE,WAAW,CAAC,mBAAmB,EAAE,OAAO;0CAAG;;;;;;;;;;;;kCAEhD,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAE,WAAU;0CAA+B;;;;;;0CAC5C,8OAAC;gCAAE,WAAU;0CAAsB;;;;;;;;;;;;;;;;;;;;;;;;AAK7C;uCAEe","debugId":null}},
    {"offset": {"line": 924, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/game/JudgmentDetails.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { JudgmentCounts, Judgment } from '../../../shared/types';\n\ninterface JudgmentDetailsProps {\n  judgments: JudgmentCounts;\n}\n\nconst judgmentStyles: Record<Judgment, string> = {\n  KOOL: 'text-theme-highlight',\n  COOL: 'text-theme-primary',\n  GOOD: 'text-green-400',\n  MISS: 'text-theme-accent',\n};\n\nconst JudgmentDetails: React.FC<JudgmentDetailsProps> = ({ judgments }) => {\n  const judgmentOrder: Judgment[] = ['KOOL', 'COOL', 'GOOD', 'MISS'];\n\n  return (\n    <div className=\"grid grid-cols-4 gap-4 text-center\">\n      {judgmentOrder.map((key) => (\n        <div key={key}>\n          <p className={`text-lg ${judgmentStyles[key]} font-bold`}>{key}</p>\n          <p className=\"text-3xl font-semibold text-theme-text-light\">\n            {judgments[key]}\n          </p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default JudgmentDetails;\n"],"names":[],"mappings":";;;;;AAAA;;AASA,MAAM,iBAA2C;IAC/C,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;AACR;AAEA,MAAM,kBAAkD,CAAC,EAAE,SAAS,EAAE;IACpE,MAAM,gBAA4B;QAAC;QAAQ;QAAQ;QAAQ;KAAO;IAElE,qBACE,8OAAC;QAAI,WAAU;kBACZ,cAAc,GAAG,CAAC,CAAC,oBAClB,8OAAC;;kCACC,8OAAC;wBAAE,WAAW,CAAC,QAAQ,EAAE,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC;kCAAG;;;;;;kCAC3D,8OAAC;wBAAE,WAAU;kCACV,SAAS,CAAC,IAAI;;;;;;;eAHT;;;;;;;;;;AASlB;uCAEe","debugId":null}},
    {"offset": {"line": 981, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/game/FinishActions.tsx"],"sourcesContent":["// src/renderer/components/game/FinishActions.tsx\n'use client';\n\nimport React from 'react';\n\ninterface ActionButtonProps {\n  label: string;\n  onClick: () => void;\n  variant: 'primary' | 'secondary';\n}\n\nconst ActionButton: React.FC<ActionButtonProps> = ({ label, onClick, variant }) => {\n  const baseClasses = 'px-8 py-3 rounded-xl transition-all duration-200 font-medium transform hover:scale-105';\n  const styles = {\n    primary: 'bg-theme-primary/20 hover:bg-theme-primary/30 border border-theme-primary/50 text-theme-primary hover:text-theme-primary/90',\n    secondary: 'bg-theme-text-dark/30 hover:bg-theme-text-dark/50 text-theme-text-light/80 hover:text-theme-text-light',\n  };\n  return (\n    <button onClick={onClick} className={`${baseClasses} ${styles[variant]}`}>\n      {label}\n    </button>\n  );\n};\n\ninterface FinishActionsProps {\n  onRestart: () => void;\n  onSelectMusic: () => void;\n}\n\nconst FinishActions: React.FC<FinishActionsProps> = ({ onRestart, onSelectMusic }) => {\n  const actions: ActionButtonProps[] = [\n    { label: 'Retry', onClick: onRestart, variant: 'primary' },\n    { label: 'Back to Menu', onClick: onSelectMusic, variant: 'secondary' },\n  ];\n\n  return (\n    <div className=\"flex justify-center gap-6\">\n      {actions.map((action) => (\n        <ActionButton key={action.label} {...action} />\n      ))}\n    </div>\n  );\n};\n\nexport default FinishActions;\n"],"names":[],"mappings":"AAAA,iDAAiD;;;;;;AACjD;;AAUA,MAAM,eAA4C,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE;IAC5E,MAAM,cAAc;IACpB,MAAM,SAAS;QACb,SAAS;QACT,WAAW;IACb;IACA,qBACE,8OAAC;QAAO,SAAS;QAAS,WAAW,GAAG,YAAY,CAAC,EAAE,MAAM,CAAC,QAAQ,EAAE;kBACrE;;;;;;AAGP;AAOA,MAAM,gBAA8C,CAAC,EAAE,SAAS,EAAE,aAAa,EAAE;IAC/E,MAAM,UAA+B;QACnC;YAAE,OAAO;YAAS,SAAS;YAAW,SAAS;QAAU;QACzD;YAAE,OAAO;YAAgB,SAAS;YAAe,SAAS;QAAY;KACvE;IAED,qBACE,8OAAC;QAAI,WAAU;kBACZ,QAAQ,GAAG,CAAC,CAAC,uBACZ,8OAAC;gBAAiC,GAAG,MAAM;eAAxB,OAAO,KAAK;;;;;;;;;;AAIvC;uCAEe","debugId":null}},
    {"offset": {"line": 1038, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/game/RankDisplay.tsx"],"sourcesContent":["// src/renderer/components/game/RankDisplay.tsx\n'use client';\n\nimport React from 'react';\n\ninterface RankDisplayProps {\n  rank: string;\n}\n\nconst rankColorMap: { [key: string]: string } = {\n  S: 'text-yellow-400',\n  A: 'text-green-400',\n  B: 'text-blue-400',\n  C: 'text-purple-400',\n  D: 'text-gray-500',\n};\n\nconst RankDisplay: React.FC<RankDisplayProps> = ({ rank }) => {\n  const color = rankColorMap[rank] || 'text-gray-500';\n\n  return (\n    <div className=\"flex flex-col items-center\">\n      <p className=\"text-2xl font-semibold text-theme-text-light/80 mb-2\">Rank</p>\n      <div\n        className={`text-9xl font-black ${color} transform-gpu transition-all duration-500`}\n        style={{ filter: `drop-shadow(0 0 20px ${color.replace('text-', 'bg-').split('-')[0]})` }}\n      >\n        {rank}\n      </div>\n    </div>\n  );\n};\n\nexport default RankDisplay;\n"],"names":[],"mappings":"AAAA,+CAA+C;;;;;;AAC/C;;AAQA,MAAM,eAA0C;IAC9C,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;AACL;AAEA,MAAM,cAA0C,CAAC,EAAE,IAAI,EAAE;IACvD,MAAM,QAAQ,YAAY,CAAC,KAAK,IAAI;IAEpC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAE,WAAU;0BAAuD;;;;;;0BACpE,8OAAC;gBACC,WAAW,CAAC,oBAAoB,EAAE,MAAM,0CAA0C,CAAC;gBACnF,OAAO;oBAAE,QAAQ,CAAC,qBAAqB,EAAE,MAAM,OAAO,CAAC,SAAS,OAAO,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;gBAAC;0BAEvF;;;;;;;;;;;;AAIT;uCAEe","debugId":null}},
    {"offset": {"line": 1089, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/game/AccuracyDisplay.tsx"],"sourcesContent":["// src/renderer/components/game/AccuracyDisplay.tsx\n'use client';\n\nimport React from 'react';\nimport { useSpring, animated } from 'react-spring';\n\ninterface AccuracyDisplayProps {\n  accuracy: number;\n}\n\nconst AccuracyDisplay: React.FC<AccuracyDisplayProps> = ({ accuracy }) => {\n  const radius = 60;\n  const circumference = 2 * Math.PI * radius;\n\n  const { val } = useSpring({\n    from: { val: 0 },\n    to: { val: accuracy },\n    config: { duration: 1000 },\n  });\n\n  const { strokeDashoffset } = useSpring({\n    from: { strokeDashoffset: circumference },\n    to: { strokeDashoffset: circumference - (accuracy / 100) * circumference },\n    config: { duration: 1000 },\n  });\n\n  return (\n    <div className=\"flex flex-col items-center\">\n      <p className=\"text-2xl font-semibold text-theme-text-light/80 mb-4\">Accuracy</p>\n      <div className=\"relative w-40 h-40\">\n        <svg className=\"w-full h-full\" viewBox=\"0 0 140 140\">\n          <circle\n            cx=\"70\"\n            cy=\"70\"\n            r={radius}\n            strokeWidth=\"10\"\n            className=\"stroke-current text-theme-text-dark/30\"\n            fill=\"transparent\"\n          />\n          <animated.circle\n            cx=\"70\"\n            cy=\"70\"\n            r={radius}\n            strokeWidth=\"10\"\n            className=\"stroke-current text-theme-accent transform -rotate-90 origin-center\"\n            fill=\"transparent\"\n            strokeDasharray={circumference}\n            strokeDashoffset={strokeDashoffset}\n            strokeLinecap=\"round\"\n          />\n        </svg>\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          <animated.p className=\"text-4xl font-bold text-theme-text-light\">\n            {val.to((v) => `${v.toFixed(2)}%`)}\n          </animated.p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AccuracyDisplay;\n"],"names":[],"mappings":"AAAA,mDAAmD;;;;;;AAInD;AAAA;AAAA;AAHA;;;AASA,MAAM,kBAAkD,CAAC,EAAE,QAAQ,EAAE;IACnE,MAAM,SAAS;IACf,MAAM,gBAAgB,IAAI,KAAK,EAAE,GAAG;IAEpC,MAAM,EAAE,GAAG,EAAE,GAAG,IAAA,iMAAS,EAAC;QACxB,MAAM;YAAE,KAAK;QAAE;QACf,IAAI;YAAE,KAAK;QAAS;QACpB,QAAQ;YAAE,UAAU;QAAK;IAC3B;IAEA,MAAM,EAAE,gBAAgB,EAAE,GAAG,IAAA,iMAAS,EAAC;QACrC,MAAM;YAAE,kBAAkB;QAAc;QACxC,IAAI;YAAE,kBAAkB,gBAAgB,AAAC,WAAW,MAAO;QAAc;QACzE,QAAQ;YAAE,UAAU;QAAK;IAC3B;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAE,WAAU;0BAAuD;;;;;;0BACpE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;wBAAgB,SAAQ;;0CACrC,8OAAC;gCACC,IAAG;gCACH,IAAG;gCACH,GAAG;gCACH,aAAY;gCACZ,WAAU;gCACV,MAAK;;;;;;0CAEP,8OAAC,8LAAQ,CAAC,MAAM;gCACd,IAAG;gCACH,IAAG;gCACH,GAAG;gCACH,aAAY;gCACZ,WAAU;gCACV,MAAK;gCACL,iBAAiB;gCACjB,kBAAkB;gCAClB,eAAc;;;;;;;;;;;;kCAGlB,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,8LAAQ,CAAC,CAAC;4BAAC,WAAU;sCACnB,IAAI,EAAE,CAAC,CAAC,IAAM,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;AAM7C;uCAEe","debugId":null}},
    {"offset": {"line": 1210, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/scenes/FinishScene.tsx"],"sourcesContent":["// src/renderer/components/scenes/FinishScene.tsx\n'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useTransition, animated } from 'react-spring';\nimport useGameStore from '../../store/gameStore';\nimport { calculateAccuracy, getRank } from '../../lib/gameUtils';\n\nimport ScoreSummary from '../game/ScoreSummary';\nimport JudgmentDetails from '../game/JudgmentDetails';\nimport FinishActions from '../game/FinishActions';\nimport RankDisplay from '../game/RankDisplay';\nimport AccuracyDisplay from '../game/AccuracyDisplay';\n\ninterface FinishSceneProps {\n  onBack: () => void;\n}\n\nconst FinishScene: React.FC<FinishSceneProps> = ({ onBack }) => {\n  const { score, maxCombo, judgments, reset, setCurrentScene } = useGameStore();\n\n  const [accuracy, setAccuracy] = useState(0);\n  const [rank, setRank] = useState('');\n\n  useEffect(() => {\n    const acc = calculateAccuracy(judgments);\n    const rnk = getRank(acc);\n    setAccuracy(acc);\n    setRank(rnk);\n  }, [judgments]);\n\n  const handleRestart = () => {\n    reset();\n    setCurrentScene('Game');\n  };\n\n  const handleSelectMusic = () => {\n    reset();\n    setCurrentScene('Select');\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const resultItems: ((style: any) => React.ReactElement)[] = [\n    (style) => <animated.div style={style}><ScoreSummary score={score} maxCombo={maxCombo} /></animated.div>,\n    (style) => <animated.div style={style}><div className=\"w-full h-px bg-theme-text-dark/50\" /></animated.div>,\n    (style) => <animated.div style={style}><div className=\"flex justify-around items-center\"><RankDisplay rank={rank} /><AccuracyDisplay accuracy={accuracy} /></div></animated.div>,\n    (style) => <animated.div style={style}><div className=\"w-full h-px bg-theme-text-dark/50\" /></animated.div>,\n    (style) => <animated.div style={style}><JudgmentDetails judgments={judgments} /></animated.div>,\n    (style) => <animated.div style={style}><div className=\"w-full h-px bg-theme-text-dark/50\" /></animated.div>,\n    (style) => <animated.div style={style}><FinishActions onRestart={handleRestart} onSelectMusic={handleSelectMusic} /></animated.div>,\n  ];\n\n  const transitions = useTransition(resultItems, {\n    from: { opacity: 0, transform: 'translateY(20px)' },\n    enter: { opacity: 1, transform: 'translateY(0px)' },\n    trail: 200, // Staggered animation\n  });\n\n  return (\n    <div className=\"min-h-screen bg-theme-bg flex items-center justify-center p-8\">\n      <div className=\"bg-theme-bg/70 backdrop-blur-xl rounded-3xl p-12 border border-theme-text-dark/50 shadow-2xl max-w-3xl w-full space-y-8\">\n        <button\n          onClick={onBack}\n          className=\"px-6 py-3 bg-theme-secondary text-white rounded-lg hover:bg-theme-secondary/80 transition-colors\"\n        >\n          Back to Menu\n        </button>\n        <h1 className=\"text-6xl font-black text-center bg-clip-text text-transparent bg-gradient-to-b from-theme-accent to-theme-secondary animate-pulse\">\n          GAME CLEAR\n        </h1>\n        {transitions((style, item) => item(style))}\n      </div>\n    </div>\n  );\n};\n\nexport default FinishScene;\n"],"names":[],"mappings":"AAAA,iDAAiD;;;;;;AAGjD;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAXA;;;;;;;;;;;AAiBA,MAAM,cAA0C,CAAC,EAAE,MAAM,EAAE;IACzD,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,eAAe,EAAE,GAAG,IAAA,gJAAY;IAE3E,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAC;IACzC,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,iNAAQ,EAAC;IAEjC,IAAA,kNAAS,EAAC;QACR,MAAM,MAAM,IAAA,wJAAiB,EAAC;QAC9B,MAAM,MAAM,IAAA,8IAAO,EAAC;QACpB,YAAY;QACZ,QAAQ;IACV,GAAG;QAAC;KAAU;IAEd,MAAM,gBAAgB;QACpB;QACA,gBAAgB;IAClB;IAEA,MAAM,oBAAoB;QACxB;QACA,gBAAgB;IAClB;IAEA,8DAA8D;IAC9D,MAAM,cAAsD;QAC1D,CAAC,sBAAU,8OAAC,8LAAQ,CAAC,GAAG;gBAAC,OAAO;0BAAO,cAAA,8OAAC,iKAAY;oBAAC,OAAO;oBAAO,UAAU;;;;;;;;;;;QAC7E,CAAC,sBAAU,8OAAC,8LAAQ,CAAC,GAAG;gBAAC,OAAO;0BAAO,cAAA,8OAAC;oBAAI,WAAU;;;;;;;;;;;QACtD,CAAC,sBAAU,8OAAC,8LAAQ,CAAC,GAAG;gBAAC,OAAO;0BAAO,cAAA,8OAAC;oBAAI,WAAU;;sCAAmC,8OAAC,gKAAW;4BAAC,MAAM;;;;;;sCAAQ,8OAAC,oKAAe;4BAAC,UAAU;;;;;;;;;;;;;;;;;QAC/I,CAAC,sBAAU,8OAAC,8LAAQ,CAAC,GAAG;gBAAC,OAAO;0BAAO,cAAA,8OAAC;oBAAI,WAAU;;;;;;;;;;;QACtD,CAAC,sBAAU,8OAAC,8LAAQ,CAAC,GAAG;gBAAC,OAAO;0BAAO,cAAA,8OAAC,oKAAe;oBAAC,WAAW;;;;;;;;;;;QACnE,CAAC,sBAAU,8OAAC,8LAAQ,CAAC,GAAG;gBAAC,OAAO;0BAAO,cAAA,8OAAC;oBAAI,WAAU;;;;;;;;;;;QACtD,CAAC,sBAAU,8OAAC,8LAAQ,CAAC,GAAG;gBAAC,OAAO;0BAAO,cAAA,8OAAC,kKAAa;oBAAC,WAAW;oBAAe,eAAe;;;;;;;;;;;KAChG;IAED,MAAM,cAAc,IAAA,qMAAa,EAAC,aAAa;QAC7C,MAAM;YAAE,SAAS;YAAG,WAAW;QAAmB;QAClD,OAAO;YAAE,SAAS;YAAG,WAAW;QAAkB;QAClD,OAAO;IACT;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBACC,SAAS;oBACT,WAAU;8BACX;;;;;;8BAGD,8OAAC;oBAAG,WAAU;8BAAoI;;;;;;gBAGjJ,YAAY,CAAC,OAAO,OAAS,KAAK;;;;;;;;;;;;AAI3C;uCAEe","debugId":null}},
    {"offset": {"line": 1428, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/settings/SettingSlider.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\n\ninterface SettingSliderProps {\n  label: string;\n  value: number;\n  min: number;\n  max: number;\n  step: number;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst SettingSlider: React.FC<SettingSliderProps> = ({ label, value, min, max, step, onChange }) => {\n  return (\n    <div className=\"setting-item\">\n      <label htmlFor={label} className=\"text-2xl font-semibold mb-4 flex justify-between items-center\">\n        <span>{label}</span>\n        <span className=\"text-3xl font-bold text-theme-secondary bg-theme-bg/50 px-4 py-1 rounded-lg\">{value}</span>\n      </label>\n      <input\n        type=\"range\"\n        id={label}\n        min={min}\n        max={max}\n        step={step}\n        value={value}\n        onChange={onChange}\n        className=\"w-full h-3 bg-theme-text-light/10 rounded-full appearance-none cursor-pointer range-lg accent-theme-accent focus:outline-none focus:ring-2 focus:ring-theme-secondary focus:ring-opacity-50 transition-all duration-300\"\n      />\n    </div>\n  );\n};\n\nexport default SettingSlider;\n"],"names":[],"mappings":";;;;;AAAA;;AAaA,MAAM,gBAA8C,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE;IAC7F,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAM,SAAS;gBAAO,WAAU;;kCAC/B,8OAAC;kCAAM;;;;;;kCACP,8OAAC;wBAAK,WAAU;kCAA+E;;;;;;;;;;;;0BAEjG,8OAAC;gBACC,MAAK;gBACL,IAAI;gBACJ,KAAK;gBACL,KAAK;gBACL,MAAM;gBACN,OAAO;gBACP,UAAU;gBACV,WAAU;;;;;;;;;;;;AAIlB;uCAEe","debugId":null}},
    {"offset": {"line": 1490, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/settings/DisabledSettingSlider.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\n\ninterface DisabledSettingSliderProps {\n  label: string;\n  value: number | string;\n}\n\nconst DisabledSettingSlider: React.FC<DisabledSettingSliderProps> = ({ label, value }) => {\n  return (\n    <div className=\"opacity-50\">\n      <label className=\"text-2xl font-semibold mb-4 flex justify-between items-center\">\n        <span>{label}</span>\n        <span className=\"text-3xl font-bold text-theme-secondary bg-theme-bg/50 px-4 py-1 rounded-lg\">{value}</span>\n      </label>\n      <input type=\"range\" disabled className=\"w-full h-3 bg-theme-text-light/10 rounded-full appearance-none cursor-not-allowed\" />\n      <p className=\"text-sm text-right mt-2\">Coming Soon</p>\n    </div>\n  );\n};\n\nexport default DisabledSettingSlider;\n"],"names":[],"mappings":";;;;;AAAA;;AASA,MAAM,wBAA8D,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE;IACnF,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAM,WAAU;;kCACf,8OAAC;kCAAM;;;;;;kCACP,8OAAC;wBAAK,WAAU;kCAA+E;;;;;;;;;;;;0BAEjG,8OAAC;gBAAM,MAAK;gBAAQ,QAAQ;gBAAC,WAAU;;;;;;0BACvC,8OAAC;gBAAE,WAAU;0BAA0B;;;;;;;;;;;;AAG7C;uCAEe","debugId":null}},
    {"offset": {"line": 1554, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/scenes/SettingsScene.tsx"],"sourcesContent":["// src/renderer/components/scenes/SettingsScene.tsx\n'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport useGameStore from '../../store/gameStore';\nimport { Settings } from '../../../shared/types';\nimport SettingSlider from '../settings/SettingSlider';\nimport DisabledSettingSlider from '../settings/DisabledSettingSlider';\n\n// Define the structure for each setting configuration\ninterface SettingConfig {\n  id: keyof Settings;\n  label: string;\n  min?: number;\n  max?: number;\n  step?: number;\n  enabled: boolean;\n}\n\n// Centralized settings configuration\nconst settingsConfig: SettingConfig[] = [\n  {\n    id: 'noteSpeed',\n    label: 'Note Speed',\n    min: 100,\n    max: 1000,\n    step: 50,\n    enabled: true,\n  },\n  // Add future settings here, e.g.:\n  // { id: 'masterVolume', label: 'Master Volume', min: 0, max: 100, step: 1, enabled: false },\n];\n\ninterface SettingsSceneProps {\n  onBack: () => void;\n}\n\nconst SettingsScene: React.FC<SettingsSceneProps> = ({ onBack }) => {\n  const setCurrentScene = useGameStore((state) => state.setCurrentScene);\n  const [settings, setSettings] = useState<Partial<Settings>>({});\n\n  // Fetch all settings on component mount\n  useEffect(() => {\n    const fetchAllSettings = async () => {\n      const initialSettings: Partial<Settings> = {};\n      for (const config of settingsConfig) {\n        if (config.enabled) {\n          initialSettings[config.id] = await window.electron.getSetting(config.id);\n        }\n      }\n      setSettings(initialSettings);\n    };\n    fetchAllSettings();\n  }, []);\n\n  // Generic handler for all setting changes\n  const handleSettingChange = (id: keyof Settings, value: number) => {\n    const newSettings = { ...settings, [id]: value };\n    setSettings(newSettings);\n    window.electron.setSetting(id, value);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-theme-bg text-theme-text-light flex flex-col items-center justify-center p-8\">\n      <div className=\"absolute top-8 left-8\">\n        <button\n          onClick={onBack}\n          className=\"px-6 py-3 bg-theme-secondary text-white rounded-lg hover:bg-theme-secondary/80 transition-colors\"\n        >\n          Back to Menu\n        </button>\n      </div>\n\n      <div className=\"w-full max-w-2xl bg-theme-bg/70 backdrop-blur-xl rounded-2xl shadow-2xl p-10 border border-theme-text-dark/50\">\n        <h1 className=\"text-5xl font-bold text-center mb-12 bg-clip-text text-transparent bg-gradient-to-r from-theme-secondary to-theme-accent animate-pulse\">\n          Settings\n        </h1>\n\n        <div className=\"space-y-10\">\n          {settingsConfig.map((config) =>\n            config.enabled ? (\n              <SettingSlider\n                key={config.id}\n                label={config.label}\n                value={settings[config.id] ?? config.min ?? 0}\n                min={config.min ?? 0}\n                max={config.max ?? 100}\n                step={config.step ?? 1}\n                onChange={(e) => handleSettingChange(config.id, parseInt(e.target.value, 10))}\n              />\n            ) : (\n              <DisabledSettingSlider key={config.id} label={config.label} value={100} />\n            )\n          )}\n        </div>\n      </div>\n\n      <p className=\"mt-8 text-sm text-theme-text-dark\">More settings will be available in future updates.</p>\n    </div>\n  );\n};\n\nexport default SettingsScene;\n"],"names":[],"mappings":"AAAA,mDAAmD;;;;;;AAGnD;AACA;AAEA;AACA;AANA;;;;;;AAkBA,qCAAqC;AACrC,MAAM,iBAAkC;IACtC;QACE,IAAI;QACJ,OAAO;QACP,KAAK;QACL,KAAK;QACL,MAAM;QACN,SAAS;IACX;CAGD;AAMD,MAAM,gBAA8C,CAAC,EAAE,MAAM,EAAE;IAC7D,MAAM,kBAAkB,IAAA,gJAAY,EAAC,CAAC,QAAU,MAAM,eAAe;IACrE,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAoB,CAAC;IAE7D,wCAAwC;IACxC,IAAA,kNAAS,EAAC;QACR,MAAM,mBAAmB;YACvB,MAAM,kBAAqC,CAAC;YAC5C,KAAK,MAAM,UAAU,eAAgB;gBACnC,IAAI,OAAO,OAAO,EAAE;oBAClB,eAAe,CAAC,OAAO,EAAE,CAAC,GAAG,MAAM,OAAO,QAAQ,CAAC,UAAU,CAAC,OAAO,EAAE;gBACzE;YACF;YACA,YAAY;QACd;QACA;IACF,GAAG,EAAE;IAEL,0CAA0C;IAC1C,MAAM,sBAAsB,CAAC,IAAoB;QAC/C,MAAM,cAAc;YAAE,GAAG,QAAQ;YAAE,CAAC,GAAG,EAAE;QAAM;QAC/C,YAAY;QACZ,OAAO,QAAQ,CAAC,UAAU,CAAC,IAAI;IACjC;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBACC,SAAS;oBACT,WAAU;8BACX;;;;;;;;;;;0BAKH,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAyI;;;;;;kCAIvJ,8OAAC;wBAAI,WAAU;kCACZ,eAAe,GAAG,CAAC,CAAC,SACnB,OAAO,OAAO,iBACZ,8OAAC,sKAAa;gCAEZ,OAAO,OAAO,KAAK;gCACnB,OAAO,QAAQ,CAAC,OAAO,EAAE,CAAC,IAAI,OAAO,GAAG,IAAI;gCAC5C,KAAK,OAAO,GAAG,IAAI;gCACnB,KAAK,OAAO,GAAG,IAAI;gCACnB,MAAM,OAAO,IAAI,IAAI;gCACrB,UAAU,CAAC,IAAM,oBAAoB,OAAO,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,KAAK,EAAE;+BANpE,OAAO,EAAE;;;;yFAShB,8OAAC,8KAAqB;gCAAiB,OAAO,OAAO,KAAK;gCAAE,OAAO;+BAAvC,OAAO,EAAE;;;;;;;;;;;;;;;;0BAM7C,8OAAC;gBAAE,WAAU;0BAAoC;;;;;;;;;;;;AAGvD;uCAEe","debugId":null}},
    {"offset": {"line": 1688, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/scenes/OszImportScene.tsx"],"sourcesContent":["// src/renderer/components/scenes/OszImportScene.tsx\n'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { PinChart } from '../../../shared/types';\n// OszChart 타입 정의 (main 프로세스 타입을 직접 참조할 수 없으므로 복사)\ninterface OszChart {\n  id: string;\n  title: string;\n  artist: string;\n  creator: string;\n  audioFilename: string;\n  backgroundFilename?: string;\n  difficulties: OszDifficulty[];\n  folderPath: string;\n}\n\ninterface OszDifficulty {\n  name: string;\n  version: string;\n  overallDifficulty: number;\n  approachRate: number;\n  circleSize: number;\n  hpDrainRate: number;\n  filePath: string;\n  noteCount: number;\n}\n\ninterface OszImportSceneProps {\n  onBack: () => void;\n  onChartSelected: (chart: PinChart) => void;\n}\n\nconst OszImportScene: React.FC<OszImportSceneProps> = ({ onBack, onChartSelected }) => {\n  const [library, setLibrary] = useState<OszChart[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [importStatus, setImportStatus] = useState<string>('');\n\n  // 라이브러리 로드\n  useEffect(() => {\n    loadLibrary();\n  }, []);\n\n  const loadLibrary = async () => {\n    try {\n      const charts = await (window as any).electron.getChartLibrary();\n      setLibrary(charts as OszChart[]);\n    } catch (error) {\n      console.error('Failed to load chart library:', error);\n    }\n  };\n\n  // .osz 파일 임포트\n  const handleImportOsz = async () => {\n    try {\n      setIsLoading(true);\n      setImportStatus('파일 선택 중...');\n\n      // 파일 선택 다이얼로그 (Electron의 dialog API 사용)\n      const filePath = await (window as any).electron.selectOszFile();\n\n      if (!filePath) {\n        setImportStatus('');\n        setIsLoading(false);\n        return;\n      }\n\n      setImportStatus('차트 임포트 중...');\n\n      // .osz 파일 임포트\n      await (window as any).electron.importOszFile(filePath);\n      \n      setImportStatus('임포트 완료!');\n      setTimeout(() => setImportStatus(''), 2000);\n\n      // 라이브러리 새로고침\n      await loadLibrary();\n    } catch (error) {\n      console.error('Failed to import .osz file:', error);\n      setImportStatus('임포트 실패: ' + (error as Error).message);\n      setTimeout(() => setImportStatus(''), 3000);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 난이도 선택 및 게임 시작\n  const handleDifficultySelect = async (chart: OszChart, difficultyIndex: number) => {\n    try {\n      setIsLoading(true);\n      setImportStatus('차트 변환 중...');\n\n      const pinChart = await (window as any).electron.convertDifficultyToPinChart(\n        chart,\n        difficultyIndex\n      ) as PinChart;\n\n      onChartSelected(pinChart);\n    } catch (error) {\n      console.error('Failed to convert difficulty:', error);\n      setImportStatus('변환 실패: ' + (error as Error).message);\n      setTimeout(() => setImportStatus(''), 3000);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 차트 삭제\n  const handleRemoveChart = async (chartId: string) => {\n    if (!confirm('이 차트를 삭제하시겠습니까?')) return;\n\n    try {\n      await (window as any).electron.invoke('remove-chart-from-library', chartId);\n      await loadLibrary();\n    } catch (error) {\n      console.error('Failed to remove chart:', error);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-theme-bg-primary text-white p-8\">\n      {/* 헤더 */}\n      <div className=\"flex items-center justify-between mb-8\">\n        <div>\n          <h1 className=\"text-4xl font-bold text-theme-primary mb-2\">\n            .osz 차트 라이브러리\n          </h1>\n          <p className=\"text-theme-text-secondary\">\n            osu! 비트맵(.osz) 파일을 임포트하여 플레이하세요\n          </p>\n        </div>\n        <button\n          onClick={onBack}\n          className=\"px-6 py-3 bg-theme-secondary text-white rounded-lg hover:bg-theme-secondary/80 transition-colors\"\n        >\n          뒤로가기\n        </button>\n      </div>\n\n      {/* 임포트 버튼 및 상태 */}\n      <div className=\"mb-8\">\n        <button\n          onClick={handleImportOsz}\n          disabled={isLoading}\n          className=\"px-8 py-4 bg-theme-primary text-white rounded-lg hover:bg-theme-primary/80 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          {isLoading ? '처리 중...' : '.osz 파일 임포트'}\n        </button>\n        {importStatus && (\n          <p className=\"mt-2 text-theme-accent\">{importStatus}</p>\n        )}\n      </div>\n\n      {/* 차트 라이브러리 */}\n      <div className=\"grid gap-6\">\n        {library.length === 0 ? (\n          <div className=\"text-center py-12\">\n            <p className=\"text-theme-text-secondary text-lg\">\n              임포트된 차트가 없습니다.\n            </p>\n            <p className=\"text-theme-text-secondary mt-2\">\n              .osz 파일을 임포트하여 시작하세요.\n            </p>\n          </div>\n        ) : (\n          library.map((chart) => (\n            <div\n              key={chart.id}\n              className=\"bg-theme-bg-secondary rounded-lg p-6 border border-theme-border\"\n            >\n              {/* 차트 정보 */}\n              <div className=\"flex items-start justify-between mb-4\">\n                <div>\n                  <h3 className=\"text-xl font-bold text-theme-primary\">\n                    {chart.title}\n                  </h3>\n                  <p className=\"text-theme-text-secondary\">\n                    by {chart.artist} • mapped by {chart.creator}\n                  </p>\n                </div>\n                <button\n                  onClick={() => handleRemoveChart(chart.id)}\n                  className=\"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 transition-colors text-sm\"\n                >\n                  삭제\n                </button>\n              </div>\n\n              {/* 난이도 목록 */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3\">\n                {chart.difficulties.map((difficulty, index) => (\n                  <button\n                    key={index}\n                    onClick={() => handleDifficultySelect(chart, index)}\n                    disabled={isLoading}\n                    className=\"p-4 bg-theme-bg-primary rounded-lg border border-theme-border hover:border-theme-primary transition-colors disabled:opacity-50 disabled:cursor-not-allowed text-left\"\n                  >\n                    <div className=\"font-semibold text-theme-primary\">\n                      {difficulty.name}\n                    </div>\n                    <div className=\"text-sm text-theme-text-secondary mt-1\">\n                      OD: {difficulty.overallDifficulty.toFixed(1)} • \n                      AR: {difficulty.approachRate.toFixed(1)}\n                    </div>\n                    <div className=\"text-sm text-theme-text-secondary\">\n                      {difficulty.noteCount} 노트\n                    </div>\n                  </button>\n                ))}\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default OszImportScene;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1987, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/app/page.tsx"],"sourcesContent":["// src/renderer/app/page.tsx\n'use client';\n\nimport React, { useState } from 'react';\nimport useGameStore from '../store/gameStore';\nimport StartScene from '../components/scenes/StartScene';\nimport SelectScene from '../components/scenes/SelectScene';\nimport GameScene from '../components/scenes/GameScene';\nimport FinishScene from '../components/scenes/FinishScene';\nimport SettingsScene from '../components/scenes/SettingsScene';\nimport OszImportScene from '../components/scenes/OszImportScene';\nimport { GameScene as GameSceneType, PinChart } from '../../shared/types';\n\nconst SceneManager: React.FC = () => {\n    const [currentScene, setCurrentScene] = useState<GameSceneType>('Start');\n    const [selectedChart, setSelectedChart] = useState<PinChart | null>(null);\n\n    const handleSceneChange = (scene: GameSceneType) => {\n        setCurrentScene(scene);\n    };\n\n    const handleChartSelected = (chart: PinChart) => {\n        setSelectedChart(chart);\n        setCurrentScene('Game');\n    };\n\n    const renderScene = () => {\n        switch (currentScene) {\n            case 'Start':\n                return <StartScene onNavigate={handleSceneChange} />;\n            case 'Select':\n                return <SelectScene onBack={() => handleSceneChange('Start')} onStartGame={handleChartSelected} />;\n            case 'Game':\n                return selectedChart ? <GameScene selectedChart={selectedChart} onBack={() => handleSceneChange('Select')} /> : <StartScene onNavigate={handleSceneChange} />;\n            case 'Finish':\n                return <FinishScene onBack={() => handleSceneChange('Start')} />;\n            case 'Settings':\n                return <SettingsScene onBack={() => handleSceneChange('Start')} />;\n            case 'OszImport':\n                return <OszImportScene onBack={() => handleSceneChange('Start')} onChartSelected={handleChartSelected} />;\n            default:\n                return <StartScene onNavigate={handleSceneChange} />;\n        }\n    };\n\n    return <div>{renderScene()}</div>;\n};\n\nexport default function HomePage() {\n    return <SceneManager />;\n}"],"names":[],"mappings":"AAAA,4BAA4B;;;;;;AAG5B;AAEA;AACA;AACA;AACA;AACA;AACA;AATA;;;;;;;;;AAYA,MAAM,eAAyB;IAC3B,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,iNAAQ,EAAgB;IAChE,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,iNAAQ,EAAkB;IAEpE,MAAM,oBAAoB,CAAC;QACvB,gBAAgB;IACpB;IAEA,MAAM,sBAAsB,CAAC;QACzB,iBAAiB;QACjB,gBAAgB;IACpB;IAEA,MAAM,cAAc;QAChB,OAAQ;YACJ,KAAK;gBACD,qBAAO,8OAAC,iKAAU;oBAAC,YAAY;;;;;;YACnC,KAAK;gBACD,qBAAO,8OAAC,kKAAW;oBAAC,QAAQ,IAAM,kBAAkB;oBAAU,aAAa;;;;;;YAC/E,KAAK;gBACD,OAAO,8BAAgB,8OAAC,gKAAS;oBAAC,eAAe;oBAAe,QAAQ,IAAM,kBAAkB;;;;;6EAAgB,8OAAC,iKAAU;oBAAC,YAAY;;;;;;YAC5I,KAAK;gBACD,qBAAO,8OAAC,kKAAW;oBAAC,QAAQ,IAAM,kBAAkB;;;;;;YACxD,KAAK;gBACD,qBAAO,8OAAC,oKAAa;oBAAC,QAAQ,IAAM,kBAAkB;;;;;;YAC1D,KAAK;gBACD,qBAAO,8OAAC,qKAAc;oBAAC,QAAQ,IAAM,kBAAkB;oBAAU,iBAAiB;;;;;;YACtF;gBACI,qBAAO,8OAAC,iKAAU;oBAAC,YAAY;;;;;;QACvC;IACJ;IAEA,qBAAO,8OAAC;kBAAK;;;;;;AACjB;AAEe,SAAS;IACpB,qBAAO,8OAAC;;;;;AACZ","debugId":null}}]
}