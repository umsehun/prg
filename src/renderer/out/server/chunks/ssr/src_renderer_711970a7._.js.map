{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/ui/StartSceneBackground.tsx"],"sourcesContent":["// src/renderer/components/ui/StartSceneBackground.tsx\n'use client';\n\nimport React from 'react';\n\nconst StartSceneBackground: React.FC = () => (\n  <div className=\"absolute inset-0 overflow-hidden\">\n    <div className=\"absolute top-0 left-0 w-72 h-72 bg-theme-secondary rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob\"></div>\n    <div className=\"absolute top-0 right-0 w-72 h-72 bg-theme-accent rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-2000\"></div>\n    <div className=\"absolute bottom-0 left-1/4 w-72 h-72 bg-theme-primary rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-4000\"></div>\n  </div>\n);\n\nexport default StartSceneBackground;\n"],"names":[],"mappings":"AAAA,sDAAsD;;;;;;AACtD;;AAIA,MAAM,uBAAiC,kBACrC,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;;;;;0BACf,8OAAC;gBAAI,WAAU;;;;;;0BACf,8OAAC;gBAAI,WAAU;;;;;;;;;;;;uCAIJ","debugId":null}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/ui/StartSceneHeader.tsx"],"sourcesContent":["// src/renderer/components/ui/StartSceneHeader.tsx\n'use client';\n\nimport React from 'react';\n\nconst StartSceneHeader: React.FC = () => (\n  <div className=\"text-center\">\n    <h1 className=\"text-8xl md:text-9xl font-black mb-4 bg-clip-text text-transparent bg-gradient-to-r from-theme-secondary to-theme-accent animate-pulse\">\n      PRG\n    </h1>\n    <p className=\"text-xl md:text-2xl text-theme-text-light/80 mb-12 font-light\">A RHYTHM GAME EXPERIENCE</p>\n  </div>\n);\n\nexport default StartSceneHeader;\n"],"names":[],"mappings":"AAAA,kDAAkD;;;;;;AAClD;;AAIA,MAAM,mBAA6B,kBACjC,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAyI;;;;;;0BAGvJ,8OAAC;gBAAE,WAAU;0BAAgE;;;;;;;;;;;;uCAIlE","debugId":null}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/scenes/StartScene.tsx"],"sourcesContent":["// src/renderer/components/scenes/StartScene.tsx\n'use client';\n\nimport React from 'react';\nimport { GameScene } from '../../../shared/types';\nimport StartSceneBackground from '../ui/StartSceneBackground';\nimport StartSceneHeader from '../ui/StartSceneHeader';\n\ninterface MenuItem {\n  label: string;\n  scene: GameScene;\n}\n\nconst menuItems: MenuItem[] = [\n  { label: 'Start Game', scene: 'Select' },\n  { label: '.osz Import', scene: 'OszImport' },\n  { label: 'Settings', scene: 'Settings' },\n];\n\ninterface StartSceneProps {\n  onNavigate: (scene: GameScene) => void;\n}\n\nconst StartScene: React.FC<StartSceneProps> = ({ onNavigate }) => {\n\n  return (\n    <div className=\"min-h-screen bg-theme-bg text-theme-text-light flex flex-col items-center justify-center p-8 overflow-hidden relative\">\n      <StartSceneBackground />\n\n      <div className=\"relative z-10 flex flex-col items-center justify-center\">\n        <StartSceneHeader />\n\n        <div className=\"space-y-6\">\n          {menuItems.map((item, index) => (\n            <button\n              key={index}\n              onClick={() => onNavigate(item.scene)}\n              className=\"group relative px-12 py-4 bg-theme-primary text-theme-text-light rounded-lg hover:bg-theme-primary/80 transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl\"\n            >\n              {item.label}\n            </button>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StartScene;\n"],"names":[],"mappings":"AAAA,gDAAgD;;;;;;AAKhD;AACA;AALA;;;;AAYA,MAAM,YAAwB;IAC5B;QAAE,OAAO;QAAc,OAAO;IAAS;IACvC;QAAE,OAAO;QAAe,OAAO;IAAY;IAC3C;QAAE,OAAO;QAAY,OAAO;IAAW;CACxC;AAMD,MAAM,aAAwC,CAAC,EAAE,UAAU,EAAE;IAE3D,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,uKAAoB;;;;;0BAErB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,mKAAgB;;;;;kCAEjB,8OAAC;wBAAI,WAAU;kCACZ,UAAU,GAAG,CAAC,CAAC,MAAM,sBACpB,8OAAC;gCAEC,SAAS,IAAM,WAAW,KAAK,KAAK;gCACpC,WAAU;0CAET,KAAK,KAAK;+BAJN;;;;;;;;;;;;;;;;;;;;;;AAWnB;uCAEe","debugId":null}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/lib/AssetLoader.ts"],"sourcesContent":["// src/renderer/lib/AssetLoader.ts\nimport type { IpcApi } from '../../types/ipc';\n\n/**\n * Client-side asset loader that uses Electron IPC to load assets from the main process.\n * This replaces HTTP requests with secure IPC communication.\n */\nexport class AssetLoader {\n  /**\n   * Load an audio asset and create a blob URL for use in the browser.\n   * @param assetPath - Path relative to public/assets (e.g., 'bad-apple/Bad_Apple.ogg')\n   * @returns Promise<string> - Blob URL for the audio file\n   */\n  static async loadAudio(assetPath: string): Promise<string> {\n    try {\n      const electron = (window as unknown as { electron: { loadAsset: (assetPath: string) => Promise<ArrayBuffer> } }).electron;\n      const buffer = await electron.loadAsset(assetPath);\n      const blob = new Blob([buffer], { type: 'audio/ogg' });\n      return URL.createObjectURL(blob);\n    } catch (error) {\n      console.error(`Failed to load audio asset: ${assetPath}`, error);\n      throw new Error(`Failed to load audio: ${assetPath}`);\n    }\n  }\n\n  /**\n   * Load an image asset and create a blob URL for use in the browser.\n   * @param assetPath - Path relative to public/assets (e.g., 'bad-apple/Bad_Apple.png')\n   * @returns Promise<string> - Blob URL for the image file\n   */\n  static async loadImage(assetPath: string): Promise<string> {\n    try {\n      const electron = (window as unknown as { electron: { loadAsset: (assetPath: string) => Promise<ArrayBuffer> } }).electron;\n      const buffer = await electron.loadAsset(assetPath);\n      const blob = new Blob([buffer], { type: 'image/png' });\n      return URL.createObjectURL(blob);\n    } catch (error) {\n      console.error(`Failed to load image asset: ${assetPath}`, error);\n      throw new Error(`Failed to load image: ${assetPath}`);\n    }\n  }\n\n  /**\n   * Check if an asset exists.\n   * @param assetPath - Path relative to public/assets\n   * @returns Promise<boolean> - True if asset exists\n   */\n  static async exists(assetPath: string): Promise<boolean> {\n    try {\n      const electron = (window as unknown as { electron: { assetExists: (assetPath: string) => Promise<boolean> } }).electron;\n      return await electron.assetExists(assetPath);\n    } catch (error) {\n      console.error(`Failed to check asset existence: ${assetPath}`, error);\n      return false;\n    }\n  }\n\n  /**\n   * Clean up blob URLs to prevent memory leaks.\n   * @param blobUrl - The blob URL to revoke\n   */\n  static cleanup(blobUrl: string): void {\n    if (blobUrl.startsWith('blob:')) {\n      URL.revokeObjectURL(blobUrl);\n    }\n  }\n}\n"],"names":[],"mappings":"AAAA,kCAAkC;;;;;AAO3B,MAAM;IACX;;;;GAIC,GACD,aAAa,UAAU,SAAiB,EAAmB;QACzD,IAAI;YACF,MAAM,WAAW,AAAC,OAA+F,QAAQ;YACzH,MAAM,SAAS,MAAM,SAAS,SAAS,CAAC;YACxC,MAAM,OAAO,IAAI,KAAK;gBAAC;aAAO,EAAE;gBAAE,MAAM;YAAY;YACpD,OAAO,IAAI,eAAe,CAAC;QAC7B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,4BAA4B,EAAE,WAAW,EAAE;YAC1D,MAAM,IAAI,MAAM,CAAC,sBAAsB,EAAE,WAAW;QACtD;IACF;IAEA;;;;GAIC,GACD,aAAa,UAAU,SAAiB,EAAmB;QACzD,IAAI;YACF,MAAM,WAAW,AAAC,OAA+F,QAAQ;YACzH,MAAM,SAAS,MAAM,SAAS,SAAS,CAAC;YACxC,MAAM,OAAO,IAAI,KAAK;gBAAC;aAAO,EAAE;gBAAE,MAAM;YAAY;YACpD,OAAO,IAAI,eAAe,CAAC;QAC7B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,4BAA4B,EAAE,WAAW,EAAE;YAC1D,MAAM,IAAI,MAAM,CAAC,sBAAsB,EAAE,WAAW;QACtD;IACF;IAEA;;;;GAIC,GACD,aAAa,OAAO,SAAiB,EAAoB;QACvD,IAAI;YACF,MAAM,WAAW,AAAC,OAA6F,QAAQ;YACvH,OAAO,MAAM,SAAS,WAAW,CAAC;QACpC,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,iCAAiC,EAAE,WAAW,EAAE;YAC/D,OAAO;QACT;IACF;IAEA;;;GAGC,GACD,OAAO,QAAQ,OAAe,EAAQ;QACpC,IAAI,QAAQ,UAAU,CAAC,UAAU;YAC/B,IAAI,eAAe,CAAC;QACtB;IACF;AACF","debugId":null}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/ui/BannerImage.tsx"],"sourcesContent":["// src/renderer/components/ui/BannerImage.tsx\n'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { AssetLoader } from '@/lib/AssetLoader';\n\ninterface BannerImageProps {\n  bannerPath: string;\n  title: string;\n}\n\nconst BannerImage: React.FC<BannerImageProps> = ({ bannerPath, title }) => {\n  const [imageSrc, setImageSrc] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const loadImage = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        \n        // Remove /assets/ prefix if present\n        const assetPath = bannerPath.replace('/assets/', '');\n        const blobUrl = await AssetLoader.loadImage(assetPath);\n        setImageSrc(blobUrl);\n      } catch (err) {\n        console.error(`Failed to load banner image: ${bannerPath}`, err);\n        setError('Failed to load image');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadImage();\n\n    // Cleanup blob URL on unmount\n    return () => {\n      if (imageSrc) {\n        AssetLoader.cleanup(imageSrc);\n      }\n    };\n  }, [bannerPath]);\n\n  if (isLoading) {\n    return (\n      <div className=\"w-full h-full flex items-center justify-center bg-gray-800\">\n        <div className=\"text-white\">Loading...</div>\n      </div>\n    );\n  }\n\n  if (error || !imageSrc) {\n    return (\n      <div className=\"w-full h-full flex items-center justify-center bg-gray-800\">\n        <div className=\"text-white/70\">No Image</div>\n      </div>\n    );\n  }\n\n  return (\n    <img\n      src={imageSrc}\n      alt={title}\n      className=\"w-full h-full object-cover\"\n    />\n  );\n};\n\nexport default BannerImage;\n"],"names":[],"mappings":"AAAA,6CAA6C;;;;;;AAG7C;AACA;AAHA;;;;AAUA,MAAM,cAA0C,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE;IACpE,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAgB;IACxD,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iNAAQ,EAAC;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,iNAAQ,EAAgB;IAElD,IAAA,kNAAS,EAAC;QACR,MAAM,YAAY;YAChB,IAAI;gBACF,aAAa;gBACb,SAAS;gBAET,oCAAoC;gBACpC,MAAM,YAAY,WAAW,OAAO,CAAC,YAAY;gBACjD,MAAM,UAAU,MAAM,oJAAW,CAAC,SAAS,CAAC;gBAC5C,YAAY;YACd,EAAE,OAAO,KAAK;gBACZ,QAAQ,KAAK,CAAC,CAAC,6BAA6B,EAAE,YAAY,EAAE;gBAC5D,SAAS;YACX,SAAU;gBACR,aAAa;YACf;QACF;QAEA;QAEA,8BAA8B;QAC9B,OAAO;YACL,IAAI,UAAU;gBACZ,oJAAW,CAAC,OAAO,CAAC;YACtB;QACF;IACF,GAAG;QAAC;KAAW;IAEf,IAAI,WAAW;QACb,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;0BAAa;;;;;;;;;;;IAGlC;IAEA,IAAI,SAAS,CAAC,UAAU;QACtB,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;0BAAgB;;;;;;;;;;;IAGrC;IAEA,qBACE,8OAAC;QACC,KAAK;QACL,KAAK;QACL,WAAU;;;;;;AAGhB;uCAEe","debugId":null}},
    {"offset": {"line": 323, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/store/gameStore.ts"],"sourcesContent":["// src/renderer/store/gameStore.ts\n/**\n * @file Zustand store for managing the global game state.\n */\nimport { create } from 'zustand';\nimport { GameScene, Judgment, JudgmentCounts, ChartMetadata, GameUpdateArgs } from '../../shared/types';\n\n// Defines the state structure of the game\nexport interface GameState {\n  score: number;\n  combo: number;\n  maxCombo: number;\n  judgment: Judgment | null;\n  judgments: JudgmentCounts;\n  currentScene: GameScene;\n  isPaused: boolean;\n  charts: ChartMetadata[];\n  selectedChartId: string | null;\n  gameMode: string;\n}\n\n// Defines the actions available to modify the state\nexport interface GameActions {\n  updateGame: (data: GameUpdateArgs) => void;\n  setCurrentScene: (scene: GameScene) => void;\n  togglePause: () => void;\n  setSelectedChart: (chartId: string) => void;\n  setGameMode: (mode: string) => void;\n  loadCharts: () => Promise<void>;\n  reset: () => void;\n}\n\n// Combines state and actions into a single type for the store\nexport type GameStore = GameState & GameActions;\n\nconst initialState: GameState = {\n  score: 0,\n  combo: 0,\n  maxCombo: 0,\n  judgment: null,\n  judgments: { KOOL: 0, COOL: 0, GOOD: 0, MISS: 0 },\n  currentScene: 'Start' as GameScene,\n  isPaused: false,\n  charts: [],\n  selectedChartId: null,\n  gameMode: 'pin',\n};\n\nconst useGameStore = create<GameStore>()((set, get) => ({\n  ...initialState,\n\n  updateGame: (data: GameUpdateArgs) => {\n    const { combo, judgment } = data;\n    const state = get();\n\n    const newJudgments = { ...state.judgments };\n    if (judgment && judgment in newJudgments) {\n      newJudgments[judgment]++;\n    }\n\n    set((state) => ({\n      ...data,\n      maxCombo: Math.max(state.maxCombo, combo ?? state.combo),\n      judgments: newJudgments,\n    }));\n  },\n\n  setCurrentScene: (scene: GameScene) => set({ currentScene: scene }),\n\n  togglePause: () => set((state) => ({ isPaused: !state.isPaused })),\n\n  setSelectedChart: (chartId: string) => set({ selectedChartId: chartId }),\n\n  setGameMode: (mode: string) => set({ gameMode: mode }),\n\n  loadCharts: async () => {\n    if (get().charts.length > 0) return;\n    const charts = await window.electron.discoverCharts();\n    set({\n      charts,\n      selectedChartId: charts[0]?.id ?? null,\n    });\n  },\n\n  reset: () => set(initialState),\n}));\n\nexport default useGameStore;\n"],"names":[],"mappings":"AAAA,kCAAkC;AAClC;;CAEC;;;;AACD;;AA+BA,MAAM,eAA0B;IAC9B,OAAO;IACP,OAAO;IACP,UAAU;IACV,UAAU;IACV,WAAW;QAAE,MAAM;QAAG,MAAM;QAAG,MAAM;QAAG,MAAM;IAAE;IAChD,cAAc;IACd,UAAU;IACV,QAAQ,EAAE;IACV,iBAAiB;IACjB,UAAU;AACZ;AAEA,MAAM,eAAe,IAAA,kJAAM,IAAc,CAAC,KAAK,MAAQ,CAAC;QACtD,GAAG,YAAY;QAEf,YAAY,CAAC;YACX,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG;YAC5B,MAAM,QAAQ;YAEd,MAAM,eAAe;gBAAE,GAAG,MAAM,SAAS;YAAC;YAC1C,IAAI,YAAY,YAAY,cAAc;gBACxC,YAAY,CAAC,SAAS;YACxB;YAEA,IAAI,CAAC,QAAU,CAAC;oBACd,GAAG,IAAI;oBACP,UAAU,KAAK,GAAG,CAAC,MAAM,QAAQ,EAAE,SAAS,MAAM,KAAK;oBACvD,WAAW;gBACb,CAAC;QACH;QAEA,iBAAiB,CAAC,QAAqB,IAAI;gBAAE,cAAc;YAAM;QAEjE,aAAa,IAAM,IAAI,CAAC,QAAU,CAAC;oBAAE,UAAU,CAAC,MAAM,QAAQ;gBAAC,CAAC;QAEhE,kBAAkB,CAAC,UAAoB,IAAI;gBAAE,iBAAiB;YAAQ;QAEtE,aAAa,CAAC,OAAiB,IAAI;gBAAE,UAAU;YAAK;QAEpD,YAAY;YACV,IAAI,MAAM,MAAM,CAAC,MAAM,GAAG,GAAG;YAC7B,MAAM,SAAS,MAAM,OAAO,QAAQ,CAAC,cAAc;YACnD,IAAI;gBACF;gBACA,iBAAiB,MAAM,CAAC,EAAE,EAAE,MAAM;YACpC;QACF;QAEA,OAAO,IAAM,IAAI;IACnB,CAAC;uCAEc","debugId":null}},
    {"offset": {"line": 393, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/ui/AnimatedSceneBackground.tsx"],"sourcesContent":["// src/renderer/components/ui/AnimatedSceneBackground.tsx\n'use client';\n\nimport React from 'react';\n\nconst AnimatedSceneBackground: React.FC = () => (\n  <div className=\"absolute inset-0 overflow-hidden\">\n    <div className=\"absolute -top-40 -right-40 w-80 h-80 bg-theme-secondary/10 rounded-full blur-3xl animate-pulse\" />\n    <div className=\"absolute -bottom-40 -left-40 w-80 h-80 bg-theme-primary/10 rounded-full blur-3xl animate-pulse delay-1000\" />\n    <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-theme-accent/5 rounded-full blur-3xl animate-pulse delay-500\" />\n  </div>\n);\n\nexport default AnimatedSceneBackground;\n"],"names":[],"mappings":"AAAA,yDAAyD;;;;;;AACzD;;AAIA,MAAM,0BAAoC,kBACxC,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;;;;;0BACf,8OAAC;gBAAI,WAAU;;;;;;0BACf,8OAAC;gBAAI,WAAU;;;;;;;;;;;;uCAIJ","debugId":null}},
    {"offset": {"line": 436, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/scenes/SelectScene.tsx"],"sourcesContent":["// src/renderer/components/scenes/SelectScene.tsx\n'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport BannerImage from '@/components/ui/BannerImage';\nimport useGameStore from '../../store/gameStore';\nimport AnimatedSceneBackground from '../ui/AnimatedSceneBackground';\n\ninterface SelectSceneProps {\n  onBack: () => void;\n  onStartGame: (chart: any) => void;\n}\n\nconst SelectScene: React.FC<SelectSceneProps> = ({ onBack, onStartGame }) => {\n  const { charts, selectedChartId, setSelectedChart, setCurrentScene, loadCharts } = useGameStore();\n  const [selectedDifficultyIndex, setSelectedDifficultyIndex] = useState<number>(0);\n  const [availableDifficulties, setAvailableDifficulties] = useState<string[]>([]);\n  const [isImporting, setIsImporting] = useState<boolean>(false);\n\n  // Auto-import OSZ files when component mounts\n  useEffect(() => {\n    const autoImportOszFiles = async () => {\n      try {\n        setIsImporting(true);\n        console.log('[SelectScene] Starting auto-import of OSZ files...');\n\n        const result = await (window as any).electron.importAllOszFiles();\n\n        if (result.imported > 0) {\n          console.log(`[SelectScene] Auto-imported ${result.imported} new charts`);\n          // Reload charts to show newly imported ones\n          await loadCharts();\n        } else if (result.skipped > 0) {\n          console.log(`[SelectScene] ${result.skipped} charts already existed`);\n        }\n\n        if (result.errors.length > 0) {\n          console.warn('[SelectScene] Some charts failed to import:', result.errors);\n        }\n\n      } catch (error) {\n        console.error('[SelectScene] Failed to auto-import OSZ files:', error);\n      } finally {\n        setIsImporting(false);\n      }\n    };\n\n    // Start auto-import, then load existing charts\n    autoImportOszFiles().then(() => {\n      if (!isImporting) {\n        loadCharts();\n      }\n    });\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); // Only run once on mount to prevent infinite re-renders\n\n  const selectedChart = charts.find((c) => c.id === selectedChartId);\n\n  // Load available difficulties when chart is selected\n  useEffect(() => {\n    console.log('[DIFFICULTY DEBUG] Selected chart:', selectedChart);\n    console.log('[DIFFICULTY DEBUG] Chart path:', selectedChart?.chartPath);\n    console.log('[DIFFICULTY DEBUG] Full chart object:', JSON.stringify(selectedChart, null, 2));\n\n    if (selectedChart) {\n      // Check if this chart has difficulties (for OSZ charts)\n      const chartWithDifficulties = selectedChart as any;\n      const difficulties = chartWithDifficulties.oszMetadata?.difficulties || chartWithDifficulties.difficulties;\n      console.log('[DIFFICULTY DEBUG] Chart difficulties:', difficulties);\n\n      if (difficulties && difficulties.length > 1) {\n        const diffNames = difficulties.map((diff: any) => diff.name || `Difficulty ${diff.index + 1}`);\n        console.log('[DIFFICULTY DEBUG] Setting difficulties:', diffNames);\n        setAvailableDifficulties(diffNames);\n        setSelectedDifficultyIndex(0);\n      } else {\n        console.log('[DIFFICULTY DEBUG] No multiple difficulties found, clearing array');\n        setAvailableDifficulties([]);\n        setSelectedDifficultyIndex(0);\n      }\n    } else {\n      console.log('[DIFFICULTY DEBUG] No chart selected, clearing difficulties');\n      setAvailableDifficulties([]);\n      setSelectedDifficultyIndex(0);\n    }\n  }, [selectedChart]);\n\n  const handleStartGame = async () => {\n    if (selectedChart) {\n      try {\n        let pinChart;\n\n        // OSZ 파일인지 확인 (chartPath가 .osz로 끝나는지)\n        if (selectedChart.chartPath.endsWith('.osz')) {\n          // OSZ 차트를 PinChart로 변환 (선택된 난이도 인덱스 전달)\n          pinChart = await (window as any).electron.convertOszToPinChart(selectedChart, selectedDifficultyIndex);\n        } else {\n          // 기존 JSON 차트를 PinChart로 변환\n          pinChart = await (window as any).electron.loadPinChart(selectedChart.chartPath);\n        }\n\n        if (pinChart) {\n          onStartGame(pinChart);\n        }\n      } catch (error) {\n        console.error('Failed to load chart:', error);\n      }\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen cyber-bg-animated flex flex-col items-center justify-center p-4 text-white\">\n      <AnimatedSceneBackground />\n\n      <div className=\"w-full max-w-7xl h-[85vh] game-card flex p-6 z-10 gap-6\">\n        {/* Song List - Fixed Height with Proper Scrolling */}\n        <div className=\"w-1/3 flex flex-col\">\n          <h2 className=\"text-3xl font-black mb-4 neon-glow-cyan\" style={{ color: 'var(--neon-cyan)' }}>\n            SELECT MUSIC\n            {isImporting && (\n              <span className=\"text-sm font-normal text-yellow-400 ml-3\">\n                (Importing OSZ files...)\n              </span>\n            )}\n          </h2>\n          <div className=\"flex-1 overflow-y-auto pr-2 space-y-2 max-h-[calc(85vh-120px)]\">\n            {isImporting && charts.length === 0 ? (\n              <div className=\"text-center py-8\">\n                <p className=\"text-gray-400\">Loading charts...</p>\n                <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-cyan-400 mx-auto mt-4\"></div>\n              </div>\n            ) : (\n              charts.map((chart) => (\n                <button\n                  key={chart.id}\n                  onClick={() => setSelectedChart(chart.id)}\n                  className={`w-full text-left p-4 rounded-lg transition-all duration-300 transform hover:scale-102 ${selectedChartId === chart.id\n                    ? 'neon-glow-magenta border-2'\n                    : 'bg-white/10 hover:bg-white/20 border border-transparent hover:border-cyan-400'\n                    }`}\n                  style={{\n                    backgroundColor: selectedChartId === chart.id ? 'rgba(255, 0, 255, 0.2)' : undefined,\n                    borderColor: selectedChartId === chart.id ? 'var(--neon-magenta)' : undefined\n                  }}\n                >\n                  <p className=\"font-bold text-lg truncate\" style={{\n                    color: selectedChartId === chart.id ? 'var(--neon-magenta)' : 'white'\n                  }}>{chart.title}</p>\n                  <p className=\"text-sm text-gray-400 truncate\">{chart.artist}</p>\n                </button>\n              ))\n            )}\n          </div>\n        </div>\n\n        {/* Selected Song Details - Improved Layout */}\n        <div className=\"w-2/3 flex flex-col justify-between\">\n          {selectedChart ? (\n            <div className=\"flex-grow flex flex-col items-center justify-center text-center px-4\">\n              <div className=\"relative w-full max-w-lg h-48 rounded-xl shadow-2xl mb-6 border-2 neon-glow-green overflow-hidden\"\n                style={{ borderColor: 'var(--neon-green)' }}>\n                <BannerImage\n                  bannerPath={selectedChart.bannerPath || ''}\n                  title={selectedChart.title}\n                />\n              </div>\n              <h1 className=\"text-4xl font-extrabold tracking-tight mb-2 neon-glow-pulse\"\n                style={{ color: 'var(--neon-cyan)' }}>{selectedChart.title}</h1>\n              <p className=\"text-xl text-gray-300 mb-6\" style={{ color: 'var(--neon-yellow)' }}>{selectedChart.artist}</p>\n\n              {/* Difficulty Selection UI - Fixed Overflow */}\n              {availableDifficulties.length > 1 && (\n                <div className=\"w-full max-w-md\">\n                  <h3 className=\"text-xl font-bold mb-4 neon-glow-green\" style={{ color: 'var(--neon-green)' }}>\n                    Select Difficulty\n                  </h3>\n                  <div className=\"max-h-32 overflow-y-auto space-y-2 p-2 rounded-lg bg-black/20\">\n                    {availableDifficulties.map((difficulty, index) => (\n                      <button\n                        key={index}\n                        onClick={() => setSelectedDifficultyIndex(index)}\n                        className={`w-full px-4 py-2 rounded-lg text-left transition-all duration-300 transform hover:scale-105 ${selectedDifficultyIndex === index\n                          ? 'neon-glow-yellow font-bold'\n                          : 'bg-white/10 hover:bg-white/20 text-white hover:neon-glow-cyan'\n                          }`}\n                        style={{\n                          backgroundColor: selectedDifficultyIndex === index ? 'rgba(255, 255, 0, 0.2)' : undefined,\n                          color: selectedDifficultyIndex === index ? 'var(--neon-yellow)' : undefined\n                        }}\n                      >\n                        {difficulty}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          ) : (\n            <div className=\"flex-grow flex items-center justify-center\">\n              <p className=\"text-2xl text-gray-400\">Select a song to begin</p>\n            </div>\n          )}\n\n          {/* Action Buttons */}\n          <div className=\"flex justify-between items-center mt-6\">\n            <button\n              onClick={onBack}\n              className=\"game-button\"\n              style={{ borderColor: 'var(--neon-red)', boxShadow: '0 0 10px var(--neon-red)' }}\n            >\n              ← Back to Menu\n            </button>\n            <button\n              onClick={handleStartGame}\n              disabled={!selectedChart}\n              className={`px-12 py-4 text-2xl font-bold rounded-lg transition-all duration-300 transform ${selectedChart\n                ? 'game-button hover:scale-105 neon-glow-pulse'\n                : 'bg-gray-600 cursor-not-allowed text-gray-400'\n                }`}\n              style={selectedChart ? {\n                borderColor: 'var(--neon-green)',\n                boxShadow: '0 0 20px var(--neon-green)',\n                color: 'var(--neon-green)'\n              } : {}}\n            >\n              GAME START\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SelectScene;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 811, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/hooks/useKnifePhysics.ts"],"sourcesContent":["import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport interface Knife {\n    id: number;\n    isStuck: boolean;\n    stuckAngle: number;\n    thrownAt: number;\n    position: KnifePosition;\n}\n\nexport interface KnifePosition {\n    x: number;\n    y: number;\n    rotation: number;\n}\n\ninterface UseKnifePhysicsProps {\n    targetRadius: number;\n    velocity: number;\n    rotationSpeed: number;\n    isGameActive: boolean;\n}\n\nexport const useKnifePhysics = ({\n    targetRadius,\n    velocity = 400,\n    rotationSpeed = 540,\n    isGameActive\n}: UseKnifePhysicsProps) => {\n    const [knives, setKnives] = useState<Knife[]>([]);\n    const workerRef = useRef<Worker | null>(null);\n    const knifeIdCounter = useRef(0);\n    const hitCallbackRef = useRef<((hitData: any) => void) | null>(null);\n\n    useEffect(() => {\n        console.log('[useKnifePhysics] Initializing physics worker...');\n        try {\n            const worker = new Worker(new URL('./physics.worker.ts', import.meta.url));\n            workerRef.current = worker;\n\n            console.log('[useKnifePhysics] Worker created, sending INIT message');\n            worker.postMessage({ type: 'INIT', payload: { targetRadius, velocity, rotationSpeed } });\n\n            worker.onmessage = (e: MessageEvent) => {\n                const { type, payload } = e.data;\n                console.log('[useKnifePhysics] Worker message:', type, payload);\n                if (type === 'UPDATE') {\n                    setKnives(payload.knives);\n                } else if (type === 'HIT') {\n                    console.log('[useKnifePhysics] Hit detected:', payload);\n                    if (hitCallbackRef.current) {\n                        hitCallbackRef.current(payload);\n                    }\n                }\n            };\n\n            worker.onerror = (error) => {\n                console.error('[useKnifePhysics] Worker error:', error);\n            };\n\n            return () => {\n                console.log('[useKnifePhysics] Terminating worker');\n                worker.terminate();\n            };\n        } catch (error) {\n            console.error('[useKnifePhysics] Failed to create worker:', error);\n        }\n    }, [targetRadius, velocity, rotationSpeed]);\n\n    // 칼 던지기\n    const throwKnife = useCallback(() => {\n        console.log('[useKnifePhysics] throwKnife called, isGameActive:', isGameActive, 'worker:', !!workerRef.current);\n        if (!isGameActive || !workerRef.current) {\n            console.log('[useKnifePhysics] Cannot throw knife - game inactive or no worker');\n            return;\n        }\n\n        const newKnife: Knife = {\n            id: knifeIdCounter.current++,\n            isStuck: false,\n            stuckAngle: 0,\n            thrownAt: Date.now(),\n            position: { x: 0, y: 250, rotation: 0 } // Initial position\n        };\n\n        console.log('[useKnifePhysics] Throwing knife:', newKnife);\n        workerRef.current.postMessage({ type: 'THROW', payload: { knife: newKnife } });\n    }, [isGameActive]);\n\n    // 모든 칼 위치 계산 (워커로부터 받은 데이터를 그대로 사용)\n    const getKnivesPositions = useCallback(() => {\n        return knives.map(knife => ({\n            knife,\n            position: knife.position // 워커가 계산한 위치 정보 사용\n        }));\n    }, [knives]);\n\n    // 판정 콜백 설정\n    const setHitCallback = useCallback((callback: (hitData: any) => void) => {\n        hitCallbackRef.current = callback;\n    }, []);\n\n    // 노트 데이터 설정 (판정을 위해 필요)\n    const setActiveNotes = useCallback((notes: Array<{ time: number }>) => {\n        console.log('[useKnifePhysics] Setting active notes:', notes.length);\n        if (workerRef.current) {\n            workerRef.current.postMessage({ type: 'SET_NOTES', payload: { notes } });\n        }\n    }, []);\n\n    // 판정 윈도우 설정\n    const setJudgmentWindows = useCallback((windows: { KOOL: number; COOL: number; GOOD: number; MISS: number }) => {\n        console.log('[useKnifePhysics] Setting judgment windows:', windows);\n        if (workerRef.current) {\n            workerRef.current.postMessage({ type: 'SET_JUDGMENT_WINDOWS', payload: { windows } });\n        }\n    }, []);\n\n    // 게임 시간 업데이트 (오디오 서비스 기준)\n    const updateGameTime = useCallback((gameTimeMs: number) => {\n        if (workerRef.current) {\n            workerRef.current.postMessage({ type: 'UPDATE_GAME_TIME', payload: { gameTime: gameTimeMs } });\n        }\n    }, []);\n\n    // 게임 리셋\n    const resetKnives = useCallback(() => {\n        if (workerRef.current) {\n            workerRef.current.postMessage({ type: 'RESET' });\n        }\n        setKnives([]);\n        knifeIdCounter.current = 0;\n    }, []);\n\n    // 꽂힌 칼 개수\n    const stuckKnivesCount = knives.filter(knife => knife.isStuck).length;\n\n    return {\n        knives,\n        throwKnife,\n        getKnivesPositions,\n        resetKnives,\n        stuckKnivesCount,\n        setHitCallback,\n        setActiveNotes,\n        setJudgmentWindows,\n        updateGameTime\n    };\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 972, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/game/ApproachCircle.tsx"],"sourcesContent":["// src/renderer/components/game/ApproachCircle.tsx\n'use client';\nimport React from 'react';\n\ninterface ApproachCircleProps {\n  radius: number; // base hit circle radius (px)\n  scale: number;  // 2.0 -> 1.0 shrink\n  opacity: number; // 0..1\n}\n\nconst ApproachCircle: React.FC<ApproachCircleProps> = ({ radius, scale, opacity }) => {\n  const size = radius * 2 * scale;\n\n  return (\n    <div\n      className=\"absolute rounded-full border-4 border-white/80 pointer-events-none\"\n      style={{\n        width: `${size}px`,\n        height: `${size}px`,\n        left: '50%',\n        top: '50%',\n        transform: 'translate(-50%, -50%)',\n        opacity,\n        boxShadow: '0 0 16px rgba(255,255,255,0.35)',\n        transition: 'all 0.1s linear', // Smooth shrinking animation\n        borderColor: scale > 1.2 ? 'rgba(255, 255, 255, 0.4)' :\n          scale > 1.05 ? 'rgba(255, 255, 255, 0.6)' :\n            'rgba(255, 255, 255, 0.9)' // Color intensity based on timing\n      }}\n    />\n  );\n};\n\nexport default ApproachCircle;\n"],"names":[],"mappings":"AAAA,kDAAkD;;;;;;AAClD;;AASA,MAAM,iBAAgD,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE;IAC/E,MAAM,OAAO,SAAS,IAAI;IAE1B,qBACE,8OAAC;QACC,WAAU;QACV,OAAO;YACL,OAAO,GAAG,KAAK,EAAE,CAAC;YAClB,QAAQ,GAAG,KAAK,EAAE,CAAC;YACnB,MAAM;YACN,KAAK;YACL,WAAW;YACX;YACA,WAAW;YACX,YAAY;YACZ,aAAa,QAAQ,MAAM,6BACzB,QAAQ,OAAO,6BACb,2BAA2B,kCAAkC;QACnE;;;;;;AAGN;uCAEe","debugId":null}},
    {"offset": {"line": 1006, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/game/AccuracyDisplay.tsx"],"sourcesContent":["// src/renderer/components/game/AccuracyDisplay.tsx\n'use client';\n\nimport React from 'react';\nimport { useSpring, animated } from 'react-spring';\n\ninterface AccuracyDisplayProps {\n  accuracy: number;\n}\n\nconst AccuracyDisplay: React.FC<AccuracyDisplayProps> = ({ accuracy }) => {\n  const radius = 60;\n  const circumference = 2 * Math.PI * radius;\n\n  const { val } = useSpring({\n    from: { val: 0 },\n    to: { val: accuracy },\n    config: { duration: 1000 },\n  });\n\n  const { strokeDashoffset } = useSpring({\n    from: { strokeDashoffset: circumference },\n    to: { strokeDashoffset: circumference - (accuracy / 100) * circumference },\n    config: { duration: 1000 },\n  });\n\n  return (\n    <div className=\"flex flex-col items-center\">\n      <p className=\"text-2xl font-semibold text-theme-text-light/80 mb-4\">Accuracy</p>\n      <div className=\"relative w-40 h-40\">\n        <svg className=\"w-full h-full\" viewBox=\"0 0 140 140\">\n          <circle\n            cx=\"70\"\n            cy=\"70\"\n            r={radius}\n            strokeWidth=\"10\"\n            className=\"stroke-current text-theme-text-dark/30\"\n            fill=\"transparent\"\n          />\n          <animated.circle\n            cx=\"70\"\n            cy=\"70\"\n            r={radius}\n            strokeWidth=\"10\"\n            className=\"stroke-current text-theme-accent transform -rotate-90 origin-center\"\n            fill=\"transparent\"\n            strokeDasharray={circumference}\n            strokeDashoffset={strokeDashoffset}\n            strokeLinecap=\"round\"\n          />\n        </svg>\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          <animated.p className=\"text-4xl font-bold text-theme-text-light\">\n            {val.to((v) => `${v.toFixed(2)}%`)}\n          </animated.p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AccuracyDisplay;\n"],"names":[],"mappings":"AAAA,mDAAmD;;;;;;AAInD;AAAA;AAAA;AAHA;;;AASA,MAAM,kBAAkD,CAAC,EAAE,QAAQ,EAAE;IACnE,MAAM,SAAS;IACf,MAAM,gBAAgB,IAAI,KAAK,EAAE,GAAG;IAEpC,MAAM,EAAE,GAAG,EAAE,GAAG,IAAA,iMAAS,EAAC;QACxB,MAAM;YAAE,KAAK;QAAE;QACf,IAAI;YAAE,KAAK;QAAS;QACpB,QAAQ;YAAE,UAAU;QAAK;IAC3B;IAEA,MAAM,EAAE,gBAAgB,EAAE,GAAG,IAAA,iMAAS,EAAC;QACrC,MAAM;YAAE,kBAAkB;QAAc;QACxC,IAAI;YAAE,kBAAkB,gBAAgB,AAAC,WAAW,MAAO;QAAc;QACzE,QAAQ;YAAE,UAAU;QAAK;IAC3B;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAE,WAAU;0BAAuD;;;;;;0BACpE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;wBAAgB,SAAQ;;0CACrC,8OAAC;gCACC,IAAG;gCACH,IAAG;gCACH,GAAG;gCACH,aAAY;gCACZ,WAAU;gCACV,MAAK;;;;;;0CAEP,8OAAC,8LAAQ,CAAC,MAAM;gCACd,IAAG;gCACH,IAAG;gCACH,GAAG;gCACH,aAAY;gCACZ,WAAU;gCACV,MAAK;gCACL,iBAAiB;gCACjB,kBAAkB;gCAClB,eAAc;;;;;;;;;;;;kCAGlB,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,8LAAQ,CAAC,CAAC;4BAAC,WAAU;sCACnB,IAAI,EAAE,CAAC,CAAC,IAAM,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;AAM7C;uCAEe","debugId":null}},
    {"offset": {"line": 1127, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/game/JudgmentDisplay.tsx"],"sourcesContent":["// src/renderer/components/game/JudgmentDisplay.tsx\n'use client';\n\nimport React from 'react';\nimport { useTransition, animated } from '@react-spring/web';\nimport { Judgment } from '../../../shared/types';\n\ninterface JudgmentDisplayProps {\n  judgment: Judgment | null;\n}\n\nconst JUDGMENT_STYLES: Record<Judgment, { color: string; shadow: string }> = {\n  KOOL: { color: '#00ffff', shadow: '0 0 20px #00ffff' },\n  COOL: { color: '#0099ff', shadow: '0 0 15px #0099ff' },\n  GOOD: { color: '#00ff00', shadow: '0 0 10px #00ff00' },\n  MISS: { color: '#ff0000', shadow: '0 0 10px #ff0000' },\n};\n\nconst JudgmentDisplay: React.FC<JudgmentDisplayProps> = ({ judgment }) => {\n  const judgmentArray = judgment ? [judgment] : [];\n\n  const transitions = useTransition(judgmentArray, {\n    from: { opacity: 0, transform: 'scale(0.5) translateY(50px)' },\n    enter: { opacity: 1, transform: 'scale(1) translateY(0px)' },\n    leave: { opacity: 0, transform: 'scale(0.5) translateY(-50px)' },\n    config: { tension: 280, friction: 20 },\n    keys: (item: Judgment) => `${item}-${Date.now()}`,\n  });\n\n  return (\n    <div className=\"absolute top-2/3 left-1/2 -translate-x-1/2 -translate-y-1/2 z-30 pointer-events-none\">\n      {transitions((style, item) => (\n        <animated.div\n          style={style}\n          className=\"text-7xl font-black uppercase tracking-widest\"\n        >\n          <span style={{ color: JUDGMENT_STYLES[item].color, textShadow: JUDGMENT_STYLES[item].shadow }}>\n            {item}\n          </span>\n        </animated.div>\n      ))}\n    </div>\n  );\n};\n\nexport default JudgmentDisplay;\n"],"names":[],"mappings":"AAAA,mDAAmD;;;;;;AAInD;AAAA;AAHA;;;AAUA,MAAM,kBAAuE;IAC3E,MAAM;QAAE,OAAO;QAAW,QAAQ;IAAmB;IACrD,MAAM;QAAE,OAAO;QAAW,QAAQ;IAAmB;IACrD,MAAM;QAAE,OAAO;QAAW,QAAQ;IAAmB;IACrD,MAAM;QAAE,OAAO;QAAW,QAAQ;IAAmB;AACvD;AAEA,MAAM,kBAAkD,CAAC,EAAE,QAAQ,EAAE;IACnE,MAAM,gBAAgB,WAAW;QAAC;KAAS,GAAG,EAAE;IAEhD,MAAM,cAAc,IAAA,qMAAa,EAAC,eAAe;QAC/C,MAAM;YAAE,SAAS;YAAG,WAAW;QAA8B;QAC7D,OAAO;YAAE,SAAS;YAAG,WAAW;QAA2B;QAC3D,OAAO;YAAE,SAAS;YAAG,WAAW;QAA+B;QAC/D,QAAQ;YAAE,SAAS;YAAK,UAAU;QAAG;QACrC,MAAM,CAAC,OAAmB,GAAG,KAAK,CAAC,EAAE,KAAK,GAAG,IAAI;IACnD;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACZ,YAAY,CAAC,OAAO,qBACnB,8OAAC,8MAAQ,CAAC,GAAG;gBACX,OAAO;gBACP,WAAU;0BAEV,cAAA,8OAAC;oBAAK,OAAO;wBAAE,OAAO,eAAe,CAAC,KAAK,CAAC,KAAK;wBAAE,YAAY,eAAe,CAAC,KAAK,CAAC,MAAM;oBAAC;8BACzF;;;;;;;;;;;;;;;;AAMb;uCAEe","debugId":null}},
    {"offset": {"line": 1211, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/lib/AudioService.ts"],"sourcesContent":["/**\n * @file Manages audio playback using the Web Audio API for precise timing.\n */\n\nexport class AudioService {\n  private static instance: AudioService;\n  private audioContext: AudioContext | null = null;\n  private currentSource: AudioBufferSourceNode | null = null;\n  private currentBuffer: AudioBuffer | null = null;\n  private startTime: number = 0;\n  private pauseTime: number = 0;\n  private isPlaying: boolean = false;\n  private isPaused: boolean = false;\n  private volume: number = 1.0;\n  private gainNode: GainNode | null = null;\n\n  // Multi-channel audio support\n  private hitsoundSources: Map<string, AudioBufferSourceNode> = new Map();\n  private hitsoundBuffers: Map<string, AudioBuffer> = new Map();\n  private hitsoundGainNode: GainNode | null = null;\n  private endedListeners: Set<() => void> = new Set();\n\n  private constructor() {\n    if (typeof window !== 'undefined') {\n      this.audioContext = new window.AudioContext();\n      this.setupGainNodes();\n    }\n  }\n\n  public static getInstance(): AudioService {\n    if (!AudioService.instance) {\n      AudioService.instance = new AudioService();\n    }\n    return AudioService.instance;\n  }\n\n  /**\n   * Converts incoming data from IPC into a usable ArrayBuffer.\n   * This handles cases where the ArrayBuffer is serialized during transit.\n   * @param data The data received from the main process.\n   * @returns A valid ArrayBuffer.\n   */\n  private _toArrayBuffer(data: any): ArrayBuffer {\n    if (data instanceof ArrayBuffer) {\n      return data;\n    }\n    // Electron's IPC can serialize Buffers into Uint8Arrays\n    if (data instanceof Uint8Array) {\n      // If it's a view of a larger buffer, we might need to copy\n      // Build a Uint8Array view for the requested range\n      const view = new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n      // If the underlying buffer is already a plain ArrayBuffer and the view covers the whole buffer, return it directly\n      if (view.byteOffset === 0 && view.byteLength === view.buffer.byteLength && view.buffer instanceof ArrayBuffer) {\n        return view.buffer as ArrayBuffer;\n      }\n      // Otherwise create a copy via slice() which returns a new Uint8Array backed by an ArrayBuffer\n      return view.slice().buffer;\n    }\n    // Handle the { type: 'Buffer', data: [...] } serialization format\n    if (data && data.type === 'Buffer' && Array.isArray(data.data)) {\n      return new Uint8Array(data.data).buffer;\n    }\n    throw new Error(`Received invalid data type for audio asset: ${typeof data}`);\n  }\n\n  private setupGainNodes(): void {\n    if (!this.audioContext) return;\n\n    this.gainNode = this.audioContext.createGain();\n    this.gainNode.connect(this.audioContext.destination);\n\n    this.hitsoundGainNode = this.audioContext.createGain();\n    this.hitsoundGainNode.connect(this.audioContext.destination);\n  }\n\n  /**\n   * Load audio from asset path using Electron IPC\n   */\n  public async loadAudio(audioPath: string): Promise<void> {\n    if (!this.audioContext) {\n      throw new Error('AudioContext not initialized');\n    }\n\n    try {\n      const rawData = await (window as any).electron.loadAsset(audioPath);\n      const arrayBuffer = this._toArrayBuffer(rawData);\n      this.currentBuffer = await this.audioContext.decodeAudioData(arrayBuffer);\n    } catch (error) {\n      console.error('Failed to load audio:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Load hitsound from asset path\n   */\n  public async loadHitsound(soundName: string, audioPath: string): Promise<void> {\n    if (this.hitsoundBuffers.has(soundName) || !audioPath) {\n      return;\n    }\n    try {\n      console.log(`[AudioService] Loading hitsound '${soundName}' from: ${audioPath}`);\n\n      // Use IPC to load audio asset - consistent with other asset loading\n      const audioBuffer = await (window as any).electron.loadAsset(audioPath);\n      const arrayBuffer = audioBuffer.buffer.slice(\n        audioBuffer.byteOffset,\n        audioBuffer.byteOffset + audioBuffer.byteLength\n      );\n\n      // Try to decode audio data, but handle failures gracefully\n      try {\n        const buffer = await this.audioContext!.decodeAudioData(arrayBuffer);\n        this.hitsoundBuffers.set(soundName, buffer);\n        console.log(`[AudioService] Successfully loaded hitsound '${soundName}'`);\n      } catch (decodeError) {\n        console.warn(`[AudioService] Failed to decode audio data for hitsound '${soundName}':`, decodeError);\n        console.warn(`[AudioService] This is likely due to invalid or corrupted audio file format. Skipping this hitsound.`);\n        // Don't throw - just skip this hitsound and continue\n        return;\n      }\n    } catch (error) {\n      console.error(`[AudioService] FAILED to load hitsound ${soundName} from ${audioPath}:`, error);\n      // Don't throw - let the game continue without this hitsound\n    }\n  }\n\n  /**\n   * Play the loaded audio\n   */\n  public play(startOffset: number = 0): void {\n    if (!this.audioContext || !this.currentBuffer || !this.gainNode) {\n      console.warn('Cannot play: AudioContext, buffer, or gain node not available');\n      return;\n    }\n\n    this.stop(); // Stop any currently playing audio\n\n    this.currentSource = this.audioContext.createBufferSource();\n    this.currentSource.buffer = this.currentBuffer;\n    this.currentSource.connect(this.gainNode);\n\n    this.startTime = this.audioContext.currentTime;\n    this.pauseTime = 0;\n    this.isPlaying = true;\n    this.isPaused = false;\n\n    // Add ended listener\n    this.currentSource.onended = () => {\n      this.isPlaying = false;\n      this.isPaused = false;\n      this.endedListeners.forEach(listener => listener());\n    };\n\n    this.currentSource.start(0, startOffset);\n  }\n\n  /**\n   * Pause the audio\n   */\n  public pause(): void {\n    if (this.currentSource && this.isPlaying && !this.isPaused) {\n      this.currentSource.stop();\n      this.pauseTime = this.getCurrentTime();\n      this.isPlaying = false;\n      this.isPaused = true;\n    }\n  }\n\n  /**\n   * Resume the paused audio\n   */\n  public resume(): void {\n    if (this.isPaused && this.pauseTime > 0) {\n      this.play(this.pauseTime);\n    }\n  }\n\n  /**\n   * Stop the audio\n   */\n  public stop(): void {\n    if (this.currentSource) {\n      this.currentSource.stop();\n      this.currentSource = null;\n    }\n    this.isPlaying = false;\n    this.isPaused = false;\n    this.startTime = 0;\n    this.pauseTime = 0;\n  }\n\n  /**\n   * Play a hitsound\n   */\n  public playHitsound(soundName: string, volume: number = 1.0): void {\n    if (!this.audioContext || !this.hitsoundGainNode) return;\n\n    const buffer = this.hitsoundBuffers.get(soundName);\n    if (!buffer) {\n      console.warn(`Hitsound not found: ${soundName}`);\n      return;\n    }\n\n    const source = this.audioContext.createBufferSource();\n    const gainNode = this.audioContext.createGain();\n\n    source.buffer = buffer;\n    gainNode.gain.value = volume;\n\n    source.connect(gainNode);\n    gainNode.connect(this.hitsoundGainNode);\n\n    source.start();\n\n    // Clean up after playback\n    source.onended = () => {\n      source.disconnect();\n      gainNode.disconnect();\n    };\n  }\n\n  /**\n   * Get current playback time in seconds\n   */\n  public getCurrentTime(): number {\n    if (!this.audioContext) return 0;\n\n    if (this.isPaused) {\n      return this.pauseTime;\n    }\n\n    if (this.isPlaying && this.startTime > 0) {\n      return this.audioContext.currentTime - this.startTime;\n    }\n\n    return 0;\n  }\n\n  /**\n   * Get total duration of loaded audio\n   */\n  public getDuration(): number {\n    return this.currentBuffer ? this.currentBuffer.duration : 0;\n  }\n\n  /**\n   * Set volume (0.0 to 1.0)\n   */\n  public setVolume(volume: number): void {\n    this.volume = Math.max(0, Math.min(1, volume));\n    if (this.gainNode) {\n      this.gainNode.gain.value = this.volume;\n    }\n  }\n\n  /**\n   * Set hitsound volume (0.0 to 1.0)\n   */\n  public setHitsoundVolume(volume: number): void {\n    if (this.hitsoundGainNode) {\n      this.hitsoundGainNode.gain.value = Math.max(0, Math.min(1, volume));\n    }\n  }\n\n  /**\n   * Check if audio is currently playing\n   */\n  public getIsPlaying(): boolean {\n    return this.isPlaying;\n  }\n\n  /**\n   * Check if audio is paused\n   */\n  public getIsPaused(): boolean {\n    return this.isPaused;\n  }\n\n  /**\n   * Add listener for when audio ends\n   */\n  public onEnded(callback: () => void): () => void {\n    this.endedListeners.add(callback);\n    return () => this.endedListeners.delete(callback);\n  }\n\n  /**\n   * Seek to specific time\n   */\n  public seekTo(time: number): void {\n    if (this.isPlaying) {\n      this.play(time);\n    } else {\n      this.pauseTime = time;\n    }\n  }\n}\n\n// Export singleton instance\nexport const audioService = AudioService.getInstance();\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1458, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/game/PinGameView.tsx"],"sourcesContent":["// src/renderer/components/game/PinGameView.tsx - 정리된 버전\n'use client';\n\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { useKnifePhysics } from '../../hooks/useKnifePhysics';\nimport ApproachCircle from './ApproachCircle';\nimport AccuracyDisplay from './AccuracyDisplay';\nimport JudgmentDisplay from './JudgmentDisplay';\nimport { Note, Judgment, PinChart } from '../../../shared/types';\nimport { audioService } from '../../lib/AudioService';\n\ninterface PinGameViewProps {\n  chart: PinChart;\n  onPinThrow: (judgment: Judgment) => void;\n  score: number;\n  combo: number;\n  judgment: Judgment | null;\n  noteSpeed: number;\n}\n\ninterface ApproachCircleData {\n  id: string;\n  noteTime: number;\n  startTime: number;\n  scale: number;\n}\n\nconst PinGameView: React.FC<PinGameViewProps> = ({\n  chart,\n  onPinThrow,\n  score,\n  combo,\n  judgment,\n  noteSpeed\n}) => {\n  console.log('[PinGameView] Component mounted with chart:', chart?.title);\n\n  // Game state\n  const [approachCircles, setApproachCircles] = useState<ApproachCircleData[]>([]);\n  const [isThrowingKnife, setIsThrowingKnife] = useState(false);\n  const timeMsRef = useRef(0);\n\n  // Physics system\n  const {\n    knives,\n    throwKnife: physicsThrowKnife,\n    getKnivesPositions,\n    setHitCallback,\n    setActiveNotes,\n    setJudgmentWindows,\n    updateGameTime\n  } = useKnifePhysics({\n    targetRadius: 80,\n    velocity: 400,\n    rotationSpeed: 540,\n    isGameActive: true\n  });\n\n  // Constants for approach circles\n  const APPROACH_TIME = 2000; // ms for circle to shrink\n  const TARGET_RADIUS = 80;\n\n  // Update game time and sync with physics worker\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const currentGameTime = audioService.getCurrentTime() * 1000;\n      timeMsRef.current = currentGameTime;\n      // Send current game time to physics worker for accurate judgment\n      updateGameTime(currentGameTime);\n    }, 16);\n    return () => clearInterval(interval);\n  }, [updateGameTime]);\n\n  // Initialize physics system with chart notes\n  useEffect(() => {\n    if (chart?.notes) {\n      console.log('[PinGameView] Setting active notes for physics:', chart.notes.length);\n      // Convert chart notes to physics format (time in milliseconds)\n      const physicsNotes = chart.notes.map(note => ({\n        time: note.time * 1000 // Convert to milliseconds\n      }));\n      setActiveNotes(physicsNotes);\n\n      // Calculate dynamic judgment windows based on chart difficulty\n      const OD = chart.metadata?.overallDifficulty ?? 5;\n\n      // Calculate OD-based windows (using osu! standard formula)\n      const w300 = 80 - 6 * OD; // KOOL window\n      const w100 = 140 - 8 * OD; // COOL window  \n      const w50 = 200 - 10 * OD; // GOOD window\n      const wMiss = Math.max(w50 + 40, w100 + 20); // MISS window\n\n      const judgmentWindows = {\n        KOOL: Math.max(w300, 15), // minimum 15ms\n        COOL: Math.max(w100, 50), // minimum 50ms\n        GOOD: Math.max(w50, 100), // minimum 100ms\n        MISS: Math.max(wMiss, 150) // minimum 150ms\n      };\n\n      console.log('[PinGameView] Setting judgment windows:', judgmentWindows);\n\n      // Send judgment windows to physics worker\n      setJudgmentWindows(judgmentWindows);\n    }\n  }, [chart, setActiveNotes, setJudgmentWindows]);\n\n  // Handle physics hit callback\n  useEffect(() => {\n    const handleHit = (hitData: any) => {\n      console.log('[PinGameView] Physics hit:', hitData);\n      // hitData now contains: { hitTime, timingError, judgment, noteId, accuracy }\n      if (hitData.judgment) {\n        onPinThrow(hitData.judgment);\n      }\n    };\n\n    setHitCallback(handleHit);\n  }, [setHitCallback, onPinThrow]);\n\n  // Generate approach circles for upcoming notes\n  useEffect(() => {\n    if (!chart?.notes) {\n      console.log('[PinGameView] No chart or notes available for approach circles');\n      return;\n    }\n\n    console.log('[PinGameView] Setting up approach circles for', chart.notes.length, 'notes');\n\n    const interval = setInterval(() => {\n      const currentTime = timeMsRef.current;\n\n      // Find notes that should have approach circles\n      const upcomingNotes = chart.notes.filter(note => {\n        const noteTimeMs = note.time * 1000;\n        const timeUntilNote = noteTimeMs - currentTime;\n        return timeUntilNote > 0 && timeUntilNote <= APPROACH_TIME;\n      });\n\n      // Debug: Log first few notes and timing\n      if (chart?.notes && chart.notes.length > 0 && Math.floor(currentTime / 1000) % 5 === 0) {\n        console.log('[PinGameView] Current time:', currentTime, 'First note time:', chart.notes[0]?.time * 1000, 'Upcoming notes:', upcomingNotes.length);\n      }\n\n      // Create approach circles for new notes\n      const newCircles: ApproachCircleData[] = upcomingNotes.map(note => {\n        const noteTimeMs = note.time * 1000;\n        const timeUntilNote = noteTimeMs - currentTime;\n        const scale = Math.max(0.1, timeUntilNote / APPROACH_TIME);\n\n        return {\n          id: `circle-${note.time}`,\n          noteTime: noteTimeMs,\n          startTime: currentTime - (APPROACH_TIME - timeUntilNote),\n          scale\n        };\n      });\n\n      setApproachCircles(newCircles);\n    }, 100);\n\n    return () => clearInterval(interval);\n  }, [chart, APPROACH_TIME]);\n\n  // Handle knife throwing\n  const handleThrowKnife = useCallback(() => {\n    if (isThrowingKnife) return;\n\n    console.log('[PinGameView] Throwing knife at time:', timeMsRef.current);\n    console.log('[PinGameView] Current knives before throw:', knives?.length || 0);\n    setIsThrowingKnife(true);\n    physicsThrowKnife();\n\n    // Reset throwing state\n    setTimeout(() => setIsThrowingKnife(false), 150);\n  }, [isThrowingKnife, physicsThrowKnife, knives]);\n\n  // Keyboard input\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.code === 'KeyS' && !isThrowingKnife) {\n        handleThrowKnife();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [handleThrowKnife, isThrowingKnife]);\n\n  // Get knife positions for rendering\n  const knifePositions = getKnivesPositions();\n\n  // Debug logging\n  console.log('[PinGameView] Knives:', knives?.length || 0, 'KnifePositions:', knifePositions?.length || 0);\n  if (knifePositions?.length > 0) {\n    console.log('[PinGameView] First knife position:', knifePositions[0]);\n  }\n\n  return (\n    <div className=\"min-h-screen relative overflow-hidden flex flex-col items-center justify-center\" style={{ zIndex: 10 }}>\n      {/* Game area - centered container */}\n      <div className=\"relative flex items-center justify-center\" style={{ width: '100vw', height: '100vh', zIndex: 10 }}>\n\n        {/* Target container - absolute positioned center */}\n        <div\n          className=\"absolute flex items-center justify-center\"\n          style={{\n            left: '50%',\n            top: '50%',\n            transform: 'translate(-50%, -50%)',\n            width: `${TARGET_RADIUS * 2}px`,\n            height: `${TARGET_RADIUS * 2}px`\n          }}\n        >\n          {/* Rotating target */}\n          <div\n            className=\"w-full h-full rounded-full border-4 border-white flex items-center justify-center\"\n            style={{\n              animation: 'spin 5s linear infinite'\n            }}\n          >\n            <div className=\"text-white text-lg font-bold\">TARGET</div>\n          </div>\n        </div>\n\n        {/* Approach circles - same positioning as target */}\n        {approachCircles.map(circle => (\n          <ApproachCircle\n            key={circle.id}\n            radius={TARGET_RADIUS}\n            scale={circle.scale}\n            opacity={Math.max(0.3, circle.scale)}\n          />\n        ))}\n\n        {/* Knives - positioned relative to center */}\n        {knifePositions.map(({ knife, position }) => (\n          <div\n            key={knife.id}\n            className=\"absolute\"\n            style={{\n              left: '50%',\n              top: '50%',\n              transform: `translate(-50%, -50%) translate(${position.x}px, ${position.y}px) rotate(${position.rotation}deg)`,\n              transformOrigin: 'center center'\n            }}\n          >\n            {/* Knife blade (triangular tip) */}\n            <div\n              className=\"absolute bg-gradient-to-r from-gray-300 to-gray-100\"\n              style={{\n                width: '0',\n                height: '0',\n                borderLeft: '6px solid transparent',\n                borderRight: '6px solid transparent',\n                borderBottom: '20px solid #e5e7eb',\n                top: '-20px',\n                left: '-6px',\n                boxShadow: '0 2px 4px rgba(0,0,0,0.3)'\n              }}\n            />\n            {/* Knife handle */}\n            <div\n              className=\"bg-gradient-to-r from-amber-800 to-amber-600\"\n              style={{\n                width: '12px',\n                height: '40px',\n                borderRadius: '2px',\n                boxShadow: 'inset 0 1px 2px rgba(0,0,0,0.2), 0 2px 4px rgba(0,0,0,0.3)',\n                transform: 'translateX(-6px)'\n              }}\n            />\n          </div>\n        ))}\n      </div>\n\n      {/* UI Elements */}\n      <div className=\"absolute top-4 left-4 text-white text-lg\">\n        <div>Score: {score}</div>\n        <div>Combo: {combo}</div>\n        <div>Knives: {knives.length}</div>\n      </div>\n\n      {/* Judgment Display */}\n      <JudgmentDisplay judgment={judgment} />\n\n      {/* Accuracy Display */}\n      <div className=\"absolute top-4 left-1/2 transform -translate-x-1/2\">\n        <AccuracyDisplay accuracy={Math.min(100, Math.max(0, (score / Math.max(1, (score + combo * 10))) * 100))} />\n      </div>\n\n      {/* Instructions */}\n      <div className=\"absolute bottom-4 left-4 text-white text-sm\">\n        Press S to throw knife\n      </div>\n\n      {/* Simple debug info */}\n      <div className=\"absolute top-4 right-4 bg-black/50 text-white p-2 text-sm rounded\">\n        <div>Chart: {chart?.title}</div>\n        <div>Notes: {chart?.notes?.length || 0}</div>\n        <div>Time: {(timeMsRef.current / 1000).toFixed(1)}s</div>\n        <div>Circles: {approachCircles.length}</div>\n      </div>\n\n      {/* CSS for spinning animation */}\n      <style jsx>{`\n        @keyframes spin {\n          from { transform: rotate(0deg); }\n          to { transform: rotate(360deg); }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default PinGameView;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1873, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/lib/gameUtils.ts"],"sourcesContent":["// src/renderer/lib/gameUtils.ts\n\nimport { JudgmentCounts } from '../../shared/types';\n\n/**\n * Calculates the accuracy based on judgment counts.\n * Perfects are worth 100%, Greats are worth 50%.\n * @param judgments - An object containing the counts of each judgment type.\n * @returns The calculated accuracy as a percentage (0-100).\n */\nexport const calculateAccuracy = (judgments: JudgmentCounts): number => {\n  const totalNotes =\n    judgments.KOOL + judgments.COOL + judgments.GOOD + judgments.MISS;\n  if (totalNotes === 0) {\n    return 0;\n  }\n\n  const weightedScore =\n    judgments.KOOL * 1 + judgments.COOL * 0.5 + judgments.GOOD * 0.25;\n  const accuracy = (weightedScore / totalNotes) * 100;\n\n  return parseFloat(accuracy.toFixed(2)); // Return with 2 decimal places\n};\n\n/**\n * Determines the rank based on the accuracy score.\n * @param accuracy - The accuracy percentage.\n * @returns A string representing the rank (e.g., 'S', 'A', 'B').\n */\nexport const getRank = (accuracy: number): string => {\n  if (accuracy >= 98) return 'S';\n  if (accuracy >= 95) return 'A';\n  if (accuracy >= 90) return 'B';\n  if (accuracy >= 80) return 'C';\n  return 'D';\n};\n\n// ------------------------------\n// osu!-style timing utilities\n// ------------------------------\n\n// Clamp a value between [a, b]\nexport function clamp(v: number, a: number, b: number) {\n  return Math.max(a, Math.min(b, v));\n}\n\n// Linear interpolation\nexport function lerp(a: number, b: number, t: number) {\n  return a + (b - a) * t;\n}\n\n// AR -> preempt (ms)\nexport function preemptFromAR(AR: number) {\n  if (AR <= 5) return 1800 - 120 * AR;\n  return 1200 - 150 * (AR - 5);\n}\n\n// OD -> hit windows (ms)\nexport function windowsFromOD(OD: number) {\n  const w300 = 80 - 6 * OD;\n  const w100 = 140 - 8 * OD;\n  const w50 = 200 - 10 * OD;\n  return { w300, w100, w50 };\n}\n\n// Approach ring scale for current frame\nexport function approachScale(\n  nowMs: number,\n  hitTimeMs: number,\n  preemptMs: number,\n  startScale = 2.0\n) {\n  const t = clamp(1 - (hitTimeMs - nowMs) / preemptMs, 0, 1);\n  return lerp(startScale, 1.0, t);\n}\n\n// Hit circle alpha (fade-in over first 40% of preempt)\nexport function hitAlpha(nowMs: number, spawnTimeMs: number, preemptMs: number) {\n  const fadeIn = preemptMs * 0.4;\n  const x = clamp((nowMs - spawnTimeMs) / fadeIn, 0, 1);\n  // smoothstep\n  return x * x * (3 - 2 * x);\n}\n"],"names":[],"mappings":"AAAA,gCAAgC;;;;;;;;;;;;;;;;;;;AAUzB,MAAM,oBAAoB,CAAC;IAChC,MAAM,aACJ,UAAU,IAAI,GAAG,UAAU,IAAI,GAAG,UAAU,IAAI,GAAG,UAAU,IAAI;IACnE,IAAI,eAAe,GAAG;QACpB,OAAO;IACT;IAEA,MAAM,gBACJ,UAAU,IAAI,GAAG,IAAI,UAAU,IAAI,GAAG,MAAM,UAAU,IAAI,GAAG;IAC/D,MAAM,WAAW,AAAC,gBAAgB,aAAc;IAEhD,OAAO,WAAW,SAAS,OAAO,CAAC,KAAK,+BAA+B;AACzE;AAOO,MAAM,UAAU,CAAC;IACtB,IAAI,YAAY,IAAI,OAAO;IAC3B,IAAI,YAAY,IAAI,OAAO;IAC3B,IAAI,YAAY,IAAI,OAAO;IAC3B,IAAI,YAAY,IAAI,OAAO;IAC3B,OAAO;AACT;AAOO,SAAS,MAAM,CAAS,EAAE,CAAS,EAAE,CAAS;IACnD,OAAO,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG;AACjC;AAGO,SAAS,KAAK,CAAS,EAAE,CAAS,EAAE,CAAS;IAClD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI;AACvB;AAGO,SAAS,cAAc,EAAU;IACtC,IAAI,MAAM,GAAG,OAAO,OAAO,MAAM;IACjC,OAAO,OAAO,MAAM,CAAC,KAAK,CAAC;AAC7B;AAGO,SAAS,cAAc,EAAU;IACtC,MAAM,OAAO,KAAK,IAAI;IACtB,MAAM,OAAO,MAAM,IAAI;IACvB,MAAM,MAAM,MAAM,KAAK;IACvB,OAAO;QAAE;QAAM;QAAM;IAAI;AAC3B;AAGO,SAAS,cACd,KAAa,EACb,SAAiB,EACjB,SAAiB,EACjB,aAAa,GAAG;IAEhB,MAAM,IAAI,MAAM,IAAI,CAAC,YAAY,KAAK,IAAI,WAAW,GAAG;IACxD,OAAO,KAAK,YAAY,KAAK;AAC/B;AAGO,SAAS,SAAS,KAAa,EAAE,WAAmB,EAAE,SAAiB;IAC5E,MAAM,SAAS,YAAY;IAC3B,MAAM,IAAI,MAAM,CAAC,QAAQ,WAAW,IAAI,QAAQ,GAAG;IACnD,aAAa;IACb,OAAO,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC;AAC3B","debugId":null}},
    {"offset": {"line": 1942, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/game/HitErrorBar.tsx"],"sourcesContent":["// src/renderer/components/game/HitErrorBar.tsx\n'use client';\n\nimport React from 'react';\n\ninterface HitErrorBarProps {\n  hitErrors: number[]; // Array of recent hit errors in milliseconds (-ve for early, +ve for late)\n  maxErrorMs: number; // The window for KOOL judgment, defines the bar's scale\n}\n\nconst HitErrorBar: React.FC<HitErrorBarProps> = ({ hitErrors, maxErrorMs }) => {\n  // Calculate the average error for the center line\n  const avgError = hitErrors.length > 0\n    ? hitErrors.reduce((a, b) => a + b, 0) / hitErrors.length\n    : 0;\n\n  const centerLinePosition = `${50 + (avgError / maxErrorMs) * 50}%`;\n\n  return (\n    <div className=\"absolute bottom-12 left-1/2 -translate-x-1/2 w-72 h-4 bg-transparent flex items-center justify-center pointer-events-none\">\n      {/* Bar Background */}\n      <div className=\"w-full h-1 bg-black/30 rounded-full overflow-hidden\">\n        {/* Ticks for KOOL, COOL, GOOD ranges */}\n        <div className=\"absolute w-full h-full flex justify-between items-center\">\n          <div className=\"w-[3px] h-[3px] bg-cyan-400 rounded-full\" />\n          <div className=\"w-[3px] h-[3px] bg-green-400 rounded-full\" />\n          <div className=\"w-[3px] h-[3px] bg-yellow-400 rounded-full\" />\n        </div>\n      </div>\n\n      {/* Individual Hit Markers */}\n      <div className=\"absolute w-full h-full\">\n        {hitErrors.map((error, i) => {\n          const position = `${50 + (error / maxErrorMs) * 50}%`;\n          return (\n            <div\n              key={i}\n              className=\"absolute top-1/2 -translate-y-1/2 w-1 h-3 bg-white/80 rounded-full shadow-lg transition-all duration-300 ease-out\"\n              style={{ left: position, opacity: 1 - (hitErrors.length - 1 - i) * 0.1 }}\n            />\n          );\n        })}\n      </div>\n\n      {/* Center Line (Perfect Hit) */}\n      <div className=\"absolute top-0 bottom-0 left-1/2 -translate-x-1/2 w-0.5 bg-cyan-300 shadow-lg\" />\n\n      {/* Average Hit Line */}\n      <div\n        className=\"absolute top-0 bottom-0 w-0.5 bg-yellow-300 transition-all duration-200 ease-in-out\"\n        style={{ left: centerLinePosition }}\n      />\n    </div>\n  );\n};\n\nexport default HitErrorBar;\n"],"names":[],"mappings":"AAAA,+CAA+C;;;;;;AAC/C;;AASA,MAAM,cAA0C,CAAC,EAAE,SAAS,EAAE,UAAU,EAAE;IACxE,kDAAkD;IAClD,MAAM,WAAW,UAAU,MAAM,GAAG,IAChC,UAAU,MAAM,CAAC,CAAC,GAAG,IAAM,IAAI,GAAG,KAAK,UAAU,MAAM,GACvD;IAEJ,MAAM,qBAAqB,GAAG,KAAK,AAAC,WAAW,aAAc,GAAG,CAAC,CAAC;IAElE,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;0BAEb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;;;;;sCACf,8OAAC;4BAAI,WAAU;;;;;;sCACf,8OAAC;4BAAI,WAAU;;;;;;;;;;;;;;;;;0BAKnB,8OAAC;gBAAI,WAAU;0BACZ,UAAU,GAAG,CAAC,CAAC,OAAO;oBACrB,MAAM,WAAW,GAAG,KAAK,AAAC,QAAQ,aAAc,GAAG,CAAC,CAAC;oBACrD,qBACE,8OAAC;wBAEC,WAAU;wBACV,OAAO;4BAAE,MAAM;4BAAU,SAAS,IAAI,CAAC,UAAU,MAAM,GAAG,IAAI,CAAC,IAAI;wBAAI;uBAFlE;;;;;gBAKX;;;;;;0BAIF,8OAAC;gBAAI,WAAU;;;;;;0BAGf,8OAAC;gBACC,WAAU;gBACV,OAAO;oBAAE,MAAM;gBAAmB;;;;;;;;;;;;AAI1C;uCAEe","debugId":null}},
    {"offset": {"line": 2044, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/game/JudgmentText.tsx"],"sourcesContent":["// src/renderer/components/game/JudgmentText.tsx\n'use client';\n\nimport React from 'react';\nimport { useSpring, animated } from '@react-spring/web';\nimport { Judgment } from '../../../shared/types';\n\ninterface JudgmentTextProps {\n  judgment: Judgment;\n  hitError: number; // ms, for early/late coloring\n  onAnimationEnd: () => void;\n  id: string;\n}\n\nconst JUDGMENT_COLORS: Record<Judgment, string> = {\n  KOOL: '#00ffff',\n  COOL: '#88ff88',\n  GOOD: '#ffcc22',\n  MISS: '#ff6666',\n};\n\n// Early/Late colors for KOOL judgments\nconst EARLY_COLOR = '#88ccff'; // Light blue for early\nconst LATE_COLOR = '#ff8888'; // Light red for late\n\nconst JudgmentText: React.FC<JudgmentTextProps> = ({ judgment, hitError, onAnimationEnd }) => {\n  const [props, api] = useSpring(() => ({\n    from: { opacity: 0, transform: 'scale(0.8) translateY(20px)' },\n    to: { opacity: 1, transform: 'scale(1) translateY(0px)' },\n    config: { tension: 300, friction: 15 },\n    onRest: () => {\n      // After appearing, wait a bit then fade out\n      setTimeout(() => {\n        api.start({\n          to: { opacity: 0, transform: 'scale(1) translateY(-30px)' },\n          config: { tension: 300, friction: 20 },\n          onRest: onAnimationEnd,\n        });\n      }, 400);\n    },\n  }));\n\n  // KOOL judgment shows early/late color, others show standard color.\n  const color = judgment === 'KOOL' && Math.abs(hitError) > 2 \n    ? (hitError < 0 ? EARLY_COLOR : LATE_COLOR) \n    : JUDGMENT_COLORS[judgment];\n\n  return (\n    <animated.div\n      style={props}\n      className=\"absolute text-2xl font-bold uppercase pointer-events-none -translate-x-1/2 -translate-y-1/2\"\n    >\n      <span style={{ color, textShadow: `0 0 8px ${color}` }}>\n        {judgment}\n      </span>\n    </animated.div>\n  );\n};\n\nexport default JudgmentText;\n"],"names":[],"mappings":"AAAA,gDAAgD;;;;;;AAIhD;AAAA;AAHA;;;AAaA,MAAM,kBAA4C;IAChD,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;AACR;AAEA,uCAAuC;AACvC,MAAM,cAAc,WAAW,uBAAuB;AACtD,MAAM,aAAa,WAAW,qBAAqB;AAEnD,MAAM,eAA4C,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,cAAc,EAAE;IACvF,MAAM,CAAC,OAAO,IAAI,GAAG,IAAA,iMAAS,EAAC,IAAM,CAAC;YACpC,MAAM;gBAAE,SAAS;gBAAG,WAAW;YAA8B;YAC7D,IAAI;gBAAE,SAAS;gBAAG,WAAW;YAA2B;YACxD,QAAQ;gBAAE,SAAS;gBAAK,UAAU;YAAG;YACrC,QAAQ;gBACN,4CAA4C;gBAC5C,WAAW;oBACT,IAAI,KAAK,CAAC;wBACR,IAAI;4BAAE,SAAS;4BAAG,WAAW;wBAA6B;wBAC1D,QAAQ;4BAAE,SAAS;4BAAK,UAAU;wBAAG;wBACrC,QAAQ;oBACV;gBACF,GAAG;YACL;QACF,CAAC;IAED,oEAAoE;IACpE,MAAM,QAAQ,aAAa,UAAU,KAAK,GAAG,CAAC,YAAY,IACrD,WAAW,IAAI,cAAc,aAC9B,eAAe,CAAC,SAAS;IAE7B,qBACE,8OAAC,8MAAQ,CAAC,GAAG;QACX,OAAO;QACP,WAAU;kBAEV,cAAA,8OAAC;YAAK,OAAO;gBAAE;gBAAO,YAAY,CAAC,QAAQ,EAAE,OAAO;YAAC;sBAClD;;;;;;;;;;;AAIT;uCAEe","debugId":null}},
    {"offset": {"line": 2122, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/game/HitParticles.tsx"],"sourcesContent":["// src/renderer/components/game/HitParticles.tsx\n'use client';\n\nimport React from 'react';\nimport { useTrail, animated, SpringValue } from '@react-spring/web';\n\ninterface HitParticlesProps {\n  onAnimationEnd: () => void;\n  color: string;\n}\n\nconst PARTICLE_COUNT = 8;\n\nconst HitParticles: React.FC<HitParticlesProps> = ({ onAnimationEnd, color }) => {\n  const [trail] = useTrail(PARTICLE_COUNT, (i: number) => ({\n    from: { opacity: 1, scale: 0, x: 0, y: 0 },\n    to: { opacity: 0, scale: 1.5, x: (Math.random() - 0.5) * 150, y: (Math.random() - 0.5) * 150 },\n    config: { mass: 1, tension: 400, friction: 30 },\n    onRest: () => {\n      if (i === PARTICLE_COUNT - 1) {\n        onAnimationEnd();\n      }\n    },\n  }));\n\n  return (\n    <div className=\"absolute w-1 h-1\">\n      {trail.map((style: any, index: number) => (\n        <animated.div\n          key={index}\n          className=\"absolute rounded-full\"\n          style={{\n            ...style,\n            width: '8px',\n            height: '8px',\n            backgroundColor: color,\n            boxShadow: `0 0 10px ${color}`,\n          }}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default HitParticles;\n"],"names":[],"mappings":"AAAA,gDAAgD;;;;;;AAIhD;AAAA;AAHA;;;AAUA,MAAM,iBAAiB;AAEvB,MAAM,eAA4C,CAAC,EAAE,cAAc,EAAE,KAAK,EAAE;IAC1E,MAAM,CAAC,MAAM,GAAG,IAAA,gMAAQ,EAAC,gBAAgB,CAAC,IAAc,CAAC;YACvD,MAAM;gBAAE,SAAS;gBAAG,OAAO;gBAAG,GAAG;gBAAG,GAAG;YAAE;YACzC,IAAI;gBAAE,SAAS;gBAAG,OAAO;gBAAK,GAAG,CAAC,KAAK,MAAM,KAAK,GAAG,IAAI;gBAAK,GAAG,CAAC,KAAK,MAAM,KAAK,GAAG,IAAI;YAAI;YAC7F,QAAQ;gBAAE,MAAM;gBAAG,SAAS;gBAAK,UAAU;YAAG;YAC9C,QAAQ;gBACN,IAAI,MAAM,iBAAiB,GAAG;oBAC5B;gBACF;YACF;QACF,CAAC;IAED,qBACE,8OAAC;QAAI,WAAU;kBACZ,MAAM,GAAG,CAAC,CAAC,OAAY,sBACtB,8OAAC,8MAAQ,CAAC,GAAG;gBAEX,WAAU;gBACV,OAAO;oBACL,GAAG,KAAK;oBACR,OAAO;oBACP,QAAQ;oBACR,iBAAiB;oBACjB,WAAW,CAAC,SAAS,EAAE,OAAO;gBAChC;eARK;;;;;;;;;;AAaf;uCAEe","debugId":null}},
    {"offset": {"line": 2186, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/game/OsuGameView.tsx"],"sourcesContent":["'use client';\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { audioService } from '../../lib/AudioService';\nimport { preemptFromAR, approachScale, hitAlpha, windowsFromOD } from '../../lib/gameUtils';\nimport ApproachCircle from './ApproachCircle';\nimport { PinChart, Note, Judgment } from '../../../shared/types';\nimport HitErrorBar from './HitErrorBar';\nimport JudgmentText from './JudgmentText';\nimport HitParticles from './HitParticles';\nimport useGameStore from '../../store/gameStore';\n\ninterface OsuGameViewProps {\n  chart: PinChart;\n}\n\nconst HIT_CIRCLE_RADIUS = 48; // px\n\nconst JUDGMENT_COLORS: Record<Judgment, string> = {\n  KOOL: '#00ffff',\n  COOL: '#88ff88',\n  GOOD: '#ffcc22',\n  MISS: '#ff6666',\n};\n\nconst OsuGameView: React.FC<OsuGameViewProps> = ({ chart }) => {\n  const { score, combo, judgment, isPaused, updateGame, togglePause, reset } = useGameStore();\n    const [hitErrors, setHitErrors] = useState<number[]>([]);\n    const [judgments, setJudgments] = useState<Array<{ id: string; judgment: Judgment; hitError: number; x: number; y: number }>>([]);\n  const [particles, setParticles] = useState<Array<{ id: string; x: number; y: number; color: string }>>([]);\n  const [visibleNotes, setVisibleNotes] = useState<Note[]>([]);\n  const timeMsRef = useRef<number>(0);\n\n  const AR = chart.metadata?.approachRate ?? 5;\n  const preempt = preemptFromAR(AR);\n  const OD = chart.metadata?.overallDifficulty ?? 5;\n  const { w300 } = windowsFromOD(OD);\n\n  useEffect(() => {\n    const removeOnGameUpdate = (window as any).electron.onGameUpdate((gameUpdate: any) => {\n      if (gameUpdate.judgment && gameUpdate.hitError !== undefined) {\n        const noteIndex = chart.notes.findIndex(n => n.time === gameUpdate.noteTime * 1000) % 8;\n        const angle = (noteIndex / 8) * 360;\n        const pos = getPositionOnCircle(angle, 150);\n\n        const newId = `${Date.now()}`;\n        const judgmentColor = JUDGMENT_COLORS[gameUpdate.judgment as Judgment] || '#ffffff';\n\n        setJudgments(prev => [...prev, {\n          id: newId,\n          judgment: gameUpdate.judgment,\n          hitError: gameUpdate.hitError,\n          x: pos.x,\n          y: pos.y,\n        }]);\n\n        if (gameUpdate.judgment !== 'MISS') {\n          setParticles(prev => [...prev, { id: newId, x: pos.x, y: pos.y, color: judgmentColor }]);\n          // Try to play hitsound, but don't fail if it's not loaded\n          try {\n            audioService.playHitsound('normal-hitnormal');\n          } catch (e) {\n            // Silently ignore hitsound errors to prevent game disruption\n          }\n        }\n      }\n\n      if (gameUpdate.hitError !== undefined) {\n        setHitErrors(prev => [...prev.slice(-19), gameUpdate.hitError]); // Keep last 20 errors\n      }\n      updateGame(gameUpdate);\n    });\n\n    return () => {\n      removeOnGameUpdate();\n    };\n  }, [updateGame, chart.notes]);\n\n  const getPositionOnCircle = (angle: number, radius: number) => {\n    const rad = (angle - 90) * (Math.PI / 180);\n    return {\n      x: Math.cos(rad) * radius,\n      y: Math.sin(rad) * radius,\n    };\n  };\n\n  useEffect(() => {\n    let rafId: number;\n    const loop = () => {\n      const now = audioService.getCurrentTime() * 1000;\n      timeMsRef.current = now;\n\n      const newVisible = chart.notes.filter((note) => {\n        const hitTime = note.time * 1000;\n        const spawnTime = hitTime - preempt;\n        return now >= spawnTime && now <= hitTime + 250; // hide shortly after hit time\n      });\n      setVisibleNotes(newVisible);\n\n      rafId = requestAnimationFrame(loop);\n    };\n\n    rafId = requestAnimationFrame(loop);\n    return () => cancelAnimationFrame(rafId);\n  }, [chart.notes, preempt]);\n\n  const handleHit = useCallback(() => {\n    if (isPaused) return;\n    (window as any).electron.handlePinPress(audioService.getCurrentTime());\n  }, [isPaused]);\n\n  return (\n    <div className=\"absolute inset-0 cursor-pointer\" onClick={handleHit}>\n            {particles.map((p) => (\n        <div key={p.id} style={{ position: 'absolute', left: '50%', top: '50%', transform: `translate(calc(-50% + ${p.x}px), calc(-50% + ${p.y}px))` }}>\n          <HitParticles\n            color={p.color}\n            onAnimationEnd={() => setParticles(prev => prev.filter(particle => particle.id !== p.id))}\n          />\n        </div>\n      ))}\n\n      {judgments.map((j) => (\n        <div key={j.id} style={{ position: 'absolute', left: '50%', top: '50%', transform: `translate(calc(-50% + ${j.x}px), calc(-50% + ${j.y}px))` }}>\n          <JudgmentText\n            judgment={j.judgment}\n            hitError={j.hitError}\n            onAnimationEnd={() => setJudgments(prev => prev.filter(p => p.id !== j.id))}\n            id={j.id}\n          />\n        </div>\n      ))}\n\n      <HitErrorBar hitErrors={hitErrors} maxErrorMs={w300} />\n\n      {visibleNotes.map((note) => {\n        const hitTime = note.time * 1000;\n        const spawnTime = hitTime - preempt;\n        const now = timeMsRef.current;\n\n        const scale = approachScale(now, hitTime, preempt, 2.0);\n        const alpha = hitAlpha(now, spawnTime, preempt);\n\n        // TODO: position by note.x, note.y when available. For now, center.\n        return (\n          <div\n            key={note.time}\n            className=\"absolute left-1/2 top-1/2\"\n            style={{ transform: 'translate(-50%, -50%)' }}\n          >\n            {/* Inner hit circle */}\n            <div\n              className=\"absolute rounded-full bg-blue-500/50 border-2 border-white shadow\"\n              style={{\n                width: `${HIT_CIRCLE_RADIUS * 2}px`,\n                height: `${HIT_CIRCLE_RADIUS * 2}px`,\n                opacity: alpha,\n                boxShadow: '0 0 24px rgba(59,130,246,0.45)',\n              }}\n            />\n\n            {/* Approach ring */}\n            <ApproachCircle radius={HIT_CIRCLE_RADIUS} scale={scale} opacity={alpha} />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default OsuGameView;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2418, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/ui/PreGameLobby.tsx"],"sourcesContent":["// src/renderer/components/ui/PreGameLobby.tsx\n'use client';\n\nimport React from 'react';\nimport { PinChart } from '../../../shared/types';\n\ninterface PreGameLobbyProps {\n  chart: PinChart | null;\n  isLoading: boolean;\n  onStartGame: () => void;\n  onBackToMenu: () => void;\n}\n\nexport const PreGameLobby: React.FC<PreGameLobbyProps> = ({\n  chart,\n  isLoading,\n  onStartGame,\n  onBackToMenu\n}) => {\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900 text-white\">\n      <div className=\"text-center space-y-8 p-8 bg-black/30 rounded-xl backdrop-blur-sm border border-white/10\">\n        <h1 className=\"text-4xl font-bold bg-gradient-to-r from-cyan-400 to-purple-400 bg-clip-text text-transparent\">\n          Ready to Play?\n        </h1>\n        \n        {isLoading ? (\n          <div className=\"space-y-4\">\n            <div className=\"animate-spin w-12 h-12 border-4 border-cyan-400 border-t-transparent rounded-full mx-auto\"></div>\n            <p className=\"text-lg text-gray-300\">Loading chart and audio...</p>\n          </div>\n        ) : (\n          <div className=\"space-y-6\">\n            <p className=\"text-lg text-gray-300\">Chart loaded and ready!</p>\n            <div className=\"flex gap-4 justify-center\">\n              <button\n                onClick={onStartGame}\n                className=\"px-8 py-3 bg-gradient-to-r from-green-500 to-emerald-600 hover:from-green-600 hover:to-emerald-700 rounded-lg font-semibold text-white transition-all duration-200 transform hover:scale-105 shadow-lg\"\n              >\n                Start Game\n              </button>\n              <button\n                onClick={onBackToMenu}\n                className=\"px-6 py-3 bg-gray-600 hover:bg-gray-500 rounded-lg transition-colors\"\n              >\n                Back to Menu\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":"AAAA,8CAA8C;;;;;;AAC9C;;AAYO,MAAM,eAA4C,CAAC,EACxD,KAAK,EACL,SAAS,EACT,WAAW,EACX,YAAY,EACb;IACC,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAAgG;;;;;;gBAI7G,0BACC,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;;;;;sCACf,8OAAC;4BAAE,WAAU;sCAAwB;;;;;;;;;;;6EAGvC,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAE,WAAU;sCAAwB;;;;;;sCACrC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCACC,SAAS;oCACT,WAAU;8CACX;;;;;;8CAGD,8OAAC;oCACC,SAAS;oCACT,WAAU;8CACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASf","debugId":null}},
    {"offset": {"line": 2523, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/ui/PauseMenu.tsx"],"sourcesContent":["// src/renderer/components/ui/PauseMenu.tsx\n'use client';\n\nimport React from 'react';\n\ninterface PauseMenuProps {\n  onResume: () => void;\n  onRestart: () => void;\n  onBackToMenu: () => void;\n}\n\nexport const PauseMenu: React.FC<PauseMenuProps> = ({\n  onResume,\n  onRestart,\n  onBackToMenu\n}) => {\n  return (\n    <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm flex items-center justify-center z-50\">\n      <div className=\"bg-gradient-to-br from-gray-900 to-gray-800 p-8 rounded-xl border border-white/20 shadow-2xl\">\n        <h2 className=\"text-3xl font-bold text-center mb-8 bg-gradient-to-r from-cyan-400 to-purple-400 bg-clip-text text-transparent\">\n          일시정지\n        </h2>\n        \n        <div className=\"space-y-4 min-w-[200px]\">\n          <button\n            onClick={onResume}\n            className=\"w-full px-6 py-3 bg-gradient-to-r from-green-500 to-emerald-600 hover:from-green-600 hover:to-emerald-700 rounded-lg font-semibold text-white transition-all duration-200 transform hover:scale-105 shadow-lg\"\n          >\n            계속하기\n          </button>\n          \n          <button\n            onClick={onRestart}\n            className=\"w-full px-6 py-3 bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 rounded-lg font-semibold text-white transition-all duration-200 transform hover:scale-105 shadow-lg\"\n          >\n            다시시작\n          </button>\n          \n          <button\n            onClick={onBackToMenu}\n            className=\"w-full px-6 py-3 bg-gray-600 hover:bg-gray-500 rounded-lg font-semibold text-white transition-colors\"\n          >\n            메뉴로\n          </button>\n        </div>\n        \n        <p className=\"text-center text-gray-400 text-sm mt-6\">\n          ESC 키를 눌러 계속하기\n        </p>\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":"AAAA,2CAA2C;;;;;;AAC3C;;AAUO,MAAM,YAAsC,CAAC,EAClD,QAAQ,EACR,SAAS,EACT,YAAY,EACb;IACC,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAAiH;;;;;;8BAI/H,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;sCAID,8OAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;sCAID,8OAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;;;;;;;8BAKH,8OAAC;oBAAE,WAAU;8BAAyC;;;;;;;;;;;;;;;;;AAM9D","debugId":null}},
    {"offset": {"line": 2605, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/ui/VideoController.tsx"],"sourcesContent":["// src/renderer/components/ui/VideoController.tsx\n'use client';\n\nimport React, { useState, useRef, useEffect } from 'react';\n\ninterface VideoControllerProps {\n  videoPath: string | null;\n  className?: string;\n}\n\nconst VideoController: React.FC<VideoControllerProps> = ({ videoPath, className = \"\" }) => {\n  const [videoUrl, setVideoUrl] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [isReady, setIsReady] = useState(false);\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  useEffect(() => {\n    // Cleanup previous object URL if it exists\n    if (videoUrl && videoUrl.startsWith('blob:')) {\n      URL.revokeObjectURL(videoUrl);\n    }\n\n    if (!videoPath) {\n      setVideoUrl(null);\n      return;\n    }\n\n    setIsLoading(true);\n    setHasError(false);\n    setIsReady(false);\n\n    // Always use IPC to load video assets\n    (window as any).electron.loadAsset(videoPath)\n      .then((data: any) => {\n        if (data) {\n          const blob = new Blob([data], { type: 'video/mp4' });\n          const url = URL.createObjectURL(blob);\n          setVideoUrl(url);\n          setIsLoading(false);\n        } else {\n          throw new Error('IPC returned no data for video asset');\n        }\n      })\n      .catch((err: any) => {\n        console.error('Failed to load video asset via IPC:', err);\n        setHasError(true);\n        setIsLoading(false);\n      });\n\n    // Cleanup function for when the component unmounts or videoPath changes\n    return () => {\n      if (videoUrl && videoUrl.startsWith('blob:')) {\n        URL.revokeObjectURL(videoUrl);\n      }\n    };\n  }, [videoPath]);\n\n  const handleLoadStart = () => {\n    setIsLoading(true);\n  };\n\n  const handleCanPlay = () => {\n    setIsLoading(false);\n    setIsReady(true);\n    setHasError(false);\n  };\n\n  const handleError = () => {\n    console.error(`Failed to load video: ${videoUrl}`);\n    setIsLoading(false);\n    setHasError(true);\n  };\n\n  if (!videoUrl) {\n    return (\n      <div className=\"fixed inset-0 bg-black flex items-center justify-center\" style={{ zIndex: -1 }}>\n        {isLoading && <div className=\"text-white\">Loading Video...</div>}\n        {hasError && <div className=\"text-red-500\">Error Loading Video</div>}\n      </div>\n    );\n  }\n\n  return (\n    <video\n      ref={videoRef}\n      className={`fixed inset-0 w-full h-full object-cover ${className}`}\n      src={videoUrl}\n      autoPlay\n      loop\n      muted\n      playsInline\n      onLoadStart={handleLoadStart}\n      onCanPlay={handleCanPlay}\n      onError={handleError}\n      style={{\n        opacity: isReady ? 1 : 0,\n        transition: 'opacity 0.5s ease-in-out',\n        zIndex: -1  // Changed from 1 to -1 to ensure it stays behind game elements\n      }}\n    />\n  );\n};\n\nexport default VideoController;\n"],"names":[],"mappings":"AAAA,iDAAiD;;;;;;AAGjD;AAFA;;;AASA,MAAM,kBAAkD,CAAC,EAAE,SAAS,EAAE,YAAY,EAAE,EAAE;IACpF,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAgB;IACxD,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iNAAQ,EAAC;IAC3C,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAC;IACzC,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAC;IACvC,MAAM,WAAW,IAAA,+MAAM,EAAmB;IAE1C,IAAA,kNAAS,EAAC;QACR,2CAA2C;QAC3C,IAAI,YAAY,SAAS,UAAU,CAAC,UAAU;YAC5C,IAAI,eAAe,CAAC;QACtB;QAEA,IAAI,CAAC,WAAW;YACd,YAAY;YACZ;QACF;QAEA,aAAa;QACb,YAAY;QACZ,WAAW;QAEX,sCAAsC;QACrC,OAAe,QAAQ,CAAC,SAAS,CAAC,WAChC,IAAI,CAAC,CAAC;YACL,IAAI,MAAM;gBACR,MAAM,OAAO,IAAI,KAAK;oBAAC;iBAAK,EAAE;oBAAE,MAAM;gBAAY;gBAClD,MAAM,MAAM,IAAI,eAAe,CAAC;gBAChC,YAAY;gBACZ,aAAa;YACf,OAAO;gBACL,MAAM,IAAI,MAAM;YAClB;QACF,GACC,KAAK,CAAC,CAAC;YACN,QAAQ,KAAK,CAAC,uCAAuC;YACrD,YAAY;YACZ,aAAa;QACf;QAEF,wEAAwE;QACxE,OAAO;YACL,IAAI,YAAY,SAAS,UAAU,CAAC,UAAU;gBAC5C,IAAI,eAAe,CAAC;YACtB;QACF;IACF,GAAG;QAAC;KAAU;IAEd,MAAM,kBAAkB;QACtB,aAAa;IACf;IAEA,MAAM,gBAAgB;QACpB,aAAa;QACb,WAAW;QACX,YAAY;IACd;IAEA,MAAM,cAAc;QAClB,QAAQ,KAAK,CAAC,CAAC,sBAAsB,EAAE,UAAU;QACjD,aAAa;QACb,YAAY;IACd;IAEA,IAAI,CAAC,UAAU;QACb,qBACE,8OAAC;YAAI,WAAU;YAA0D,OAAO;gBAAE,QAAQ,CAAC;YAAE;;gBAC1F,2BAAa,8OAAC;oBAAI,WAAU;8BAAa;;;;;;gBACzC,0BAAY,8OAAC;oBAAI,WAAU;8BAAe;;;;;;;;;;;;IAGjD;IAEA,qBACE,8OAAC;QACC,KAAK;QACL,WAAW,CAAC,yCAAyC,EAAE,WAAW;QAClE,KAAK;QACL,QAAQ;QACR,IAAI;QACJ,KAAK;QACL,WAAW;QACX,aAAa;QACb,WAAW;QACX,SAAS;QACT,OAAO;YACL,SAAS,UAAU,IAAI;YACvB,YAAY;YACZ,QAAQ,CAAC,EAAG,+DAA+D;QAC7E;;;;;;AAGN;uCAEe","debugId":null}},
    {"offset": {"line": 2731, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/scenes/GameScene.tsx"],"sourcesContent":["// src/renderer/components/scenes/GameScene.tsx\n'use client';\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport useGameStore from '../../store/gameStore';\nimport PinGameView from '../game/PinGameView';\nimport OsuGameView from '../game/OsuGameView';\nimport { PreGameLobby } from '../ui/PreGameLobby';\nimport { PauseMenu } from '../ui/PauseMenu';\nimport VideoController from '../ui/VideoController';\nimport { audioService } from '../../lib/AudioService';\nimport { PinChart, Judgment } from '../../../shared/types';\n\ninterface GameSceneProps {\n  selectedChart: PinChart;\n  onBack: () => void;\n}\n\nconst GameScene: React.FC<GameSceneProps> = ({\n  selectedChart,\n  onBack\n}) => {\n  console.log('[GameScene] Component rendered with chart:', selectedChart?.title, 'gameMode:', selectedChart?.gameMode);\n\n  // Game store\n  const {\n    score,\n    combo,\n    judgment,\n    updateGame,\n    togglePause,\n    reset,\n    isPaused\n  } = useGameStore();\n\n  const [gameStarted, setGameStarted] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showPreGameLobby, setShowPreGameLobby] = useState(true);\n  const [pinChart, setPinChart] = useState<PinChart | null>(null);\n  const [videoPath, setVideoPath] = useState<string | null>(null);\n  const [backgroundUrl, setBackgroundUrl] = useState<string | null>(null);\n\n  const handlePinPress = (judgment?: Judgment) => {\n    if (!gameStarted || isPaused) {\n      return;\n    }\n\n    // If called from PinGameView with judgment, update game state\n    if (judgment) {\n      // Update game state with the judgment result\n      console.log('[GameScene] Received judgment:', judgment);\n    }\n\n    // Send the renderer master time (seconds) to Main for judgment\n    const nowSec = audioService.getCurrentTime();\n    (window as any).electron.handlePinPress(nowSec);\n  };\n\n  // Load assets\n  useEffect(() => {\n    const loadGameAssets = async () => {\n      if (!selectedChart) {\n        console.error('No chart selected, returning to select screen.');\n        onBack();\n        return;\n      }\n\n      try {\n        setIsLoading(true);\n\n        // --- START: ADD CRITICAL CHART DATA VALIDATION ---\n        console.log('[Renderer] Loading PinChart:', selectedChart);\n        if (!selectedChart || !selectedChart.notes || selectedChart.notes.length === 0) {\n          console.error('[Renderer] CRITICAL: Chart data is missing or notes are empty!');\n          alert('Chart data is invalid. Returning to selection.');\n          onBack();\n          return;\n        }\n        console.log('[Renderer] Chart validation passed - notes count:', selectedChart.notes.length);\n        // --- END: ADD CRITICAL CHART DATA VALIDATION ---\n\n        setPinChart(selectedChart);\n\n        // Load main audio track\n        if (selectedChart.audioFilename) {\n          await audioService.loadAudio(selectedChart.audioFilename);\n          console.log(`[GameScene] Main audio loaded: ${selectedChart.audioFilename}`);\n        }\n\n        // --- [수정] 안전한 히트 사운드 로딩 로직 ---\n\n        // 개별 애셋을 안전하게 로드하는 헬퍼 함수\n        const loadSoundSafely = async (soundKey: string, fileName: string) => {\n          try {\n            const assetUri = `${selectedChart.folderPath}/${fileName}`;\n            console.log(`[HITSOUND DEBUG] Attempting to load sound: ${assetUri} as '${soundKey}'`);\n            console.log(`[HITSOUND DEBUG] selectedChart.folderPath: ${selectedChart.folderPath}`);\n\n            // Use selectedChart directly instead of waiting for pinChart state\n            if (selectedChart && selectedChart.folderPath) {\n              await audioService.loadHitsound(soundKey, assetUri);\n              console.log(`[HITSOUND DEBUG] Successfully loaded sound: ${assetUri} as '${soundKey}'`);\n            } else {\n              console.error(`[HITSOUND DEBUG] Cannot load sound - missing selectedChart or folderPath`);\n              console.error(`[HITSOUND DEBUG] selectedChart:`, selectedChart);\n            }\n          } catch (e) {\n            // 개별 사운드 로딩에 실패하더라도, 전체 프로세스를 중단시키지 않고 경고만 남깁니다.\n            console.error(`[HITSOUND DEBUG] FAILED to load sound asset: ${fileName}`, e);\n          }\n        };\n\n        // 로드하려는 사운드 목록 - 모두 optional이므로 실패해도 게임 진행\n        console.log(`[HITSOUND DEBUG] Starting hitsound loading - all optional`);\n        await loadSoundSafely('normal-hitnormal', 'normal-hitnormal.wav');\n        await loadSoundSafely('combobreak', 'combobreak.wav');\n        await loadSoundSafely('normal-hitwhistle', 'normal-hitwhistle.wav');\n        console.log(`[HITSOUND DEBUG] Hitsound loading completed - game can proceed without them`);\n\n        // --- 수정 끝 ---\n\n        // Set background path if available\n        // Set video or background\n        if (selectedChart.videoPath) {\n          setVideoPath(selectedChart.videoPath);\n          setBackgroundUrl(null); // Ensure static bg is cleared\n        } else if (selectedChart.backgroundPath) {\n          setVideoPath(null); // Ensure video is cleared\n          // Load the background image as a blob URL to use in styles\n          try {\n            const imageBuffer = await (window as any).electron.loadAsset(selectedChart.backgroundPath);\n            const blob = new Blob([imageBuffer], { type: 'image/jpeg' }); // Adjust type if needed\n            const url = URL.createObjectURL(blob);\n            setBackgroundUrl(url);\n          } catch (bgError) {\n            console.error('Failed to load background image:', bgError);\n            setBackgroundUrl(null);\n          }\n        } else {\n          // No video or background\n          setVideoPath(null);\n          setBackgroundUrl(null);\n        }\n\n        setIsLoading(false);\n        console.log(`[GameScene] Asset loading completed successfully`);\n      } catch (error: unknown) {\n        console.error('Failed to load game assets:', error);\n        setIsLoading(false);\n\n        // Show user-friendly error\n        const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n        alert(`Failed to load game assets: ${errorMessage}\\n\\nReturning to song selection.`);\n\n        // Return to select scene\n        onBack();\n      }\n    };\n\n    loadGameAssets();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedChart]);\n\n  // Set up game update listener\n  useEffect(() => {\n    const removeOnGameUpdate = (window as any).electron.onGameUpdate((gameUpdate: any) => {\n      // The game state is updated via IPC from the main process.\n      updateGame(gameUpdate);\n    });\n\n    // This effect should only run once on mount to set up the listener.\n    return () => {\n      removeOnGameUpdate();\n      audioService.stop();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Keyboard controls\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (!gameStarted || isPaused) return;\n\n      if (event.code === 'Space') {\n        event.preventDefault();\n        handlePinPress();\n      }\n    };\n\n    if (gameStarted && !isPaused) {\n      window.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [gameStarted, isPaused]);\n\n  // Pause/unpause controls\n  useEffect(() => {\n    const handleGlobalKeyDown = (event: KeyboardEvent) => {\n      if (event.code === 'Escape') {\n        event.preventDefault();\n        togglePause();\n      }\n    };\n\n    if (gameStarted) {\n      window.addEventListener('keydown', handleGlobalKeyDown);\n    }\n\n    return () => {\n      window.removeEventListener('keydown', handleGlobalKeyDown);\n    };\n  }, [gameStarted, togglePause]);\n\n  // Handle game start\n  const handleStartGame = () => {\n    console.log('[GameScene] Starting game with pinChart:', pinChart?.title, 'notes:', pinChart?.notes?.length);\n    setGameStarted(true);\n    setShowPreGameLobby(false);\n    if (pinChart) {\n      (window as any).electron.startGame(pinChart);\n\n      // Start audio playback\n      if (pinChart.audioFilename) {\n        console.log('[GameScene] Starting audio playback:', pinChart.audioFilename);\n        audioService.play();\n      }\n    } else {\n      console.error('[GameScene] Cannot start game - no pinChart available');\n    }\n  };\n\n  const handleRestart = () => {\n    reset();\n    togglePause();\n    handleStartGame();\n  };\n\n  const handleBackToMenu = () => {\n    reset();\n    togglePause();\n    onBack();\n  };\n\n  // Render different states\n  if (!gameStarted) {\n    return (\n      <div>\n        <PreGameLobby\n          chart={pinChart}\n          isLoading={isLoading}\n          onStartGame={handleStartGame}\n          onBackToMenu={onBack}\n        />\n      </div>\n    );\n  }\n\n  if (isPaused) {\n    return (\n      <PauseMenu\n        onResume={togglePause}\n        onRestart={handleRestart}\n        onBackToMenu={handleBackToMenu}\n      />\n    );\n  }\n\n  return (\n    <div className=\"relative w-full h-screen overflow-hidden bg-black\">\n      {/* Background: Video > Static Image > Fallback */}\n      {videoPath ? (\n        <VideoController key={videoPath} videoPath={videoPath} />\n      ) : backgroundUrl ? (\n        <div\n          className=\"absolute inset-0 z-0 bg-cover bg-center\"\n          style={{ backgroundImage: `url(${backgroundUrl})` }}\n        />\n      ) : (\n        <div className=\"absolute inset-0 z-0 bg-gray-900\" />\n      )}\n\n      {/* Game view rendering based on chart gameMode */}\n      {pinChart && (\n        (() => {\n          console.log('[GameScene] Rendering game view. GameMode:', pinChart.gameMode);\n          if (pinChart.gameMode === 'pin') {\n            console.log('[GameScene] Rendering PinGameView');\n            return (\n              <PinGameView\n                chart={pinChart}\n                onPinThrow={handlePinPress}\n                score={score}\n                combo={combo}\n                judgment={judgment}\n                noteSpeed={500}\n              />\n            );\n          } else if (pinChart.gameMode === 'osu') {\n            console.log('[GameScene] Rendering OsuGameView');\n            return (\n              <OsuGameView\n                chart={pinChart}\n              />\n            );\n          } else {\n            console.log('[GameScene] Unsupported gameMode:', pinChart.gameMode);\n            return (\n              <div className=\"flex items-center justify-center h-full\">\n                <div className=\"text-white text-xl\">\n                  Unsupported game mode: {pinChart.gameMode}\n                </div>\n              </div>\n            );\n          }\n        })()\n      )}\n\n      {/* Simple debug info overlay */}\n      <div className=\"absolute top-4 right-4 bg-black/50 text-white p-2 text-sm z-50 rounded\">\n        <div>Chart: {pinChart?.title || 'None'}</div>\n        <div>Mode: {pinChart?.gameMode || 'Unknown'}</div>\n        <div>Notes: {pinChart?.notes?.length || 0}</div>\n        <div>Status: {gameStarted ? 'Playing' : isLoading ? 'Loading' : 'Ready'}</div>\n        <div>Audio: {audioService.getCurrentTime().toFixed(2)}s</div>\n      </div>\n    </div>\n  );\n};\n\nexport default GameScene;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3124, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/game/ScoreSummary.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\n\ninterface ScoreSummaryProps {\n  score: number;\n  maxCombo: number;\n}\n\nconst getRank = (score: number) => {\n  if (score > 950000) return { rank: 'S', color: 'text-theme-highlight' };\n  if (score > 900000) return { rank: 'A', color: 'text-theme-primary' };\n  if (score > 800000) return { rank: 'B', color: 'text-theme-primary/80' };\n  if (score > 700000) return { rank: 'C', color: 'text-theme-text-dark' };\n  return { rank: 'D', color: 'text-theme-accent' };\n};\n\nconst ScoreSummary: React.FC<ScoreSummaryProps> = ({ score, maxCombo }) => {\n  const { rank, color } = getRank(score);\n\n  return (\n    <div className=\"text-center\">\n      <p className=\"text-2xl text-theme-text-dark font-medium mb-2\">FINAL SCORE</p>\n      <p className=\"text-8xl font-black text-transparent bg-gradient-to-r from-theme-primary to-theme-secondary bg-clip-text mb-4\">\n        {score.toLocaleString()}\n      </p>\n      <div className=\"flex justify-center items-baseline gap-8 text-theme-text-light\">\n        <div className=\"text-center\">\n          <p className=\"text-lg text-theme-text-dark\">RANK</p>\n          <p className={`text-5xl font-bold ${color}`}>{rank}</p>\n        </div>\n        <div className=\"text-center\">\n          <p className=\"text-lg text-theme-text-dark\">MAX COMBO</p>\n          <p className=\"text-5xl font-bold\">{maxCombo}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ScoreSummary;\n"],"names":[],"mappings":";;;;;AAAA;;AASA,MAAM,UAAU,CAAC;IACf,IAAI,QAAQ,QAAQ,OAAO;QAAE,MAAM;QAAK,OAAO;IAAuB;IACtE,IAAI,QAAQ,QAAQ,OAAO;QAAE,MAAM;QAAK,OAAO;IAAqB;IACpE,IAAI,QAAQ,QAAQ,OAAO;QAAE,MAAM;QAAK,OAAO;IAAwB;IACvE,IAAI,QAAQ,QAAQ,OAAO;QAAE,MAAM;QAAK,OAAO;IAAuB;IACtE,OAAO;QAAE,MAAM;QAAK,OAAO;IAAoB;AACjD;AAEA,MAAM,eAA4C,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE;IACpE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,QAAQ;IAEhC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAE,WAAU;0BAAiD;;;;;;0BAC9D,8OAAC;gBAAE,WAAU;0BACV,MAAM,cAAc;;;;;;0BAEvB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAE,WAAU;0CAA+B;;;;;;0CAC5C,8OAAC;gCAAE,WAAW,CAAC,mBAAmB,EAAE,OAAO;0CAAG;;;;;;;;;;;;kCAEhD,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAE,WAAU;0CAA+B;;;;;;0CAC5C,8OAAC;gCAAE,WAAU;0CAAsB;;;;;;;;;;;;;;;;;;;;;;;;AAK7C;uCAEe","debugId":null}},
    {"offset": {"line": 3245, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/game/JudgmentDetails.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { JudgmentCounts, Judgment } from '../../../shared/types';\n\ninterface JudgmentDetailsProps {\n  judgments: JudgmentCounts;\n}\n\nconst judgmentStyles: Record<Judgment, string> = {\n  KOOL: 'text-theme-highlight',\n  COOL: 'text-theme-primary',\n  GOOD: 'text-green-400',\n  MISS: 'text-theme-accent',\n};\n\nconst JudgmentDetails: React.FC<JudgmentDetailsProps> = ({ judgments }) => {\n  const judgmentOrder: Judgment[] = ['KOOL', 'COOL', 'GOOD', 'MISS'];\n\n  return (\n    <div className=\"grid grid-cols-4 gap-4 text-center\">\n      {judgmentOrder.map((key) => (\n        <div key={key}>\n          <p className={`text-lg ${judgmentStyles[key]} font-bold`}>{key}</p>\n          <p className=\"text-3xl font-semibold text-theme-text-light\">\n            {judgments[key]}\n          </p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default JudgmentDetails;\n"],"names":[],"mappings":";;;;;AAAA;;AASA,MAAM,iBAA2C;IAC/C,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;AACR;AAEA,MAAM,kBAAkD,CAAC,EAAE,SAAS,EAAE;IACpE,MAAM,gBAA4B;QAAC;QAAQ;QAAQ;QAAQ;KAAO;IAElE,qBACE,8OAAC;QAAI,WAAU;kBACZ,cAAc,GAAG,CAAC,CAAC,oBAClB,8OAAC;;kCACC,8OAAC;wBAAE,WAAW,CAAC,QAAQ,EAAE,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC;kCAAG;;;;;;kCAC3D,8OAAC;wBAAE,WAAU;kCACV,SAAS,CAAC,IAAI;;;;;;;eAHT;;;;;;;;;;AASlB;uCAEe","debugId":null}},
    {"offset": {"line": 3302, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/game/FinishActions.tsx"],"sourcesContent":["// src/renderer/components/game/FinishActions.tsx\n'use client';\n\nimport React from 'react';\n\ninterface ActionButtonProps {\n  label: string;\n  onClick: () => void;\n  variant: 'primary' | 'secondary';\n}\n\nconst ActionButton: React.FC<ActionButtonProps> = ({ label, onClick, variant }) => {\n  const baseClasses = 'px-8 py-3 rounded-xl transition-all duration-200 font-medium transform hover:scale-105';\n  const styles = {\n    primary: 'bg-theme-primary/20 hover:bg-theme-primary/30 border border-theme-primary/50 text-theme-primary hover:text-theme-primary/90',\n    secondary: 'bg-theme-text-dark/30 hover:bg-theme-text-dark/50 text-theme-text-light/80 hover:text-theme-text-light',\n  };\n  return (\n    <button onClick={onClick} className={`${baseClasses} ${styles[variant]}`}>\n      {label}\n    </button>\n  );\n};\n\ninterface FinishActionsProps {\n  onRestart: () => void;\n  onSelectMusic: () => void;\n}\n\nconst FinishActions: React.FC<FinishActionsProps> = ({ onRestart, onSelectMusic }) => {\n  const actions: ActionButtonProps[] = [\n    { label: 'Retry', onClick: onRestart, variant: 'primary' },\n    { label: 'Back to Menu', onClick: onSelectMusic, variant: 'secondary' },\n  ];\n\n  return (\n    <div className=\"flex justify-center gap-6\">\n      {actions.map((action) => (\n        <ActionButton key={action.label} {...action} />\n      ))}\n    </div>\n  );\n};\n\nexport default FinishActions;\n"],"names":[],"mappings":"AAAA,iDAAiD;;;;;;AACjD;;AAUA,MAAM,eAA4C,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE;IAC5E,MAAM,cAAc;IACpB,MAAM,SAAS;QACb,SAAS;QACT,WAAW;IACb;IACA,qBACE,8OAAC;QAAO,SAAS;QAAS,WAAW,GAAG,YAAY,CAAC,EAAE,MAAM,CAAC,QAAQ,EAAE;kBACrE;;;;;;AAGP;AAOA,MAAM,gBAA8C,CAAC,EAAE,SAAS,EAAE,aAAa,EAAE;IAC/E,MAAM,UAA+B;QACnC;YAAE,OAAO;YAAS,SAAS;YAAW,SAAS;QAAU;QACzD;YAAE,OAAO;YAAgB,SAAS;YAAe,SAAS;QAAY;KACvE;IAED,qBACE,8OAAC;QAAI,WAAU;kBACZ,QAAQ,GAAG,CAAC,CAAC,uBACZ,8OAAC;gBAAiC,GAAG,MAAM;eAAxB,OAAO,KAAK;;;;;;;;;;AAIvC;uCAEe","debugId":null}},
    {"offset": {"line": 3359, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/game/RankDisplay.tsx"],"sourcesContent":["// src/renderer/components/game/RankDisplay.tsx\n'use client';\n\nimport React from 'react';\n\ninterface RankDisplayProps {\n  rank: string;\n}\n\nconst rankColorMap: { [key: string]: string } = {\n  S: 'text-yellow-400',\n  A: 'text-green-400',\n  B: 'text-blue-400',\n  C: 'text-purple-400',\n  D: 'text-gray-500',\n};\n\nconst RankDisplay: React.FC<RankDisplayProps> = ({ rank }) => {\n  const color = rankColorMap[rank] || 'text-gray-500';\n\n  return (\n    <div className=\"flex flex-col items-center\">\n      <p className=\"text-2xl font-semibold text-theme-text-light/80 mb-2\">Rank</p>\n      <div\n        className={`text-9xl font-black ${color} transform-gpu transition-all duration-500`}\n        style={{ filter: `drop-shadow(0 0 20px ${color.replace('text-', 'bg-').split('-')[0]})` }}\n      >\n        {rank}\n      </div>\n    </div>\n  );\n};\n\nexport default RankDisplay;\n"],"names":[],"mappings":"AAAA,+CAA+C;;;;;;AAC/C;;AAQA,MAAM,eAA0C;IAC9C,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;AACL;AAEA,MAAM,cAA0C,CAAC,EAAE,IAAI,EAAE;IACvD,MAAM,QAAQ,YAAY,CAAC,KAAK,IAAI;IAEpC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAE,WAAU;0BAAuD;;;;;;0BACpE,8OAAC;gBACC,WAAW,CAAC,oBAAoB,EAAE,MAAM,0CAA0C,CAAC;gBACnF,OAAO;oBAAE,QAAQ,CAAC,qBAAqB,EAAE,MAAM,OAAO,CAAC,SAAS,OAAO,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;gBAAC;0BAEvF;;;;;;;;;;;;AAIT;uCAEe","debugId":null}},
    {"offset": {"line": 3410, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/scenes/FinishScene.tsx"],"sourcesContent":["// src/renderer/components/scenes/FinishScene.tsx\n'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useTransition, animated } from 'react-spring';\nimport useGameStore from '../../store/gameStore';\nimport { calculateAccuracy, getRank } from '../../lib/gameUtils';\n\nimport ScoreSummary from '../game/ScoreSummary';\nimport JudgmentDetails from '../game/JudgmentDetails';\nimport FinishActions from '../game/FinishActions';\nimport RankDisplay from '../game/RankDisplay';\nimport AccuracyDisplay from '../game/AccuracyDisplay';\n\ninterface FinishSceneProps {\n  onBack: () => void;\n}\n\nconst FinishScene: React.FC<FinishSceneProps> = ({ onBack }) => {\n  const { score, maxCombo, judgments, reset, setCurrentScene } = useGameStore();\n\n  const [accuracy, setAccuracy] = useState(0);\n  const [rank, setRank] = useState('');\n\n  useEffect(() => {\n    const acc = calculateAccuracy(judgments);\n    const rnk = getRank(acc);\n    setAccuracy(acc);\n    setRank(rnk);\n  }, [judgments]);\n\n  const handleRestart = () => {\n    reset();\n    setCurrentScene('Game');\n  };\n\n  const handleSelectMusic = () => {\n    reset();\n    setCurrentScene('Select');\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const resultItems: ((style: any) => React.ReactElement)[] = [\n    (style) => <animated.div style={style}><ScoreSummary score={score} maxCombo={maxCombo} /></animated.div>,\n    (style) => <animated.div style={style}><div className=\"w-full h-px bg-theme-text-dark/50\" /></animated.div>,\n    (style) => <animated.div style={style}><div className=\"flex justify-around items-center\"><RankDisplay rank={rank} /><AccuracyDisplay accuracy={accuracy} /></div></animated.div>,\n    (style) => <animated.div style={style}><div className=\"w-full h-px bg-theme-text-dark/50\" /></animated.div>,\n    (style) => <animated.div style={style}><JudgmentDetails judgments={judgments} /></animated.div>,\n    (style) => <animated.div style={style}><div className=\"w-full h-px bg-theme-text-dark/50\" /></animated.div>,\n    (style) => <animated.div style={style}><FinishActions onRestart={handleRestart} onSelectMusic={handleSelectMusic} /></animated.div>,\n  ];\n\n  const transitions = useTransition(resultItems, {\n    from: { opacity: 0, transform: 'translateY(20px)' },\n    enter: { opacity: 1, transform: 'translateY(0px)' },\n    trail: 200, // Staggered animation\n  });\n\n  return (\n    <div className=\"min-h-screen bg-theme-bg flex items-center justify-center p-8\">\n      <div className=\"bg-theme-bg/70 backdrop-blur-xl rounded-3xl p-12 border border-theme-text-dark/50 shadow-2xl max-w-3xl w-full space-y-8\">\n        <button\n          onClick={onBack}\n          className=\"px-6 py-3 bg-theme-secondary text-white rounded-lg hover:bg-theme-secondary/80 transition-colors\"\n        >\n          Back to Menu\n        </button>\n        <h1 className=\"text-6xl font-black text-center bg-clip-text text-transparent bg-gradient-to-b from-theme-accent to-theme-secondary animate-pulse\">\n          GAME CLEAR\n        </h1>\n        {transitions((style, item) => item(style))}\n      </div>\n    </div>\n  );\n};\n\nexport default FinishScene;\n"],"names":[],"mappings":"AAAA,iDAAiD;;;;;;AAGjD;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAXA;;;;;;;;;;;AAiBA,MAAM,cAA0C,CAAC,EAAE,MAAM,EAAE;IACzD,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,eAAe,EAAE,GAAG,IAAA,gJAAY;IAE3E,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAC;IACzC,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,iNAAQ,EAAC;IAEjC,IAAA,kNAAS,EAAC;QACR,MAAM,MAAM,IAAA,wJAAiB,EAAC;QAC9B,MAAM,MAAM,IAAA,8IAAO,EAAC;QACpB,YAAY;QACZ,QAAQ;IACV,GAAG;QAAC;KAAU;IAEd,MAAM,gBAAgB;QACpB;QACA,gBAAgB;IAClB;IAEA,MAAM,oBAAoB;QACxB;QACA,gBAAgB;IAClB;IAEA,8DAA8D;IAC9D,MAAM,cAAsD;QAC1D,CAAC,sBAAU,8OAAC,8LAAQ,CAAC,GAAG;gBAAC,OAAO;0BAAO,cAAA,8OAAC,iKAAY;oBAAC,OAAO;oBAAO,UAAU;;;;;;;;;;;QAC7E,CAAC,sBAAU,8OAAC,8LAAQ,CAAC,GAAG;gBAAC,OAAO;0BAAO,cAAA,8OAAC;oBAAI,WAAU;;;;;;;;;;;QACtD,CAAC,sBAAU,8OAAC,8LAAQ,CAAC,GAAG;gBAAC,OAAO;0BAAO,cAAA,8OAAC;oBAAI,WAAU;;sCAAmC,8OAAC,gKAAW;4BAAC,MAAM;;;;;;sCAAQ,8OAAC,oKAAe;4BAAC,UAAU;;;;;;;;;;;;;;;;;QAC/I,CAAC,sBAAU,8OAAC,8LAAQ,CAAC,GAAG;gBAAC,OAAO;0BAAO,cAAA,8OAAC;oBAAI,WAAU;;;;;;;;;;;QACtD,CAAC,sBAAU,8OAAC,8LAAQ,CAAC,GAAG;gBAAC,OAAO;0BAAO,cAAA,8OAAC,oKAAe;oBAAC,WAAW;;;;;;;;;;;QACnE,CAAC,sBAAU,8OAAC,8LAAQ,CAAC,GAAG;gBAAC,OAAO;0BAAO,cAAA,8OAAC;oBAAI,WAAU;;;;;;;;;;;QACtD,CAAC,sBAAU,8OAAC,8LAAQ,CAAC,GAAG;gBAAC,OAAO;0BAAO,cAAA,8OAAC,kKAAa;oBAAC,WAAW;oBAAe,eAAe;;;;;;;;;;;KAChG;IAED,MAAM,cAAc,IAAA,qMAAa,EAAC,aAAa;QAC7C,MAAM;YAAE,SAAS;YAAG,WAAW;QAAmB;QAClD,OAAO;YAAE,SAAS;YAAG,WAAW;QAAkB;QAClD,OAAO;IACT;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBACC,SAAS;oBACT,WAAU;8BACX;;;;;;8BAGD,8OAAC;oBAAG,WAAU;8BAAoI;;;;;;gBAGjJ,YAAY,CAAC,OAAO,OAAS,KAAK;;;;;;;;;;;;AAI3C;uCAEe","debugId":null}},
    {"offset": {"line": 3628, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/settings/SettingSlider.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\n\ninterface SettingSliderProps {\n  label: string;\n  value: number;\n  min: number;\n  max: number;\n  step: number;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst SettingSlider: React.FC<SettingSliderProps> = ({ label, value, min, max, step, onChange }) => {\n  return (\n    <div className=\"setting-item\">\n      <label htmlFor={label} className=\"text-2xl font-semibold mb-4 flex justify-between items-center\">\n        <span>{label}</span>\n        <span className=\"text-3xl font-bold text-theme-secondary bg-theme-bg/50 px-4 py-1 rounded-lg\">{value}</span>\n      </label>\n      <input\n        type=\"range\"\n        id={label}\n        min={min}\n        max={max}\n        step={step}\n        value={value}\n        onChange={onChange}\n        className=\"w-full h-3 bg-theme-text-light/10 rounded-full appearance-none cursor-pointer range-lg accent-theme-accent focus:outline-none focus:ring-2 focus:ring-theme-secondary focus:ring-opacity-50 transition-all duration-300\"\n      />\n    </div>\n  );\n};\n\nexport default SettingSlider;\n"],"names":[],"mappings":";;;;;AAAA;;AAaA,MAAM,gBAA8C,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE;IAC7F,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAM,SAAS;gBAAO,WAAU;;kCAC/B,8OAAC;kCAAM;;;;;;kCACP,8OAAC;wBAAK,WAAU;kCAA+E;;;;;;;;;;;;0BAEjG,8OAAC;gBACC,MAAK;gBACL,IAAI;gBACJ,KAAK;gBACL,KAAK;gBACL,MAAM;gBACN,OAAO;gBACP,UAAU;gBACV,WAAU;;;;;;;;;;;;AAIlB;uCAEe","debugId":null}},
    {"offset": {"line": 3690, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/settings/DisabledSettingSlider.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\n\ninterface DisabledSettingSliderProps {\n  label: string;\n  value: number | string;\n}\n\nconst DisabledSettingSlider: React.FC<DisabledSettingSliderProps> = ({ label, value }) => {\n  return (\n    <div className=\"opacity-50\">\n      <label className=\"text-2xl font-semibold mb-4 flex justify-between items-center\">\n        <span>{label}</span>\n        <span className=\"text-3xl font-bold text-theme-secondary bg-theme-bg/50 px-4 py-1 rounded-lg\">{value}</span>\n      </label>\n      <input type=\"range\" disabled className=\"w-full h-3 bg-theme-text-light/10 rounded-full appearance-none cursor-not-allowed\" />\n      <p className=\"text-sm text-right mt-2\">Coming Soon</p>\n    </div>\n  );\n};\n\nexport default DisabledSettingSlider;\n"],"names":[],"mappings":";;;;;AAAA;;AASA,MAAM,wBAA8D,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE;IACnF,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAM,WAAU;;kCACf,8OAAC;kCAAM;;;;;;kCACP,8OAAC;wBAAK,WAAU;kCAA+E;;;;;;;;;;;;0BAEjG,8OAAC;gBAAM,MAAK;gBAAQ,QAAQ;gBAAC,WAAU;;;;;;0BACvC,8OAAC;gBAAE,WAAU;0BAA0B;;;;;;;;;;;;AAG7C;uCAEe","debugId":null}},
    {"offset": {"line": 3754, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/scenes/SettingsScene.tsx"],"sourcesContent":["// src/renderer/components/scenes/SettingsScene.tsx\n'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport useGameStore from '../../store/gameStore';\nimport { Settings } from '../../../shared/types';\nimport SettingSlider from '../settings/SettingSlider';\nimport DisabledSettingSlider from '../settings/DisabledSettingSlider';\n\n// Define the structure for each setting configuration\ninterface SettingConfig {\n  id: keyof Settings;\n  label: string;\n  min?: number;\n  max?: number;\n  step?: number;\n  enabled: boolean;\n}\n\n// Centralized settings configuration\nconst settingsConfig: SettingConfig[] = [\n  {\n    id: 'noteSpeed',\n    label: 'Note Speed',\n    min: 100,\n    max: 1000,\n    step: 50,\n    enabled: true,\n  },\n  // Add future settings here, e.g.:\n  // { id: 'masterVolume', label: 'Master Volume', min: 0, max: 100, step: 1, enabled: false },\n];\n\ninterface SettingsSceneProps {\n  onBack: () => void;\n}\n\nconst SettingsScene: React.FC<SettingsSceneProps> = ({ onBack }) => {\n  const setCurrentScene = useGameStore((state) => state.setCurrentScene);\n  const [settings, setSettings] = useState<Partial<Settings>>({});\n\n  // Fetch all settings on component mount\n  useEffect(() => {\n    const fetchAllSettings = async () => {\n      const initialSettings: Partial<Settings> = {};\n      for (const config of settingsConfig) {\n        if (config.enabled) {\n          initialSettings[config.id] = await window.electron.getSetting(config.id);\n        }\n      }\n      setSettings(initialSettings);\n    };\n    fetchAllSettings();\n  }, []);\n\n  // Generic handler for all setting changes\n  const handleSettingChange = (id: keyof Settings, value: number) => {\n    const newSettings = { ...settings, [id]: value };\n    setSettings(newSettings);\n    window.electron.setSetting(id, value);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-theme-bg text-theme-text-light flex flex-col items-center justify-center p-8\">\n      <div className=\"absolute top-8 left-8\">\n        <button\n          onClick={onBack}\n          className=\"px-6 py-3 bg-theme-secondary text-white rounded-lg hover:bg-theme-secondary/80 transition-colors\"\n        >\n          Back to Menu\n        </button>\n      </div>\n\n      <div className=\"w-full max-w-2xl bg-theme-bg/70 backdrop-blur-xl rounded-2xl shadow-2xl p-10 border border-theme-text-dark/50\">\n        <h1 className=\"text-5xl font-bold text-center mb-12 bg-clip-text text-transparent bg-gradient-to-r from-theme-secondary to-theme-accent animate-pulse\">\n          Settings\n        </h1>\n\n        <div className=\"space-y-10\">\n          {settingsConfig.map((config) =>\n            config.enabled ? (\n              <SettingSlider\n                key={config.id}\n                label={config.label}\n                value={settings[config.id] ?? config.min ?? 0}\n                min={config.min ?? 0}\n                max={config.max ?? 100}\n                step={config.step ?? 1}\n                onChange={(e) => handleSettingChange(config.id, parseInt(e.target.value, 10))}\n              />\n            ) : (\n              <DisabledSettingSlider key={config.id} label={config.label} value={100} />\n            )\n          )}\n        </div>\n      </div>\n\n      <p className=\"mt-8 text-sm text-theme-text-dark\">More settings will be available in future updates.</p>\n    </div>\n  );\n};\n\nexport default SettingsScene;\n"],"names":[],"mappings":"AAAA,mDAAmD;;;;;;AAGnD;AACA;AAEA;AACA;AANA;;;;;;AAkBA,qCAAqC;AACrC,MAAM,iBAAkC;IACtC;QACE,IAAI;QACJ,OAAO;QACP,KAAK;QACL,KAAK;QACL,MAAM;QACN,SAAS;IACX;CAGD;AAMD,MAAM,gBAA8C,CAAC,EAAE,MAAM,EAAE;IAC7D,MAAM,kBAAkB,IAAA,gJAAY,EAAC,CAAC,QAAU,MAAM,eAAe;IACrE,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAoB,CAAC;IAE7D,wCAAwC;IACxC,IAAA,kNAAS,EAAC;QACR,MAAM,mBAAmB;YACvB,MAAM,kBAAqC,CAAC;YAC5C,KAAK,MAAM,UAAU,eAAgB;gBACnC,IAAI,OAAO,OAAO,EAAE;oBAClB,eAAe,CAAC,OAAO,EAAE,CAAC,GAAG,MAAM,OAAO,QAAQ,CAAC,UAAU,CAAC,OAAO,EAAE;gBACzE;YACF;YACA,YAAY;QACd;QACA;IACF,GAAG,EAAE;IAEL,0CAA0C;IAC1C,MAAM,sBAAsB,CAAC,IAAoB;QAC/C,MAAM,cAAc;YAAE,GAAG,QAAQ;YAAE,CAAC,GAAG,EAAE;QAAM;QAC/C,YAAY;QACZ,OAAO,QAAQ,CAAC,UAAU,CAAC,IAAI;IACjC;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBACC,SAAS;oBACT,WAAU;8BACX;;;;;;;;;;;0BAKH,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAyI;;;;;;kCAIvJ,8OAAC;wBAAI,WAAU;kCACZ,eAAe,GAAG,CAAC,CAAC,SACnB,OAAO,OAAO,iBACZ,8OAAC,sKAAa;gCAEZ,OAAO,OAAO,KAAK;gCACnB,OAAO,QAAQ,CAAC,OAAO,EAAE,CAAC,IAAI,OAAO,GAAG,IAAI;gCAC5C,KAAK,OAAO,GAAG,IAAI;gCACnB,KAAK,OAAO,GAAG,IAAI;gCACnB,MAAM,OAAO,IAAI,IAAI;gCACrB,UAAU,CAAC,IAAM,oBAAoB,OAAO,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,KAAK,EAAE;+BANpE,OAAO,EAAE;;;;yFAShB,8OAAC,8KAAqB;gCAAiB,OAAO,OAAO,KAAK;gCAAE,OAAO;+BAAvC,OAAO,EAAE;;;;;;;;;;;;;;;;0BAM7C,8OAAC;gBAAE,WAAU;0BAAoC;;;;;;;;;;;;AAGvD;uCAEe","debugId":null}},
    {"offset": {"line": 3888, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/components/scenes/OszImportScene.tsx"],"sourcesContent":["// src/renderer/components/scenes/OszImportScene.tsx\n'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { PinChart } from '../../../shared/types';\n// OszChart 타입 정의 (main 프로세스 타입을 직접 참조할 수 없으므로 복사)\ninterface OszChart {\n  id: string;\n  title: string;\n  artist: string;\n  creator: string;\n  audioFilename: string;\n  backgroundFilename?: string;\n  difficulties: OszDifficulty[];\n  folderPath: string;\n}\n\ninterface OszDifficulty {\n  name: string;\n  version: string;\n  overallDifficulty: number;\n  approachRate: number;\n  circleSize: number;\n  hpDrainRate: number;\n  filePath: string;\n  noteCount: number;\n}\n\ninterface OszImportSceneProps {\n  onBack: () => void;\n  onChartSelected: (chart: PinChart) => void;\n}\n\nconst OszImportScene: React.FC<OszImportSceneProps> = ({ onBack, onChartSelected }) => {\n  const [library, setLibrary] = useState<OszChart[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [importStatus, setImportStatus] = useState<string>('');\n\n  // 라이브러리 로드\n  useEffect(() => {\n    loadLibrary();\n  }, []);\n\n  const loadLibrary = async () => {\n    try {\n      const charts = await (window as any).electron.getChartLibrary();\n      setLibrary(charts as OszChart[]);\n    } catch (error) {\n      console.error('Failed to load chart library:', error);\n    }\n  };\n\n  // .osz 파일 임포트\n  const handleImportOsz = async () => {\n    try {\n      setIsLoading(true);\n      setImportStatus('파일 선택 중...');\n\n      // 파일 선택 다이얼로그 (Electron의 dialog API 사용)\n      const filePath = await (window as any).electron.selectOszFile();\n\n      if (!filePath) {\n        setImportStatus('');\n        setIsLoading(false);\n        return;\n      }\n\n      setImportStatus('차트 임포트 중...');\n\n      // .osz 파일 임포트\n      await (window as any).electron.importOszFile(filePath);\n      \n      setImportStatus('임포트 완료!');\n      setTimeout(() => setImportStatus(''), 2000);\n\n      // 라이브러리 새로고침\n      await loadLibrary();\n    } catch (error) {\n      console.error('Failed to import .osz file:', error);\n      setImportStatus('임포트 실패: ' + (error as Error).message);\n      setTimeout(() => setImportStatus(''), 3000);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 난이도 선택 및 게임 시작\n  const handleDifficultySelect = async (chart: OszChart, difficultyIndex: number) => {\n    try {\n      setIsLoading(true);\n      setImportStatus('차트 변환 중...');\n\n      const pinChart = await (window as any).electron.convertDifficultyToPinChart(\n        chart,\n        difficultyIndex\n      ) as PinChart;\n\n      onChartSelected(pinChart);\n    } catch (error) {\n      console.error('Failed to convert difficulty:', error);\n      setImportStatus('변환 실패: ' + (error as Error).message);\n      setTimeout(() => setImportStatus(''), 3000);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 차트 삭제\n  const handleRemoveChart = async (chartId: string) => {\n    if (!confirm('이 차트를 삭제하시겠습니까?')) return;\n\n    try {\n      await (window as any).electron.invoke('remove-chart-from-library', chartId);\n      await loadLibrary();\n    } catch (error) {\n      console.error('Failed to remove chart:', error);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-theme-bg-primary text-white p-8\">\n      {/* 헤더 */}\n      <div className=\"flex items-center justify-between mb-8\">\n        <div>\n          <h1 className=\"text-4xl font-bold text-theme-primary mb-2\">\n            .osz 차트 라이브러리\n          </h1>\n          <p className=\"text-theme-text-secondary\">\n            osu! 비트맵(.osz) 파일을 임포트하여 플레이하세요\n          </p>\n        </div>\n        <button\n          onClick={onBack}\n          className=\"px-6 py-3 bg-theme-secondary text-white rounded-lg hover:bg-theme-secondary/80 transition-colors\"\n        >\n          뒤로가기\n        </button>\n      </div>\n\n      {/* 임포트 버튼 및 상태 */}\n      <div className=\"mb-8\">\n        <button\n          onClick={handleImportOsz}\n          disabled={isLoading}\n          className=\"px-8 py-4 bg-theme-primary text-white rounded-lg hover:bg-theme-primary/80 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          {isLoading ? '처리 중...' : '.osz 파일 임포트'}\n        </button>\n        {importStatus && (\n          <p className=\"mt-2 text-theme-accent\">{importStatus}</p>\n        )}\n      </div>\n\n      {/* 차트 라이브러리 */}\n      <div className=\"grid gap-6\">\n        {library.length === 0 ? (\n          <div className=\"text-center py-12\">\n            <p className=\"text-theme-text-secondary text-lg\">\n              임포트된 차트가 없습니다.\n            </p>\n            <p className=\"text-theme-text-secondary mt-2\">\n              .osz 파일을 임포트하여 시작하세요.\n            </p>\n          </div>\n        ) : (\n          library.map((chart) => (\n            <div\n              key={chart.id}\n              className=\"bg-theme-bg-secondary rounded-lg p-6 border border-theme-border\"\n            >\n              {/* 차트 정보 */}\n              <div className=\"flex items-start justify-between mb-4\">\n                <div>\n                  <h3 className=\"text-xl font-bold text-theme-primary\">\n                    {chart.title}\n                  </h3>\n                  <p className=\"text-theme-text-secondary\">\n                    by {chart.artist} • mapped by {chart.creator}\n                  </p>\n                </div>\n                <button\n                  onClick={() => handleRemoveChart(chart.id)}\n                  className=\"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 transition-colors text-sm\"\n                >\n                  삭제\n                </button>\n              </div>\n\n              {/* 난이도 목록 */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3\">\n                {chart.difficulties.map((difficulty, index) => (\n                  <button\n                    key={index}\n                    onClick={() => handleDifficultySelect(chart, index)}\n                    disabled={isLoading}\n                    className=\"p-4 bg-theme-bg-primary rounded-lg border border-theme-border hover:border-theme-primary transition-colors disabled:opacity-50 disabled:cursor-not-allowed text-left\"\n                  >\n                    <div className=\"font-semibold text-theme-primary\">\n                      {difficulty.name}\n                    </div>\n                    <div className=\"text-sm text-theme-text-secondary mt-1\">\n                      OD: {difficulty.overallDifficulty.toFixed(1)} • \n                      AR: {difficulty.approachRate.toFixed(1)}\n                    </div>\n                    <div className=\"text-sm text-theme-text-secondary\">\n                      {difficulty.noteCount} 노트\n                    </div>\n                  </button>\n                ))}\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default OszImportScene;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4187, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/prg/src/renderer/app/page.tsx"],"sourcesContent":["// src/renderer/app/page.tsx\n'use client';\n\nimport React, { useState } from 'react';\nimport useGameStore from '../store/gameStore';\nimport StartScene from '../components/scenes/StartScene';\nimport SelectScene from '../components/scenes/SelectScene';\nimport GameScene from '../components/scenes/GameScene';\nimport FinishScene from '../components/scenes/FinishScene';\nimport SettingsScene from '../components/scenes/SettingsScene';\nimport OszImportScene from '../components/scenes/OszImportScene';\nimport { GameScene as GameSceneType, PinChart } from '../../shared/types';\n\nconst SceneManager: React.FC = () => {\n    const [currentScene, setCurrentScene] = useState<GameSceneType>('Start');\n    const [selectedChart, setSelectedChart] = useState<PinChart | null>(null);\n\n    const handleSceneChange = (scene: GameSceneType) => {\n        setCurrentScene(scene);\n    };\n\n    const handleChartSelected = (chart: PinChart) => {\n        setSelectedChart(chart);\n        setCurrentScene('Game');\n    };\n\n    const renderScene = () => {\n        switch (currentScene) {\n            case 'Start':\n                return <StartScene onNavigate={handleSceneChange} />;\n            case 'Select':\n                return <SelectScene onBack={() => handleSceneChange('Start')} onStartGame={handleChartSelected} />;\n            case 'Game':\n                return selectedChart ? <GameScene selectedChart={selectedChart} onBack={() => handleSceneChange('Select')} /> : <StartScene onNavigate={handleSceneChange} />;\n            case 'Finish':\n                return <FinishScene onBack={() => handleSceneChange('Start')} />;\n            case 'Settings':\n                return <SettingsScene onBack={() => handleSceneChange('Start')} />;\n            case 'OszImport':\n                return <OszImportScene onBack={() => handleSceneChange('Start')} onChartSelected={handleChartSelected} />;\n            default:\n                return <StartScene onNavigate={handleSceneChange} />;\n        }\n    };\n\n    return <div>{renderScene()}</div>;\n};\n\nexport default function HomePage() {\n    return <SceneManager />;\n}"],"names":[],"mappings":"AAAA,4BAA4B;;;;;;AAG5B;AAEA;AACA;AACA;AACA;AACA;AACA;AATA;;;;;;;;;AAYA,MAAM,eAAyB;IAC3B,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,iNAAQ,EAAgB;IAChE,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,iNAAQ,EAAkB;IAEpE,MAAM,oBAAoB,CAAC;QACvB,gBAAgB;IACpB;IAEA,MAAM,sBAAsB,CAAC;QACzB,iBAAiB;QACjB,gBAAgB;IACpB;IAEA,MAAM,cAAc;QAChB,OAAQ;YACJ,KAAK;gBACD,qBAAO,8OAAC,iKAAU;oBAAC,YAAY;;;;;;YACnC,KAAK;gBACD,qBAAO,8OAAC,kKAAW;oBAAC,QAAQ,IAAM,kBAAkB;oBAAU,aAAa;;;;;;YAC/E,KAAK;gBACD,OAAO,8BAAgB,8OAAC,gKAAS;oBAAC,eAAe;oBAAe,QAAQ,IAAM,kBAAkB;;;;;6EAAgB,8OAAC,iKAAU;oBAAC,YAAY;;;;;;YAC5I,KAAK;gBACD,qBAAO,8OAAC,kKAAW;oBAAC,QAAQ,IAAM,kBAAkB;;;;;;YACxD,KAAK;gBACD,qBAAO,8OAAC,oKAAa;oBAAC,QAAQ,IAAM,kBAAkB;;;;;;YAC1D,KAAK;gBACD,qBAAO,8OAAC,qKAAc;oBAAC,QAAQ,IAAM,kBAAkB;oBAAU,iBAAiB;;;;;;YACtF;gBACI,qBAAO,8OAAC,iKAAU;oBAAC,YAAY;;;;;;QACvC;IACJ;IAEA,qBAAO,8OAAC;kBAAK;;;;;;AACjB;AAEe,SAAS;IACpB,qBAAO,8OAAC;;;;;AACZ","debugId":null}}]
}